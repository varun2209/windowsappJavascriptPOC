#define MCG_WINRT_SUPPORTED
using Mcg.System;
using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.WindowsRuntime;


// -----------------------------------------------------------------------------------------------------------
// 
// WARNING: THIS SOURCE FILE IS FOR 32-BIT BUILDS ONLY!
// 
// MCG GENERATED CODE
// 
// This C# source file is generated by MCG and is added into the application at compile time to support interop features.
// 
// It has three primary components:
// 
// 1. Public type definitions with interop implementation used by this application including WinRT & COM data structures and P/Invokes.
// 
// 2. The 'McgInterop' class containing marshaling code that acts as a bridge from managed code to native code.
// 
// 3. The 'McgNative' class containing marshaling code and native type definitions that call into native code and are called by native code.
// 
// -----------------------------------------------------------------------------------------------------------
// 
// warning CS0067: The event 'event' is never used
#pragma warning disable 67
// warning CS0169: The field 'field' is never used
#pragma warning disable 169
// warning CS0649: Field 'field' is never assigned to, and will always have its default value 0
#pragma warning disable 649
// warning CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// warning CS0108 'member1' hides inherited member 'member2'. Use the new keyword if hiding was intended.
#pragma warning disable 108
// warning CS0114 'member1' hides inherited member 'member2'.  To make the current method override that implementation, add the override keyword. Otherwise add the new keyword.
#pragma warning disable 114
// warning CS0659 'type' overrides Object.Equals but does not override GetHashCode.
#pragma warning disable 659
// warning CS0465 Introducing a 'Finalize' method can interfere with destructor invocation. Did you intend to declare a destructor?
#pragma warning disable 465
// warning CS0028 'function declaration' has the wrong signature to be an entry point
#pragma warning disable 28
// warning CS0162 Unreachable code Detected
#pragma warning disable 162
// warning CS0628 new protected member declared in sealed class
#pragma warning disable 628

namespace McgInterop
{
	internal unsafe static partial class ForwardComSharedStubs
	{
		// Signature, Windows.Foundation.IUriEscapeStatics.UnescapeComponent, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static string Func_string__string__(
					global::System.__ComObject __this, 
					string toUnescape, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_toUnescape = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.HSTRING unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
			string value__retval = default(string);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_toUnescape = toUnescape)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_toUnescape;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_toUnescape, toUnescape, &(hstring_header_toUnescape), &(unsafe_toUnescape));
					unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_toUnescape, 
										&(unsafe_value__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					value__retval = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_value__retval);
				}
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe_value__retval.handle);
			}
		}

		// Signature, Windows.Foundation.IUriRuntimeClassWithAbsoluteCanonicalUri.get_AbsoluteCanonicalUri, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static string Func_string__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
			string value__retval = default(string);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_value__retval);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe_value__retval.handle);
			}
		}

		// Signature, Windows.UI.Xaml.Data.IValueConverter.Convert, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_object__Type__object__string__object__(
					global::System.__ComObject __this, 
					object value, 
					global::System.Type targetType, 
					object parameter, 
					string language, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Type__Impl.UnsafeType unsafe_targetType;
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_parameter = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Runtime.InteropServices.HSTRING unsafe_language = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_returnValue__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object returnValue__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(value);
				global::System.Runtime.InteropServices.HSTRING unsafe_targetType__HSTRING__Name;
				int unsafe_targetType__int__Kind;
				global::System.Runtime.InteropServices.McgMarshal.TypeToTypeName(
									targetType, 
									out unsafe_targetType__HSTRING__Name, 
									out unsafe_targetType__int__Kind
								);
				unsafe_targetType.Name = unsafe_targetType__HSTRING__Name;
				unsafe_targetType.Kind = (global::Windows.UI.Xaml.Interop.TypeKind)unsafe_targetType__int__Kind;
				unsafe_parameter = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(parameter);
				fixed (char* pBuffer_language = language)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_language;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_language, language, &(hstring_header_language), &(unsafe_language));
					unsafe_returnValue__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_value, 
										unsafe_targetType, 
										unsafe_parameter, 
										unsafe_language, 
										&(unsafe_returnValue__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					returnValue__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_returnValue__retval));
				}
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_parameter)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_IntPtr__out_IntPtr__IntPtr__(
					global::System.__ComObject __this, 
					global::System.IntPtr outer, 
					out global::System.IntPtr inner, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_inner;
			global::System.IntPtr unsafe_instance__retval;
			global::System.IntPtr instance__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								outer, 
								&(unsafe_inner), 
								&(unsafe_instance__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			instance__retval = unsafe_instance__retval;
			inner = unsafe_inner;
			// Return
			return instance__retval;
		}

		// Signature, Windows.UI.Xaml.IApplicationStatics.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Application__Windows_UI_Xaml__Application *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Application Func_UI_Xaml_Application__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IApplication__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.IApplication__Impl.Vtbl**);
			global::Windows.UI.Xaml.Application value__retval = default(global::Windows.UI.Xaml.Application);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Application)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.IApplication).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Application).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.ApplicationInitializationCallback.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_ApplicationInitializationCallbackParams__Windows_UI_Xaml__ApplicationInitializationCallbackParams *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_ApplicationInitializationCallbackParams__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.ApplicationInitializationCallbackParams p, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IApplicationInitializationCallbackParams__Impl.Vtbl** unsafe_p = default(global::Windows.UI.Xaml.IApplicationInitializationCallbackParams__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_p = (global::Windows.UI.Xaml.IApplicationInitializationCallbackParams__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									p, 
									typeof(global::Windows.UI.Xaml.IApplicationInitializationCallbackParams).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_p
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_p)));
				global::System.GC.KeepAlive(p);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationStatics.Start, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_ApplicationInitializationCallback__Windows_UI_Xaml__ApplicationInitializationCallback *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_ApplicationInitializationCallback__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.ApplicationInitializationCallback callback, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ApplicationInitializationCallback__Impl.Vtbl** unsafe_callback = default(global::Windows.UI.Xaml.ApplicationInitializationCallback__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_callback = (global::Windows.UI.Xaml.ApplicationInitializationCallback__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									callback, 
									typeof(global::Windows.UI.Xaml.ApplicationInitializationCallback).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget0>(global::Windows.UI.Xaml.ApplicationInitializationCallback__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_callback
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_callback)));
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationStatics.LoadComponent, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_Primitives_ComponentResourceLocation__Windows_UI_Xaml_Controls_Primitives__ComponentResourceLocation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__Uri__int(
					global::System.__ComObject __this, 
					object component, 
					global::System.Uri resourceLocator, 
					int componentResourceLocation, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_component = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl** unsafe_resourceLocator = default(global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_component = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(component);
				if (resourceLocator != null)
					unsafe_resourceLocator = (global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**)global::McgInterop.McgHelpers.SystemUri2WindowsFoundationUri(resourceLocator);
				else
					unsafe_resourceLocator = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_component, 
									unsafe_resourceLocator, 
									componentResourceLocation
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_component)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceLocator)));
			}
		}

		// Signature, Windows.UI.Xaml.IApplication.get_RequestedTheme, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_ApplicationTheme__Windows_UI_Xaml__ApplicationTheme, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.ApplicationTheme Func_UI_Xaml_ApplicationTheme__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ApplicationTheme unsafe_value__retval;
			global::Windows.UI.Xaml.ApplicationTheme value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IApplication.put_RequestedTheme, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_ApplicationTheme__Windows_UI_Xaml__ApplicationTheme, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int(
					global::System.__ComObject __this, 
					int value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.UnhandledExceptionEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UnhandledExceptionEventArgs__Windows_UI_Xaml__UnhandledExceptionEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_UnhandledExceptionEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.UnhandledExceptionEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.IUnhandledExceptionEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.IUnhandledExceptionEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.IUnhandledExceptionEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.IUnhandledExceptionEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IApplication.add_UnhandledException, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_UnhandledExceptionEventHandler__Windows_UI_Xaml__UnhandledExceptionEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_UnhandledExceptionEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UnhandledExceptionEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.UnhandledExceptionEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.UnhandledExceptionEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.UnhandledExceptionEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.UnhandledExceptionEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget1>(global::Windows.UI.Xaml.UnhandledExceptionEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IApplication.remove_UnhandledException, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.SuspendingEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_SuspendingEventArgs__Windows_ApplicationModel__SuspendingEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__ApplicationModel_SuspendingEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.ApplicationModel.SuspendingEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.ApplicationModel.ISuspendingEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.ApplicationModel.ISuspendingEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.ApplicationModel.ISuspendingEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.ApplicationModel.ISuspendingEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IApplication.add_Suspending, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_SuspendingEventHandler__Windows_UI_Xaml__SuspendingEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_SuspendingEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.SuspendingEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.SuspendingEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.SuspendingEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.SuspendingEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.SuspendingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget2>(global::Windows.UI.Xaml.SuspendingEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IApplication.add_Resuming, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_object___Windows_Foundation__EventHandler_A_object_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_object__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<object> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_System_Object_V___Impl.Vtbl** unsafe_value = default(global::System.EventHandler_A_System_Object_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::System.EventHandler_A_System_Object_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::System.EventHandler<object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget3>(global::System.EventHandler_A_System_Object_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IUnhandledExceptionEventArgs.get_Exception, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTHResultMarshaller] System_Exception__Windows_Foundation__HResult, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Exception Func_Exception__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Exception__Impl.UnsafeType unsafe_value__retval = default(global::System.Exception__Impl.UnsafeType);
			global::System.Exception value__retval = default(global::System.Exception);
			int unsafe___return__;
			// Marshalling
			unsafe_value__retval = default(global::System.Exception__Impl.UnsafeType);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = global::System.Runtime.InteropServices.McgMarshal.GetExceptionForHR(
								unsafe_value__retval.Value, 
								true
							);
			// Return
			return value__retval;
		}

		// Signature, Windows.ApplicationModel.ISuspendingEventArgs.get_SuspendingOperation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_SuspendingOperation__Windows_ApplicationModel__SuspendingOperation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.SuspendingOperation Func_ApplicationModel_SuspendingOperation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.ISuspendingOperation__Impl.Vtbl** unsafe_value__retval = default(global::Windows.ApplicationModel.ISuspendingOperation__Impl.Vtbl**);
			global::Windows.ApplicationModel.SuspendingOperation value__retval = default(global::Windows.ApplicationModel.SuspendingOperation);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.ApplicationModel.SuspendingOperation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.ApplicationModel.ISuspendingOperation).TypeHandle, 
									typeof(global::Windows.ApplicationModel.SuspendingOperation).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.ISuspendingOperation.GetDeferral, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_SuspendingDeferral__Windows_ApplicationModel__SuspendingDeferral *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.SuspendingDeferral Func_ApplicationModel_SuspendingDeferral__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.ISuspendingDeferral__Impl.Vtbl** unsafe_deferral__retval = default(global::Windows.ApplicationModel.ISuspendingDeferral__Impl.Vtbl**);
			global::Windows.ApplicationModel.SuspendingDeferral deferral__retval = default(global::Windows.ApplicationModel.SuspendingDeferral);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_deferral__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_deferral__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				deferral__retval = (global::Windows.ApplicationModel.SuspendingDeferral)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_deferral__retval), 
									typeof(global::Windows.ApplicationModel.ISuspendingDeferral).TypeHandle, 
									typeof(global::Windows.ApplicationModel.SuspendingDeferral).TypeHandle
								);
				// Return
				return deferral__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_deferral__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.ISuspendingDeferral.Complete, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnActivated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Activation_IActivatedEventArgs__Windows_ApplicationModel_Activation__IActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Activation_IActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Activation.IActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.IActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnLaunched, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Activation_LaunchActivatedEventArgs__Windows_ApplicationModel_Activation__LaunchActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Activation_LaunchActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Activation.LaunchActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnFileActivated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Activation_FileActivatedEventArgs__Windows_ApplicationModel_Activation__FileActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Activation_FileActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Activation.FileActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.IFileActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.IFileActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.ApplicationModel.Activation.IFileActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.IFileActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnSearchActivated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Activation_SearchActivatedEventArgs__Windows_ApplicationModel_Activation__SearchActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Activation_SearchActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Activation.SearchActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.ISearchActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.ISearchActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.ApplicationModel.Activation.ISearchActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.ISearchActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnShareTargetActivated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Activation_ShareTargetActivatedEventArgs__Windows_ApplicationModel_Activation__ShareTargetActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Activation_ShareTargetActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Activation.ShareTargetActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.IShareTargetActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.IShareTargetActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.ApplicationModel.Activation.IShareTargetActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.IShareTargetActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnFileOpenPickerActivated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Activation_FileOpenPickerActivatedEventArgs__Windows_ApplicationModel_Activation__FileOpenPickerActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Activation_FileOpenPickerActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Activation.FileOpenPickerActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.IFileOpenPickerActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.IFileOpenPickerActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.ApplicationModel.Activation.IFileOpenPickerActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.IFileOpenPickerActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnFileSavePickerActivated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Activation_FileSavePickerActivatedEventArgs__Windows_ApplicationModel_Activation__FileSavePickerActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Activation_FileSavePickerActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Activation.FileSavePickerActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.IFileSavePickerActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.IFileSavePickerActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.ApplicationModel.Activation.IFileSavePickerActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.IFileSavePickerActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnCachedFileUpdaterActivated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Activation_CachedFileUpdaterActivatedEventArgs__Windows_ApplicationModel_Activation__CachedFileUpdaterActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Activation_CachedFileUpdaterActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Activation.CachedFileUpdaterActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.ICachedFileUpdaterActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.ICachedFileUpdaterActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.ApplicationModel.Activation.ICachedFileUpdaterActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.ICachedFileUpdaterActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnWindowCreated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_WindowCreatedEventArgs__Windows_UI_Xaml__WindowCreatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_WindowCreatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.WindowCreatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IWindowCreatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.IWindowCreatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.UI.Xaml.IWindowCreatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.IWindowCreatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.ApplicationModel.Activation.IActivatedEventArgs.get_PreviousExecutionState, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_ApplicationModel_Activation_ApplicationExecutionState__Windows_ApplicationModel_Activation__ApplicationExecutionState, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Activation.ApplicationExecutionState Func_ApplicationModel_Activation_ApplicationExecutionState__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState unsafe_value__retval;
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Input.KeyEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_KeyRoutedEventArgs__Windows_UI_Xaml_Input__KeyRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_KeyRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_KeyUp, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_KeyEventHandler__Windows_UI_Xaml_Input__KeyEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_KeyEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.KeyEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.KeyEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget4>(global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.RoutedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_RoutedEventArgs__Windows_UI_Xaml__RoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_RoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.RoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.IRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.IRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.IRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.IRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_GotFocus, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_RoutedEventHandler__Windows_UI_Xaml__RoutedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_RoutedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.RoutedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.RoutedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.RoutedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.RoutedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.RoutedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget5>(global::Windows.UI.Xaml.RoutedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.DragEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DragEventArgs__Windows_UI_Xaml__DragEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_DragEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.DragEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.IDragEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.IDragEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.IDragEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.IDragEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_DragEnter, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_DragEventHandler__Windows_UI_Xaml__DragEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_DragEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DragEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.DragEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.DragEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.DragEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.DragEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget6>(global::Windows.UI.Xaml.DragEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.PointerEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_PointerRoutedEventArgs__Windows_UI_Xaml_Input__PointerRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_PointerRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_PointerPressed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_PointerEventHandler__Windows_UI_Xaml_Input__PointerEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_PointerEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.PointerEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.PointerEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget7>(global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.TappedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_TappedRoutedEventArgs__Windows_UI_Xaml_Input__TappedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_TappedRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.TappedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_Tapped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_TappedEventHandler__Windows_UI_Xaml_Input__TappedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_TappedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.TappedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.TappedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.TappedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.TappedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.TappedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget8>(global::Windows.UI.Xaml.Input.TappedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.DoubleTappedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_DoubleTappedRoutedEventArgs__Windows_UI_Xaml_Input__DoubleTappedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_DoubleTappedRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_DoubleTapped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_DoubleTappedEventHandler__Windows_UI_Xaml_Input__DoubleTappedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_DoubleTappedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.DoubleTappedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.DoubleTappedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.DoubleTappedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget9>(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.HoldingEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_HoldingRoutedEventArgs__Windows_UI_Xaml_Input__HoldingRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_HoldingRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.HoldingRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_Holding, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_HoldingEventHandler__Windows_UI_Xaml_Input__HoldingEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_HoldingEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.HoldingEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.HoldingEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.HoldingEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.HoldingEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.HoldingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget10>(global::Windows.UI.Xaml.Input.HoldingEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.RightTappedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_RightTappedRoutedEventArgs__Windows_UI_Xaml_Input__RightTappedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_RightTappedRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.RightTappedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_RightTapped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_RightTappedEventHandler__Windows_UI_Xaml_Input__RightTappedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_RightTappedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.RightTappedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.RightTappedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.RightTappedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.RightTappedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.RightTappedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget11>(global::Windows.UI.Xaml.Input.RightTappedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.ManipulationStartingEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationStartingRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationStartingRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_ManipulationStartingRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_ManipulationStarting, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationStartingEventHandler__Windows_UI_Xaml_Input__ManipulationStartingEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_ManipulationStartingEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget12>(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationInertiaStartingRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationInertiaStartingRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_ManipulationInertiaStartingRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_ManipulationInertiaStarting, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationInertiaStartingEventHandler__Windows_UI_Xaml_Input__ManipulationInertiaStartingEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_ManipulationInertiaStartingEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget13>(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.ManipulationStartedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationStartedRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationStartedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_ManipulationStartedRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_ManipulationStarted, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationStartedEventHandler__Windows_UI_Xaml_Input__ManipulationStartedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_ManipulationStartedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget14>(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.ManipulationDeltaEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationDeltaRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationDeltaRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_ManipulationDeltaRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_ManipulationDelta, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationDeltaEventHandler__Windows_UI_Xaml_Input__ManipulationDeltaEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_ManipulationDeltaEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget15>(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.ManipulationCompletedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationCompletedRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationCompletedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_ManipulationCompletedRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_ManipulationCompleted, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationCompletedEventHandler__Windows_UI_Xaml_Input__ManipulationCompletedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_ManipulationCompletedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget16>(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElementOverrides.OnCreateAutomationPeer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationPeer Func_UI_Xaml_Automation_Peers_AutomationPeer__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer returnValue__retval = default(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElementOverrides.FindSubElementsForTouchTargeting, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_System_Collections_Generic_IEnumerable_1_Windows_Foundation_Point____Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Collections_IIterable_A_Windows_Foundation_Point_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> Func__Point___Rect___IEnumerable_1__IEnumerable_1__Point__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Point point, 
					global::Windows.Foundation.Rect boundingRect, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_IEnumerable_A_Windows_Foundation_Point_V__V___Impl.Vtbl** unsafe_returnValue__retval = default(global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_IEnumerable_A_Windows_Foundation_Point_V__V___Impl.Vtbl**);
			global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> returnValue__retval = default(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									point, 
									boundingRect, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>>).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetPatternCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Automation_Peers_PatternInterface__Windows_UI_Xaml_Automation_Peers__PatternInterface, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_intobject__(
					global::System.__ComObject __this, 
					int patternInterface, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_returnValue__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object returnValue__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									patternInterface, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_returnValue__retval));
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetAutomationControlTypeCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationControlType__Windows_UI_Xaml_Automation_Peers__AutomationControlType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationControlType Func_UI_Xaml_Automation_Peers_AutomationControlType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.AutomationControlType unsafe_returnValue__retval;
			global::Windows.UI.Xaml.Automation.Peers.AutomationControlType returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval;
			// Return
			return returnValue__retval;
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetBoundingRectangleCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Rect Func__Rect__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Rect unsafe_returnValue__retval;
			global::Windows.Foundation.Rect returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval;
			// Return
			return returnValue__retval;
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetChildrenCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IList_1_Windows_UI_Xaml_Automation_Peers_AutomationPeer___Windows_Foundation_Collections__IVector_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> Func__IList_1_UI_Xaml_Automation_Peers_AutomationPeer___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V___Impl.Vtbl** unsafe_returnValue__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V___Impl.Vtbl**);
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> returnValue__retval = default(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetClickablePointCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Point Func__Point__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Point unsafe_returnValue__retval;
			global::Windows.Foundation.Point returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval;
			// Return
			return returnValue__retval;
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetOrientationCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationOrientation__Windows_UI_Xaml_Automation_Peers__AutomationOrientation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation Func_UI_Xaml_Automation_Peers_AutomationOrientation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation unsafe_returnValue__retval;
			global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval;
			// Return
			return returnValue__retval;
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.HasKeyboardFocusCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_bool__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			bool returnValue__retval;
			sbyte unsafe_returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval != 0;
			// Return
			return returnValue__retval;
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetPeerFromPointCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationPeer Func__Point__UI_Xaml_Automation_Peers_AutomationPeer__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Point point, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer returnValue__retval = default(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									point, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetLiveSettingCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationLiveSetting__Windows_UI_Xaml_Automation_Peers__AutomationLiveSetting, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting Func_UI_Xaml_Automation_Peers_AutomationLiveSetting__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting unsafe_returnValue__retval;
			global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval;
			// Return
			return returnValue__retval;
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationPeer Func_uint__UI_Xaml_Automation_Peers_AutomationPeer__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.get_Size, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_Automation_Peers_AutomationPeer___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> Func__IReadOnlyList_1_UI_Xaml_Automation_Peers_AutomationPeer___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_AutomationPeer__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeer value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_Automation_Peers_AutomationPeer__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeer value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.RemoveAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Automation_Peers_AutomationPeer__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeer value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_AutomationPeer__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_Automation_Peers_AutomationPeer__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_AutomationPeer___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_AutomationPeer___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_AutomationPeer__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected.PeerFromProvider, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Provider_IRawElementProviderSimple__Windows_UI_Xaml_Automation_Provider__IRawElementProviderSimple *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationPeer Func_UI_Xaml_Automation_Provider_IRawElementProviderSimple__UI_Xaml_Automation_Peers_AutomationPeer__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple provider, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple__Impl.Vtbl** unsafe_provider = default(global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer returnValue__retval = default(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_provider = (global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									provider, 
									typeof(global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple).TypeHandle
								);
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_provider, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_provider)));
				global::System.GC.KeepAlive(provider);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected.ProviderFromPeer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Provider_IRawElementProviderSimple__Windows_UI_Xaml_Automation_Provider__IRawElementProviderSimple *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple Func_UI_Xaml_Automation_Peers_AutomationPeer__UI_Xaml_Automation_Provider_IRawElementProviderSimple__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeer peer, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe_peer = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple returnValue__retval = default(global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_peer = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									peer, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
								);
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_peer, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_peer)));
				global::System.GC.KeepAlive(peer);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetElementFromPointCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func__Point__object__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Point pointInWindowCoordinates, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_returnValue__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object returnValue__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									pointInWindowCoordinates, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_returnValue__retval));
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetFocusedElementCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_object__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_returnValue__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object returnValue__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_returnValue__retval));
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetAnnotationsCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IList_1_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation___Windows_Foundation_Collections__IVector_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> Func__IList_1_UI_Xaml_Automation_Peers_AutomationPeerAnnotation___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V___Impl.Vtbl** unsafe_returnValue__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V___Impl.Vtbl**);
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> returnValue__retval = default(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetPositionInSetCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_int__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe_returnValue__retval;
			int returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval;
			// Return
			return returnValue__retval;
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation Func_uint__UI_Xaml_Automation_Peers_AutomationPeerAnnotation__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> Func__IReadOnlyList_1_UI_Xaml_Automation_Peers_AutomationPeerAnnotation___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_Automation_Peers_AutomationPeerAnnotation__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_AutomationPeerAnnotation___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation Func_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4.GetLandmarkTypeCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationLandmarkType__Windows_UI_Xaml_Automation_Peers__AutomationLandmarkType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType Func_UI_Xaml_Automation_Peers_AutomationLandmarkType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType unsafe_returnValue__retval;
			global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval;
			// Return
			return returnValue__retval;
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Foundation.Point>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Foundation_Point___Windows_Foundation_Collections__IIterator_A_Windows_Foundation_Point_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.Point> Func__Collections_IIterator_1__Point___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Foundation_Point_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Foundation_Point_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.Point> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.Point>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.Point>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.Point>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Foundation.Point>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_Foundation_Point__Windows_Foundation__Point *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__Point__uint__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Point[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Foundation.Point* unsafe_items;
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			// Marshalling
			if (items != null)
				unsafe_items_mcgLength = (uint)items.Length;
			fixed (global::Windows.Foundation.Point* pinned_items = global::McgInterop.McgCoreHelpers.GetArrayForCompat(items))
			{
				unsafe_items = (global::Windows.Foundation.Point*)pinned_items;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
			}
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<Windows.Foundation.Point>>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_System_Collections_Generic_IEnumerable_1_Windows_Foundation_Point____Windows_Foundation_Collections__IIterator_A_Windows_Foundation_Collections_IIterable_A_Windows_Foundation_Point_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> Func__Collections_IIterator_1__IEnumerable_1__Point__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_IEnumerable_A_Windows_Foundation_Point_V__V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_IEnumerable_A_Windows_Foundation_Point_V__V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.IEnumerable<Windows.Foundation.Point>>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_Windows_Foundation_Point___Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Point_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point> Func__IEnumerable_1__Point___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IEnumerable_A_Windows_Foundation_Point_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IEnumerable_A_Windows_Foundation_Point_V___Impl.Vtbl**);
			global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point> __value__retval = default(global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.IEnumerable<Windows.Foundation.Point>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_IEnumerable_1_Windows_Foundation_Point___Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Point_V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__IEnumerable_1__Point___uint__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.IEnumerable_A_Windows_Foundation_Point_V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.IEnumerable_A_Windows_Foundation_Point_V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.IEnumerable_A_Windows_Foundation_Point_V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.IEnumerable_A_Windows_Foundation_Point_V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_Windows_Foundation_Point___Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Point_V_ * items
						items[mcgIdx] = (global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_Windows_Foundation_Point___Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Point_V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.DragStartingEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DragStartingEventArgs__Windows_UI_Xaml__DragStartingEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_UIElement__UI_Xaml_DragStartingEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement sender, 
					global::Windows.UI.Xaml.DragStartingEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDragStartingEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.IDragStartingEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.IDragStartingEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.IDragStartingEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement3.add_DragStarting, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_UIElement__Windows_UI_Xaml_DragStartingEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_UIElement__UI_Xaml_DragStartingEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget17>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.DropCompletedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DropCompletedEventArgs__Windows_UI_Xaml__DropCompletedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_UIElement__UI_Xaml_DropCompletedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement sender, 
					global::Windows.UI.Xaml.DropCompletedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDropCompletedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.IDropCompletedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.IDropCompletedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.IDropCompletedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement3.add_DropCompleted, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_UIElement__Windows_UI_Xaml_DropCompletedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_UIElement__UI_Xaml_DropCompletedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget18>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.put_Name, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__(
					global::System.__ComObject __this, 
					string value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_value = default(global::System.Runtime.InteropServices.HSTRING);
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_value = value)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_value;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_value, value, &(hstring_header_value), &(unsafe_value));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			// Return
		}

		// Signature, Windows.UI.Xaml.SizeChangedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_SizeChangedEventArgs__Windows_UI_Xaml__SizeChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_SizeChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.SizeChangedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.ISizeChangedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.ISizeChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.ISizeChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.ISizeChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.add_SizeChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_SizeChangedEventHandler__Windows_UI_Xaml__SizeChangedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_SizeChangedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.SizeChangedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.SizeChangedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.SizeChangedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.SizeChangedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.SizeChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget19>(global::Windows.UI.Xaml.SizeChangedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Size__Windows_Foundation__Size, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Size__Windows_Foundation__Size, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Size Func__Size___Size__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Size availableSize, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Size unsafe_returnValue__retval;
			global::Windows.Foundation.Size returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								availableSize, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval;
			// Return
			return returnValue__retval;
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.DataContextChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_FrameworkElement__Windows_UI_Xaml__FrameworkElement *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DataContextChangedEventArgs__Windows_UI_Xaml__DataContextChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_FrameworkElement__UI_Xaml_DataContextChangedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.FrameworkElement sender, 
					global::Windows.UI.Xaml.DataContextChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDataContextChangedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.IDataContextChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.IFrameworkElement).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.IDataContextChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.IDataContextChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement2.add_DataContextChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_FrameworkElement__Windows_UI_Xaml_DataContextChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_FrameworkElement__UI_Xaml_DataContextChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget20>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElementOverrides2.GoToElementStateCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_string__bool__bool__(
					global::System.__ComObject __this, 
					string stateName, 
					bool useTransitions, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_stateName = default(global::System.Runtime.InteropServices.HSTRING);
			sbyte unsafe_useTransitions;
			bool returnValue__retval;
			sbyte unsafe_returnValue__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_stateName = stateName)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_stateName;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_stateName, stateName, &(hstring_header_stateName), &(unsafe_stateName));
				unsafe_useTransitions = (useTransitions ? ((sbyte)1) : ((sbyte)0));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_stateName, 
									unsafe_useTransitions, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = unsafe_returnValue__retval != 0;
			}
			// Return
			return returnValue__retval;
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.FrameworkElement,System.Object>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_FrameworkElement__Windows_UI_Xaml__FrameworkElement *, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_FrameworkElement__object__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.FrameworkElement sender, 
					object args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl**);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_args = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.IFrameworkElement).TypeHandle
								);
				unsafe_args = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(args);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement3.add_Loading, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_FrameworkElement__object___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_object_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_FrameworkElement__object__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget21>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.DependencyPropertyChangedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyPropertyChangedEventArgs__Windows_UI_Xaml__DependencyPropertyChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_DependencyPropertyChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.IDependencyPropertyChangedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.IDependencyPropertyChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.IDependencyPropertyChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.IDependencyPropertyChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.add_IsEnabledChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_DependencyPropertyChangedEventHandler__Windows_UI_Xaml__DependencyPropertyChangedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_DependencyPropertyChangedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget22>(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnPointerEntered, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_PointerRoutedEventArgs__Windows_UI_Xaml_Input__PointerRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_PointerRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnTapped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_TappedRoutedEventArgs__Windows_UI_Xaml_Input__TappedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_TappedRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.TappedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnDoubleTapped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_DoubleTappedRoutedEventArgs__Windows_UI_Xaml_Input__DoubleTappedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_DoubleTappedRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnHolding, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_HoldingRoutedEventArgs__Windows_UI_Xaml_Input__HoldingRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_HoldingRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.HoldingRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnRightTapped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_RightTappedRoutedEventArgs__Windows_UI_Xaml_Input__RightTappedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_RightTappedRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.RightTappedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarting, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationStartingRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationStartingRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_ManipulationStartingRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationInertiaStarting, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationInertiaStartingRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationInertiaStartingRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_ManipulationInertiaStartingRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarted, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationStartedRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationStartedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_ManipulationStartedRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationDelta, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationDeltaRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationDeltaRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_ManipulationDeltaRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationCompleted, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationCompletedRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationCompletedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_ManipulationCompletedRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnKeyUp, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_KeyRoutedEventArgs__Windows_UI_Xaml_Input__KeyRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_KeyRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnGotFocus, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_RoutedEventArgs__Windows_UI_Xaml__RoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_RoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.RoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.IRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.IRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.IRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnDragEnter, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DragEventArgs__Windows_UI_Xaml__DragEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_DragEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DragEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDragEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.IDragEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.IDragEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.IDragEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlProtected.put_DefaultStyleKey, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__(
					global::System.__ComObject __this, 
					object value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(value);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DependencyObject Func_string__UI_Xaml_DependencyObject__(
					global::System.__ComObject __this, 
					string childName, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_childName = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.DependencyObject returnValue__retval = default(global::Windows.UI.Xaml.DependencyObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_childName = childName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_childName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_childName, childName, &(hstring_header_childName), &(unsafe_childName));
					unsafe_returnValue__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_childName, 
										&(unsafe_returnValue__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					returnValue__retval = (global::Windows.UI.Xaml.DependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_returnValue__retval), 
										typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle, 
										typeof(global::Windows.UI.Xaml.DependencyObject).TypeHandle
									);
				}
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IUserControl.get_Content, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.UIElement Func_UI_Xaml_UIElement__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.UIElement value__retval = default(global::Windows.UI.Xaml.UIElement);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.UIElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle, 
									typeof(global::Windows.UI.Xaml.UIElement).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IUserControl.put_Content, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_UIElement__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatedFrom, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Navigation_NavigationEventArgs__Windows_UI_Xaml_Navigation__NavigationEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Navigation_NavigationEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Navigation.NavigationEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.INavigationEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Navigation.INavigationEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Navigation.INavigationEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Navigation.INavigationEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatingFrom, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Navigation_NavigatingCancelEventArgs__Windows_UI_Xaml_Navigation__NavigatingCancelEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Navigation_NavigatingCancelEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.UIElement>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.UIElement Func_uint__UI_Xaml_UIElement__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.UIElement __value__retval = default(global::Windows.UI.Xaml.UIElement);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.UIElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle, 
									typeof(global::Windows.UI.Xaml.UIElement).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.UIElement>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_UIElement___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_UIElement_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.UIElement> Func__IReadOnlyList_1_UI_Xaml_UIElement___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_UIElement_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_UIElement_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.UIElement> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.UIElement>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.UIElement>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.UIElement>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.UIElement>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_UIElement__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.UIElement>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_UIElement__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.UIElement value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.UIElement>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_UIElement__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.UIElement[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement * items
						items[mcgIdx] = (global::Windows.UI.Xaml.UIElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle, 
											typeof(global::Windows.UI.Xaml.UIElement).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.UIElement>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_UIElement__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.UIElement>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_UIElement___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_UIElement_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.UIElement> Func__Collections_IIterator_1_UI_Xaml_UIElement___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_UIElement_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_UIElement_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.UIElement> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.UIElement>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.UIElement>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.UIElement>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.UIElement>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_UIElement__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement * items
						items[mcgIdx] = (global::Windows.UI.Xaml.UIElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle, 
											typeof(global::Windows.UI.Xaml.UIElement).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.DependencyObject>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_DependencyObject___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_DependencyObject_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.DependencyObject> Func__Collections_IIterator_1_UI_Xaml_DependencyObject___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_DependencyObject_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_DependencyObject_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.DependencyObject> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.DependencyObject>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.DependencyObject>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.DependencyObject>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.DependencyObject>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DependencyObject Func_UI_Xaml_DependencyObject__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.DependencyObject __value__retval = default(global::Windows.UI.Xaml.DependencyObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.DependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle, 
									typeof(global::Windows.UI.Xaml.DependencyObject).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.DependencyObject>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_DependencyObject__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject * items
						items[mcgIdx] = (global::Windows.UI.Xaml.DependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle, 
											typeof(global::Windows.UI.Xaml.DependencyObject).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.IDependencyObject>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_IDependencyObject___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_IDependencyObject_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject> Func__Collections_IIterator_1_UI_Xaml_IDependencyObject___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IDependencyObject_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IDependencyObject_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IDependencyObject>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IDependencyObject Func_UI_Xaml_IDependencyObject__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDependencyObject __value__retval = default(global::Windows.UI.Xaml.IDependencyObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IDependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IDependencyObject>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_IDependencyObject__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IDependencyObject[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IDependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.IDependencyObject2>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_IDependencyObject2___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_IDependencyObject2_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject2> Func__Collections_IIterator_1_UI_Xaml_IDependencyObject2___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IDependencyObject2_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IDependencyObject2_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject2> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject2>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject2>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject2>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IDependencyObject2>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IDependencyObject2 Func_UI_Xaml_IDependencyObject2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDependencyObject2 __value__retval = default(global::Windows.UI.Xaml.IDependencyObject2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IDependencyObject2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IDependencyObject2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IDependencyObject2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_IDependencyObject2__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IDependencyObject2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IDependencyObject2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IDependencyObject2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.IUIElement>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_IUIElement___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_IUIElement_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement> Func__Collections_IIterator_1_UI_Xaml_IUIElement___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IUIElement_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IUIElement_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IUIElement>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IUIElement Func_UI_Xaml_IUIElement__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.IUIElement __value__retval = default(global::Windows.UI.Xaml.IUIElement);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IUIElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IUIElement>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_IUIElement__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IUIElement[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IUIElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.IUIElementOverrides>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_IUIElementOverrides___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_IUIElementOverrides_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElementOverrides> Func__Collections_IIterator_1_UI_Xaml_IUIElementOverrides___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IUIElementOverrides_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IUIElementOverrides_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElementOverrides> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElementOverrides>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElementOverrides>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElementOverrides>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IUIElementOverrides>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IUIElementOverrides Func_UI_Xaml_IUIElementOverrides__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl**);
			global::Windows.UI.Xaml.IUIElementOverrides __value__retval = default(global::Windows.UI.Xaml.IUIElementOverrides);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IUIElementOverrides)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElementOverrides).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IUIElementOverrides>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_IUIElementOverrides__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IUIElementOverrides[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IUIElementOverrides)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElementOverrides).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.IUIElement2>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_IUIElement2___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_IUIElement2_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement2> Func__Collections_IIterator_1_UI_Xaml_IUIElement2___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IUIElement2_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IUIElement2_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement2> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement2>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement2>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement2>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IUIElement2>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IUIElement2 Func_UI_Xaml_IUIElement2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl**);
			global::Windows.UI.Xaml.IUIElement2 __value__retval = default(global::Windows.UI.Xaml.IUIElement2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IUIElement2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElement2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IUIElement2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_IUIElement2__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IUIElement2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IUIElement2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElement2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.IUIElement3>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_IUIElement3___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_IUIElement3_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement3> Func__Collections_IIterator_1_UI_Xaml_IUIElement3___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IUIElement3_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IUIElement3_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement3> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement3>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement3>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement3>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IUIElement3>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IUIElement3 Func_UI_Xaml_IUIElement3__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl**);
			global::Windows.UI.Xaml.IUIElement3 __value__retval = default(global::Windows.UI.Xaml.IUIElement3);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IUIElement3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElement3).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IUIElement3>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_IUIElement3__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IUIElement3[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IUIElement3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElement3).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.DependencyObject>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DependencyObject Func_uint__UI_Xaml_DependencyObject__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.DependencyObject __value__retval = default(global::Windows.UI.Xaml.DependencyObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.DependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle, 
									typeof(global::Windows.UI.Xaml.DependencyObject).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.DependencyObject>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_DependencyObject__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.DependencyObject>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_DependencyObject__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.DependencyObject[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject * items
						items[mcgIdx] = (global::Windows.UI.Xaml.DependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle, 
											typeof(global::Windows.UI.Xaml.DependencyObject).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IDependencyObject>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IDependencyObject Func_uint__UI_Xaml_IDependencyObject__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDependencyObject __value__retval = default(global::Windows.UI.Xaml.IDependencyObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IDependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IDependencyObject>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_IDependencyObject__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IDependencyObject value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IDependencyObject>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_IDependencyObject__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.IDependencyObject[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IDependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IDependencyObject2>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IDependencyObject2 Func_uint__UI_Xaml_IDependencyObject2__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDependencyObject2 __value__retval = default(global::Windows.UI.Xaml.IDependencyObject2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IDependencyObject2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IDependencyObject2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IDependencyObject2>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_IDependencyObject2__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IDependencyObject2 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IDependencyObject2).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IDependencyObject2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_IDependencyObject2__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.IDependencyObject2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IDependencyObject2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IDependencyObject2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IUIElement Func_uint__UI_Xaml_IUIElement__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.IUIElement __value__retval = default(global::Windows.UI.Xaml.IUIElement);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IUIElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_IUIElement__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IUIElement value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_IUIElement__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.IUIElement[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IUIElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElementOverrides>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IUIElementOverrides Func_uint__UI_Xaml_IUIElementOverrides__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl**);
			global::Windows.UI.Xaml.IUIElementOverrides __value__retval = default(global::Windows.UI.Xaml.IUIElementOverrides);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IUIElementOverrides)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElementOverrides).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElementOverrides>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_IUIElementOverrides__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IUIElementOverrides value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IUIElementOverrides).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElementOverrides>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_IUIElementOverrides__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.IUIElementOverrides[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IUIElementOverrides)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElementOverrides).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement2>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IUIElement2 Func_uint__UI_Xaml_IUIElement2__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl**);
			global::Windows.UI.Xaml.IUIElement2 __value__retval = default(global::Windows.UI.Xaml.IUIElement2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IUIElement2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElement2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement2>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_IUIElement2__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IUIElement2 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IUIElement2).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_IUIElement2__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.IUIElement2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IUIElement2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElement2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement3>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IUIElement3 Func_uint__UI_Xaml_IUIElement3__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl**);
			global::Windows.UI.Xaml.IUIElement3 __value__retval = default(global::Windows.UI.Xaml.IUIElement3);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IUIElement3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElement3).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement3>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_IUIElement3__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IUIElement3 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IUIElement3).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement3>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_IUIElement3__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.IUIElement3[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IUIElement3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElement3).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IPanel.get_Children, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_UIElementCollection__Windows_UI_Xaml_Controls__UIElementCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.UIElementCollection Func_UI_Xaml_Controls_UIElementCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_UIElement_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_UIElement_V___Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.UIElementCollection value__retval = default(global::Windows.UI.Xaml.Controls.UIElementCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Controls.UIElementCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.UIElementCollection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IPanel.get_Background, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Brush__Windows_UI_Xaml_Media__Brush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Brush Func_UI_Xaml_Media_Brush__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.IBrush__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Media.IBrush__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Brush value__retval = default(global::Windows.UI.Xaml.Media.Brush);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Media.Brush)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Media.IBrush).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.Brush).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IPanel.put_Background, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Brush__Windows_UI_Xaml_Media__Brush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Media_Brush__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Brush value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.IBrush__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.IBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.IBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.IBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IContentControlOverrides.OnContentChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__object__(
					global::System.__ComObject __this, 
					object oldContent, 
					object newContent, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_oldContent = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_newContent = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_oldContent = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(oldContent);
				unsafe_newContent = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(newContent);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_oldContent, 
									unsafe_newContent
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_oldContent)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_newContent)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IContentControlOverrides.OnContentTemplateChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DataTemplate__Windows_UI_Xaml__DataTemplate *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DataTemplate__Windows_UI_Xaml__DataTemplate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_DataTemplate__UI_Xaml_DataTemplate__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DataTemplate oldContentTemplate, 
					global::Windows.UI.Xaml.DataTemplate newContentTemplate, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl** unsafe_oldContentTemplate = default(global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl** unsafe_newContentTemplate = default(global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_oldContentTemplate = (global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									oldContentTemplate, 
									typeof(global::Windows.UI.Xaml.IDataTemplate).TypeHandle
								);
				unsafe_newContentTemplate = (global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									newContentTemplate, 
									typeof(global::Windows.UI.Xaml.IDataTemplate).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_oldContentTemplate, 
									unsafe_newContentTemplate
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_oldContentTemplate)));
				global::System.GC.KeepAlive(oldContentTemplate);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_newContentTemplate)));
				global::System.GC.KeepAlive(newContentTemplate);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IContentControlOverrides.OnContentTemplateSelectorChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_DataTemplateSelector__Windows_UI_Xaml_Controls__DataTemplateSelector *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_DataTemplateSelector__Windows_UI_Xaml_Controls__DataTemplateSelector *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_DataTemplateSelector__UI_Xaml_Controls_DataTemplateSelector__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector oldContentTemplateSelector, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector newContentTemplateSelector, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IDataTemplateSelector__Impl.Vtbl** unsafe_oldContentTemplateSelector = default(global::Windows.UI.Xaml.Controls.IDataTemplateSelector__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IDataTemplateSelector__Impl.Vtbl** unsafe_newContentTemplateSelector = default(global::Windows.UI.Xaml.Controls.IDataTemplateSelector__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_oldContentTemplateSelector = (global::Windows.UI.Xaml.Controls.IDataTemplateSelector__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									oldContentTemplateSelector, 
									typeof(global::Windows.UI.Xaml.Controls.IDataTemplateSelector).TypeHandle
								);
				unsafe_newContentTemplateSelector = (global::Windows.UI.Xaml.Controls.IDataTemplateSelector__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									newContentTemplateSelector, 
									typeof(global::Windows.UI.Xaml.Controls.IDataTemplateSelector).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_oldContentTemplateSelector, 
									unsafe_newContentTemplateSelector
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_oldContentTemplateSelector)));
				global::System.GC.KeepAlive(oldContentTemplateSelector);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_newContentTemplateSelector)));
				global::System.GC.KeepAlive(newContentTemplateSelector);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides.SelectTemplateCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DataTemplate__Windows_UI_Xaml__DataTemplate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DataTemplate Func_object__UI_Xaml_DependencyObject__UI_Xaml_DataTemplate__(
					global::System.__ComObject __this, 
					object item, 
					global::Windows.UI.Xaml.DependencyObject container, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_item = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_container = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl**);
			global::Windows.UI.Xaml.DataTemplate returnValue__retval = default(global::Windows.UI.Xaml.DataTemplate);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_item = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(item);
				unsafe_container = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									container, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_item, 
									unsafe_container, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.UI.Xaml.DataTemplate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.UI.Xaml.IDataTemplate).TypeHandle, 
									typeof(global::Windows.UI.Xaml.DataTemplate).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_item)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_container)));
				global::System.GC.KeepAlive(container);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2.SelectTemplateCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DataTemplate__Windows_UI_Xaml__DataTemplate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DataTemplate Func_object__UI_Xaml_DataTemplate__(
					global::System.__ComObject __this, 
					object item, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_item = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl**);
			global::Windows.UI.Xaml.DataTemplate returnValue__retval = default(global::Windows.UI.Xaml.DataTemplate);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_item = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(item);
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_item, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.UI.Xaml.DataTemplate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.UI.Xaml.IDataTemplate).TypeHandle, 
									typeof(global::Windows.UI.Xaml.DataTemplate).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_item)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.get_BaseType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Markup_IXamlType__Windows_UI_Xaml_Markup__IXamlType *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Markup.IXamlType Func_UI_Xaml_Markup_IXamlType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Markup.IXamlType__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Markup.IXamlType__Impl.Vtbl**);
			global::Windows.UI.Xaml.Markup.IXamlType value__retval = default(global::Windows.UI.Xaml.Markup.IXamlType);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Markup.IXamlType)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Markup.IXamlType).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.get_ContentProperty, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Markup_IXamlMember__Windows_UI_Xaml_Markup__IXamlMember *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Markup.IXamlMember Func_UI_Xaml_Markup_IXamlMember__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Markup.IXamlMember__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Markup.IXamlMember__Impl.Vtbl**);
			global::Windows.UI.Xaml.Markup.IXamlMember value__retval = default(global::Windows.UI.Xaml.Markup.IXamlMember);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Markup.IXamlMember)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Markup.IXamlMember).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.get_UnderlyingType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Type Func_Type__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Type value__retval;
			global::System.Type__Impl.UnsafeType unsafe_value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = global::System.Runtime.InteropServices.McgMarshal.TypeNameToType(
								unsafe_value__retval.Name, 
								((int)unsafe_value__retval.Kind)
							);
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.CreateFromString, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_string__object__(
					global::System.__ComObject __this, 
					string value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_value = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_instance__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object instance__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_value = value)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_value;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_value, value, &(hstring_header_value), &(unsafe_value));
					unsafe_instance__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_value, 
										&(unsafe_instance__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					instance__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_instance__retval));
				}
				// Return
				return instance__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_instance__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.GetMember, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Markup_IXamlMember__Windows_UI_Xaml_Markup__IXamlMember *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Markup.IXamlMember Func_string__UI_Xaml_Markup_IXamlMember__(
					global::System.__ComObject __this, 
					string name, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_name = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.UI.Xaml.Markup.IXamlMember__Impl.Vtbl** unsafe_xamlMember__retval = default(global::Windows.UI.Xaml.Markup.IXamlMember__Impl.Vtbl**);
			global::Windows.UI.Xaml.Markup.IXamlMember xamlMember__retval = default(global::Windows.UI.Xaml.Markup.IXamlMember);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_name = name)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_name;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_name, name, &(hstring_header_name), &(unsafe_name));
					unsafe_xamlMember__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_name, 
										&(unsafe_xamlMember__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					xamlMember__retval = (global::Windows.UI.Xaml.Markup.IXamlMember)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_xamlMember__retval), 
										typeof(global::Windows.UI.Xaml.Markup.IXamlMember).TypeHandle
									);
				}
				// Return
				return xamlMember__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_xamlMember__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.AddToMap, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__object__object__(
					global::System.__ComObject __this, 
					object instance, 
					object key, 
					object value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_instance = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_key = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_instance = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(instance);
				unsafe_key = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(key);
				unsafe_value = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(value);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_instance, 
									unsafe_key, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_instance)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_key)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlMember.GetValue, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_object__object__(
					global::System.__ComObject __this, 
					object instance, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_instance = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object value__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_instance = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(instance);
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_instance, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_value__retval));
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_instance)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreApplicationView.get_CoreWindow, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_CoreWindow__Windows_UI_Core__CoreWindow *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Core.CoreWindow Func_UI_Core_CoreWindow__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Core.ICoreWindow__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Core.ICoreWindow__Impl.Vtbl**);
			global::Windows.UI.Core.CoreWindow value__retval = default(global::Windows.UI.Core.CoreWindow);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Core.CoreWindow)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Core.ICoreWindow).TypeHandle, 
									typeof(global::Windows.UI.Core.CoreWindow).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.Core.CoreApplicationView,Windows.ApplicationModel.Activation.IActivatedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Activation_IActivatedEventArgs__Windows_ApplicationModel_Activation__IActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Core_CoreApplicationView__ApplicationModel_Activation_IActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.CoreApplicationView sender, 
					global::Windows.ApplicationModel.Activation.IActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe_sender = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle
								);
				unsafe_args = (global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.IActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreApplicationView.add_Activated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Activation_IActivatedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_ApplicationModel_Core_CoreApplicationView__ApplicationModel_Activation_IActivatedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Core.CoreApplicationView, global::Windows.ApplicationModel.Activation.IActivatedEventArgs> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Core.CoreApplicationView, global::Windows.ApplicationModel.Activation.IActivatedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget23>(global::Windows.Foundation.TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Core.ICoreWindow.get_Dispatcher, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_CoreDispatcher__Windows_UI_Core__CoreDispatcher *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Core.CoreDispatcher Func_UI_Core_CoreDispatcher__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Core.ICoreDispatcher__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Core.ICoreDispatcher__Impl.Vtbl**);
			global::Windows.UI.Core.CoreDispatcher value__retval = default(global::Windows.UI.Core.CoreDispatcher);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Core.CoreDispatcher)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Core.ICoreDispatcher).TypeHandle, 
									typeof(global::Windows.UI.Core.CoreDispatcher).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Core.ICoreDispatcher.RunAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Core_CoreDispatcherPriority__Windows_UI_Core__CoreDispatcherPriority, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Core_DispatchedHandler__Windows_UI_Core__DispatchedHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncAction__Windows_Foundation__IAsyncAction *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncAction Func_intUI_Core_DispatchedHandler___IAsyncAction__(
					global::System.__ComObject __this, 
					int priority, 
					global::Windows.UI.Core.DispatchedHandler agileCallback, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Core.DispatchedHandler__Impl.Vtbl** unsafe_agileCallback = default(global::Windows.UI.Core.DispatchedHandler__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction__Impl.Vtbl** unsafe_asyncAction__retval = default(global::Windows.Foundation.IAsyncAction__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction asyncAction__retval = default(global::Windows.Foundation.IAsyncAction);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_agileCallback = (global::Windows.UI.Core.DispatchedHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									agileCallback, 
									typeof(global::Windows.UI.Core.DispatchedHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget24>(global::Windows.UI.Core.DispatchedHandler__Impl.Invoke)
								);
				unsafe_asyncAction__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									priority, 
									unsafe_agileCallback, 
									&(unsafe_asyncAction__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				asyncAction__retval = (global::Windows.Foundation.IAsyncAction)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_asyncAction__retval), 
									typeof(global::Windows.Foundation.IAsyncAction).TypeHandle
								);
				// Return
				return asyncAction__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_agileCallback)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncAction__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreImmersiveApplication3.CreateNewView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_IFrameworkViewSource__Windows_ApplicationModel_Core__IFrameworkViewSource *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.CoreApplicationView Func_ApplicationModel_Core_IFrameworkViewSource__ApplicationModel_Core_CoreApplicationView__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.IFrameworkViewSource viewSource, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.IFrameworkViewSource__Impl.Vtbl** unsafe_viewSource = default(global::Windows.ApplicationModel.Core.IFrameworkViewSource__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe_view__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.CoreApplicationView view__retval = default(global::Windows.ApplicationModel.Core.CoreApplicationView);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_viewSource = (global::Windows.ApplicationModel.Core.IFrameworkViewSource__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									viewSource, 
									typeof(global::Windows.ApplicationModel.Core.IFrameworkViewSource).TypeHandle
								);
				unsafe_view__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_viewSource, 
									&(unsafe_view__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				view__retval = (global::Windows.ApplicationModel.Core.CoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_view__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Core.CoreApplicationView).TypeHandle
								);
				// Return
				return view__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_viewSource)));
				global::System.GC.KeepAlive(viewSource);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_view__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreApplication.add_Suspending, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Windows_ApplicationModel_SuspendingEventArgs___Windows_Foundation__EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_ApplicationModel_SuspendingEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Windows.ApplicationModel.SuspendingEventArgs> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V___Impl.Vtbl** unsafe_handler = default(global::System.EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::System.EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::System.EventHandler<global::Windows.ApplicationModel.SuspendingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget2>(global::System.EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreApplication.get_Properties, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IPropertySet__Windows_Foundation_Collections__IPropertySet *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IPropertySet Func__Collections_IPropertySet__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IPropertySet__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Foundation.Collections.IPropertySet__Impl.Vtbl**);
			global::Windows.Foundation.Collections.IPropertySet value__retval = default(global::Windows.Foundation.Collections.IPropertySet);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Foundation.Collections.IPropertySet)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Foundation.Collections.IPropertySet).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreApplication.GetCurrentView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.CoreApplicationView Func_ApplicationModel_Core_CoreApplicationView__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe_value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.CoreApplicationView value__retval = default(global::Windows.ApplicationModel.Core.CoreApplicationView);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.ApplicationModel.Core.CoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Core.CoreApplicationView).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreApplication.Run, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_IFrameworkViewSource__Windows_ApplicationModel_Core__IFrameworkViewSource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Core_IFrameworkViewSource__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.IFrameworkViewSource viewSource, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.IFrameworkViewSource__Impl.Vtbl** unsafe_viewSource = default(global::Windows.ApplicationModel.Core.IFrameworkViewSource__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_viewSource = (global::Windows.ApplicationModel.Core.IFrameworkViewSource__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									viewSource, 
									typeof(global::Windows.ApplicationModel.Core.IFrameworkViewSource).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_viewSource
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_viewSource)));
				global::System.GC.KeepAlive(viewSource);
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreApplication.RunWithActivationFactories, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IGetActivationFactory__Windows_Foundation__IGetActivationFactory *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IGetActivationFactory__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IGetActivationFactory activationFactoryCallback, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IGetActivationFactory__Impl.Vtbl** unsafe_activationFactoryCallback = default(global::Windows.Foundation.IGetActivationFactory__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_activationFactoryCallback = (global::Windows.Foundation.IGetActivationFactory__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									activationFactoryCallback, 
									typeof(global::Windows.Foundation.IGetActivationFactory).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_activationFactoryCallback
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_activationFactoryCallback)));
				global::System.GC.KeepAlive(activationFactoryCallback);
			}
		}

		// Signature, Windows.Foundation.Collections.MapChangedEventHandler<string,System.Object>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IObservableMap_2_string__object___Windows_Foundation_Collections__IObservableMap_A_string_j_object_V_ *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IMapChangedEventArgs_1_string___Windows_Foundation_Collections__IMapChangedEventArgs_A_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Collections_IObservableMap_2_string__object__Collections_IMapChangedEventArgs_1_string___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Collections.IObservableMap<string, object> sender, 
					global::Windows.Foundation.Collections.IMapChangedEventArgs<string> @event, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IObservableMap_A_string_j_System_Object_V___Impl.Vtbl** unsafe_sender = default(global::Windows.Foundation.Collections.IObservableMap_A_string_j_System_Object_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IMapChangedEventArgs_A_string_V___Impl.Vtbl** unsafe_event = default(global::Windows.Foundation.Collections.IMapChangedEventArgs_A_string_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.Foundation.Collections.IObservableMap_A_string_j_System_Object_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.Foundation.Collections.IObservableMap<string, object>).TypeHandle
								);
				unsafe_event = (global::Windows.Foundation.Collections.IMapChangedEventArgs_A_string_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									@event, 
									typeof(global::Windows.Foundation.Collections.IMapChangedEventArgs<string>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_event
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_event)));
				global::System.GC.KeepAlive(@event);
			}
		}

		// Signature, System.EventHandler<Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs__Windows_ApplicationModel_Core__UnhandledErrorDetectedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__ApplicationModel_Core_UnhandledErrorDetectedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.ApplicationModel.Core.IUnhandledErrorDetectedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Core.IUnhandledErrorDetectedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Windows.ApplicationModel.Core.IUnhandledErrorDetectedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Core.IUnhandledErrorDetectedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreApplicationUnhandledError.add_UnhandledErrorDetected, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs___Windows_Foundation__EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_ApplicationModel_Core_UnhandledErrorDetectedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V___Impl.Vtbl** unsafe_handler = default(global::System.EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::System.EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::System.EventHandler<global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget25>(global::System.EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreImmersiveApplication.get_Views, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_ApplicationModel_Core_CoreApplicationView___Windows_Foundation_Collections__IVectorView_A_Windows_ApplicationModel_Core_CoreApplicationView_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Core.CoreApplicationView> Func__IReadOnlyList_1_ApplicationModel_Core_CoreApplicationView___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_ApplicationModel_Core_CoreApplicationView_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_ApplicationModel_Core_CoreApplicationView_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Core.CoreApplicationView> value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Core.CoreApplicationView>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Core.CoreApplicationView>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Core.CoreApplicationView>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreImmersiveApplication.CreateNewView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.CoreApplicationView Func_string__string__ApplicationModel_Core_CoreApplicationView__(
					global::System.__ComObject __this, 
					string runtimeType, 
					string entryPoint, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_runtimeType = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.HSTRING unsafe_entryPoint = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe_view__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.CoreApplicationView view__retval = default(global::Windows.ApplicationModel.Core.CoreApplicationView);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_runtimeType = runtimeType)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_runtimeType;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_runtimeType, runtimeType, &(hstring_header_runtimeType), &(unsafe_runtimeType));
					fixed (char* pBuffer_entryPoint = entryPoint)
					{
						global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_entryPoint;
						global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_entryPoint, entryPoint, &(hstring_header_entryPoint), &(unsafe_entryPoint));
						unsafe_view__retval = null;
						// Call to native method
						unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
											__this, 
											__typeHnd, 
											__targetIndex, 
											unsafe_runtimeType, 
											unsafe_entryPoint, 
											&(unsafe_view__retval)
										);
						global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
						view__retval = (global::Windows.ApplicationModel.Core.CoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_view__retval), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle, 
											typeof(global::Windows.ApplicationModel.Core.CoreApplicationView).TypeHandle
										);
					}
				}
				// Return
				return view__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_view__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.CoreApplicationView>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.CoreApplicationView Func_uint__ApplicationModel_Core_CoreApplicationView__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.CoreApplicationView __value__retval = default(global::Windows.ApplicationModel.Core.CoreApplicationView);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Core.CoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Core.CoreApplicationView).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.CoreApplicationView>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_ApplicationModel_Core_CoreApplicationView__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.CoreApplicationView value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe_value = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.CoreApplicationView>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_ApplicationModel_Core_CoreApplicationView__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.ApplicationModel.Core.CoreApplicationView[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl*** unsafe_items = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView * items
						items[mcgIdx] = (global::Windows.ApplicationModel.Core.CoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle, 
											typeof(global::Windows.ApplicationModel.Core.CoreApplicationView).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.ApplicationModel.Core.CoreApplicationView>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_ApplicationModel_Core_CoreApplicationView___Windows_Foundation_Collections__IIterator_A_Windows_ApplicationModel_Core_CoreApplicationView_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.CoreApplicationView> Func__Collections_IIterator_1_ApplicationModel_Core_CoreApplicationView___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_ApplicationModel_Core_CoreApplicationView_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_ApplicationModel_Core_CoreApplicationView_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.CoreApplicationView> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.CoreApplicationView>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.CoreApplicationView>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.CoreApplicationView>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Core.CoreApplicationView>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_ApplicationModel_Core_CoreApplicationView__uint__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.CoreApplicationView[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl*** unsafe_items = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView * items
						items[mcgIdx] = (global::Windows.ApplicationModel.Core.CoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle, 
											typeof(global::Windows.ApplicationModel.Core.CoreApplicationView).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.ApplicationModel.Core.ICoreApplicationView>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_ApplicationModel_Core_ICoreApplicationView___Windows_Foundation_Collections__IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView> Func__Collections_IIterator_1_ApplicationModel_Core_ICoreApplicationView___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Core.ICoreApplicationView>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.ICoreApplicationView Func_ApplicationModel_Core_ICoreApplicationView__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.ICoreApplicationView __value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Core.ICoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Core.ICoreApplicationView>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_ApplicationModel_Core_ICoreApplicationView__uint__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl*** unsafe_items = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView * items
						items[mcgIdx] = (global::Windows.ApplicationModel.Core.ICoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.ApplicationModel.Core.ICoreApplicationView2>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_ApplicationModel_Core_ICoreApplicationView2___Windows_Foundation_Collections__IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView2_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView2> Func__Collections_IIterator_1_ApplicationModel_Core_ICoreApplicationView2___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView2_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView2_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView2> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView2>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView2>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView2>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Core.ICoreApplicationView2>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.ICoreApplicationView2 Func_ApplicationModel_Core_ICoreApplicationView2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.ICoreApplicationView2 __value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Core.ICoreApplicationView2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Core.ICoreApplicationView2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_ApplicationModel_Core_ICoreApplicationView2__uint__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl*** unsafe_items = default(global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 * items
						items[mcgIdx] = (global::Windows.ApplicationModel.Core.ICoreApplicationView2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.ApplicationModel.Core.ICoreApplicationView3>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_ApplicationModel_Core_ICoreApplicationView3___Windows_Foundation_Collections__IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView3_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView3> Func__Collections_IIterator_1_ApplicationModel_Core_ICoreApplicationView3___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView3_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView3_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView3> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView3>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView3>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView3>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Core.ICoreApplicationView3>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.ICoreApplicationView3 Func_ApplicationModel_Core_ICoreApplicationView3__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.ICoreApplicationView3 __value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView3);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Core.ICoreApplicationView3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView3).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Core.ICoreApplicationView3>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_ApplicationModel_Core_ICoreApplicationView3__uint__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView3[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl*** unsafe_items = default(global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 * items
						items[mcgIdx] = (global::Windows.ApplicationModel.Core.ICoreApplicationView3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView3).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.ICoreApplicationView Func_uint__ApplicationModel_Core_ICoreApplicationView__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.ICoreApplicationView __value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Core.ICoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_ApplicationModel_Core_ICoreApplicationView__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe_value = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_ApplicationModel_Core_ICoreApplicationView__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl*** unsafe_items = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView * items
						items[mcgIdx] = (global::Windows.ApplicationModel.Core.ICoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView2>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.ICoreApplicationView2 Func_uint__ApplicationModel_Core_ICoreApplicationView2__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.ICoreApplicationView2 __value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Core.ICoreApplicationView2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView2>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_ApplicationModel_Core_ICoreApplicationView2__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView2 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl** unsafe_value = default(global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView2).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_ApplicationModel_Core_ICoreApplicationView2__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl*** unsafe_items = default(global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 * items
						items[mcgIdx] = (global::Windows.ApplicationModel.Core.ICoreApplicationView2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView3>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.ICoreApplicationView3 Func_uint__ApplicationModel_Core_ICoreApplicationView3__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.ICoreApplicationView3 __value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView3);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Core.ICoreApplicationView3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView3).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView3>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_ApplicationModel_Core_ICoreApplicationView3__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView3 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl** unsafe_value = default(global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView3).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView3>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_ApplicationModel_Core_ICoreApplicationView3__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView3[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl*** unsafe_items = default(global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 * items
						items[mcgIdx] = (global::Windows.ApplicationModel.Core.ICoreApplicationView3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView3).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDeviceFactory.CreateWithForceSoftwareRendererOption, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_bool__IntPtr__(
					global::System.__ComObject __this, 
					bool forceSoftwareRenderer, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			sbyte unsafe_forceSoftwareRenderer;
			global::System.IntPtr unsafe_canvasDevice__retval;
			global::System.IntPtr canvasDevice__retval;
			int unsafe___return__;
			// Marshalling
			unsafe_forceSoftwareRenderer = (forceSoftwareRenderer ? ((sbyte)1) : ((sbyte)0));
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								unsafe_forceSoftwareRenderer, 
								&(unsafe_canvasDevice__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			canvasDevice__retval = unsafe_canvasDevice__retval;
			// Return
			return canvasDevice__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDeviceStatics.CreateFromDirect3D11Device, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Graphics_DirectX_Direct3D11_IDirect3DDevice__Windows_Graphics_DirectX_Direct3D11__IDirect3DDevice *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasDevice__Microsoft_Graphics_Canvas__CanvasDevice *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasDevice Func_Graphics_DirectX_Direct3D11_IDirect3DDevice__Microsoft_Graphics_Canvas_CanvasDevice__(
					global::System.__ComObject __this, 
					global::Windows.Graphics.DirectX.Direct3D11.IDirect3DDevice direct3DDevice, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Graphics.DirectX.Direct3D11.IDirect3DDevice__Impl.Vtbl** unsafe_direct3DDevice = default(global::Windows.Graphics.DirectX.Direct3D11.IDirect3DDevice__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl** unsafe_canvasDevice__retval = default(global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasDevice canvasDevice__retval = default(global::Microsoft.Graphics.Canvas.CanvasDevice);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_direct3DDevice = (global::Windows.Graphics.DirectX.Direct3D11.IDirect3DDevice__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									direct3DDevice, 
									typeof(global::Windows.Graphics.DirectX.Direct3D11.IDirect3DDevice).TypeHandle
								);
				unsafe_canvasDevice__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_direct3DDevice, 
									&(unsafe_canvasDevice__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasDevice__retval = (global::Microsoft.Graphics.Canvas.CanvasDevice)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_canvasDevice__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasDevice).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasDevice).TypeHandle
								);
				// Return
				return canvasDevice__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_direct3DDevice)));
				global::System.GC.KeepAlive(direct3DDevice);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasDevice__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDeviceStatics.GetSharedDevice, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasDevice__Microsoft_Graphics_Canvas__CanvasDevice *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasDevice Func_Microsoft_Graphics_Canvas_CanvasDevice__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl** unsafe_canvasDevice__retval = default(global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasDevice canvasDevice__retval = default(global::Microsoft.Graphics.Canvas.CanvasDevice);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_canvasDevice__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_canvasDevice__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasDevice__retval = (global::Microsoft.Graphics.Canvas.CanvasDevice)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_canvasDevice__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasDevice).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasDevice).TypeHandle
								);
				// Return
				return canvasDevice__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasDevice__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDeviceStatics.GetSharedDevice, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasDevice__Microsoft_Graphics_Canvas__CanvasDevice *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasDevice Func_bool__Microsoft_Graphics_Canvas_CanvasDevice__(
					global::System.__ComObject __this, 
					bool forceSoftwareRenderer, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			sbyte unsafe_forceSoftwareRenderer;
			global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl** unsafe_canvasDevice__retval = default(global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasDevice canvasDevice__retval = default(global::Microsoft.Graphics.Canvas.CanvasDevice);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_forceSoftwareRenderer = (forceSoftwareRenderer ? ((sbyte)1) : ((sbyte)0));
				unsafe_canvasDevice__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_forceSoftwareRenderer, 
									&(unsafe_canvasDevice__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasDevice__retval = (global::Microsoft.Graphics.Canvas.CanvasDevice)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_canvasDevice__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasDevice).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasDevice).TypeHandle
								);
				// Return
				return canvasDevice__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasDevice__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDeviceStatics.get_DebugLevel, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasDebugLevel__Microsoft_Graphics_Canvas__CanvasDebugLevel, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasDebugLevel Func_Microsoft_Graphics_Canvas_CanvasDebugLevel__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.CanvasDebugLevel unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.CanvasDebugLevel value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDevice.IsPixelFormatSupported, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Graphics_DirectX_DirectXPixelFormat__Windows_Graphics_DirectX__DirectXPixelFormat, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_intbool__(
					global::System.__ComObject __this, 
					int pixelFormat, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			bool value__retval;
			sbyte unsafe_value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								pixelFormat, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval != 0;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDevice.get_MaximumCacheSize, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static ulong Func_ulong__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ulong unsafe_value__retval;
			ulong value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDevice.put_MaximumCacheSize, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ulong__(
					global::System.__ComObject __this, 
					ulong value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDevice.put_LowPriority, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_bool__(
					global::System.__ComObject __this, 
					bool value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			sbyte unsafe_value;
			int unsafe___return__;
			// Marshalling
			unsafe_value = (value ? ((sbyte)1) : ((sbyte)0));
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								unsafe_value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.CanvasDevice,System.Object>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasDevice__Microsoft_Graphics_Canvas__CanvasDevice *, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasDevice__object__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasDevice sender, 
					object args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl** unsafe_sender = default(global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl**);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_args = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasDevice).TypeHandle
								);
				unsafe_args = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(args);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDevice.add_DeviceLost, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_CanvasDevice__object___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_CanvasDevice_j_object_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_CanvasDevice__object__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.CanvasDevice, object> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_CanvasDevice_j_System_Object_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_CanvasDevice_j_System_Object_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_CanvasDevice_j_System_Object_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.CanvasDevice, object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget26>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_CanvasDevice_j_System_Object_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDevice.IsDeviceLost, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_int__bool__(
					global::System.__ComObject __this, 
					int hresult, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			bool value__retval;
			sbyte unsafe_value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								hresult, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval != 0;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDevice.Lock, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasLock__Microsoft_Graphics_Canvas__CanvasLock *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasLock Func_Microsoft_Graphics_Canvas_CanvasLock__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasLock__Impl.Vtbl** unsafe_lock__retval = default(global::Microsoft.Graphics.Canvas.ICanvasLock__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasLock lock__retval = default(global::Microsoft.Graphics.Canvas.CanvasLock);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_lock__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_lock__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				lock__retval = (global::Microsoft.Graphics.Canvas.CanvasLock)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_lock__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasLock).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasLock).TypeHandle
								);
				// Return
				return lock__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_lock__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasImageStatics.SaveAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasImage__Microsoft_Graphics_Canvas__ICanvasImage *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IRandomAccessStream__Windows_Storage_Streams__IRandomAccessStream *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasBitmapFileFormat__Microsoft_Graphics_Canvas__CanvasBitmapFileFormat, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncAction__Windows_Foundation__IAsyncAction *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncAction Func_Microsoft_Graphics_Canvas_ICanvasImage___Rect__float__Microsoft_Graphics_Canvas_ICanvasResourceCreator__Storage_Streams_IRandomAccessStream__int_IAsyncAction__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasImage image, 
					global::Windows.Foundation.Rect sourceRectangle, 
					float dpi, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.Storage.Streams.IRandomAccessStream stream, 
					int fileFormat, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl** unsafe_image = default(global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl** unsafe_stream = default(global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction__Impl.Vtbl** unsafe_action__retval = default(global::Windows.Foundation.IAsyncAction__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction action__retval = default(global::Windows.Foundation.IAsyncAction);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_image = (global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									image, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasImage).TypeHandle
								);
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_stream = (global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									stream, 
									typeof(global::Windows.Storage.Streams.IRandomAccessStream).TypeHandle
								);
				unsafe_action__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_image, 
									sourceRectangle, 
									dpi, 
									unsafe_resourceCreator, 
									unsafe_stream, 
									fileFormat, 
									&(unsafe_action__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				action__retval = (global::Windows.Foundation.IAsyncAction)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_action__retval), 
									typeof(global::Windows.Foundation.IAsyncAction).TypeHandle
								);
				// Return
				return action__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_image)));
				global::System.GC.KeepAlive(image);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_stream)));
				global::System.GC.KeepAlive(stream);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_action__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasImageStatics.SaveAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasImage__Microsoft_Graphics_Canvas__ICanvasImage *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IRandomAccessStream__Windows_Storage_Streams__IRandomAccessStream *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasBitmapFileFormat__Microsoft_Graphics_Canvas__CanvasBitmapFileFormat, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncAction__Windows_Foundation__IAsyncAction *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncAction Func_Microsoft_Graphics_Canvas_ICanvasImage___Rect__float__Microsoft_Graphics_Canvas_ICanvasResourceCreator__Storage_Streams_IRandomAccessStream__intfloat___IAsyncAction__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasImage image, 
					global::Windows.Foundation.Rect sourceRectangle, 
					float dpi, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.Storage.Streams.IRandomAccessStream stream, 
					int fileFormat, 
					float quality, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl** unsafe_image = default(global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl** unsafe_stream = default(global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction__Impl.Vtbl** unsafe_action__retval = default(global::Windows.Foundation.IAsyncAction__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction action__retval = default(global::Windows.Foundation.IAsyncAction);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_image = (global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									image, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasImage).TypeHandle
								);
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_stream = (global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									stream, 
									typeof(global::Windows.Storage.Streams.IRandomAccessStream).TypeHandle
								);
				unsafe_action__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_image, 
									sourceRectangle, 
									dpi, 
									unsafe_resourceCreator, 
									unsafe_stream, 
									fileFormat, 
									quality, 
									&(unsafe_action__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				action__retval = (global::Windows.Foundation.IAsyncAction)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_action__retval), 
									typeof(global::Windows.Foundation.IAsyncAction).TypeHandle
								);
				// Return
				return action__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_image)));
				global::System.GC.KeepAlive(image);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_stream)));
				global::System.GC.KeepAlive(stream);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_action__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasImageStatics.SaveAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasImage__Microsoft_Graphics_Canvas__ICanvasImage *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IRandomAccessStream__Windows_Storage_Streams__IRandomAccessStream *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasBitmapFileFormat__Microsoft_Graphics_Canvas__CanvasBitmapFileFormat, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasBufferPrecision__Microsoft_Graphics_Canvas__CanvasBufferPrecision, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncAction__Windows_Foundation__IAsyncAction *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncAction Func_Microsoft_Graphics_Canvas_ICanvasImage___Rect__float__Microsoft_Graphics_Canvas_ICanvasResourceCreator__Storage_Streams_IRandomAccessStream__intfloat__int_IAsyncAction__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasImage image, 
					global::Windows.Foundation.Rect sourceRectangle, 
					float dpi, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.Storage.Streams.IRandomAccessStream stream, 
					int fileFormat, 
					float quality, 
					int bufferPrecision, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl** unsafe_image = default(global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl** unsafe_stream = default(global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction__Impl.Vtbl** unsafe_action__retval = default(global::Windows.Foundation.IAsyncAction__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction action__retval = default(global::Windows.Foundation.IAsyncAction);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_image = (global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									image, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasImage).TypeHandle
								);
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_stream = (global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									stream, 
									typeof(global::Windows.Storage.Streams.IRandomAccessStream).TypeHandle
								);
				unsafe_action__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_image, 
									sourceRectangle, 
									dpi, 
									unsafe_resourceCreator, 
									unsafe_stream, 
									fileFormat, 
									quality, 
									bufferPrecision, 
									&(unsafe_action__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				action__retval = (global::Windows.Foundation.IAsyncAction)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_action__retval), 
									typeof(global::Windows.Foundation.IAsyncAction).TypeHandle
								);
				// Return
				return action__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_image)));
				global::System.GC.KeepAlive(image);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_stream)));
				global::System.GC.KeepAlive(stream);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_action__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasImage.GetBounds, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasDrawingSession__Microsoft_Graphics_Canvas__CanvasDrawingSession *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Rect Func_Microsoft_Graphics_Canvas_CanvasDrawingSession___Rect__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasDrawingSession drawingSession, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl** unsafe_drawingSession = default(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl**);
			global::Windows.Foundation.Rect unsafe_bounds__retval;
			global::Windows.Foundation.Rect bounds__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_drawingSession = (global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									drawingSession, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_drawingSession, 
									&(unsafe_bounds__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				bounds__retval = unsafe_bounds__retval;
				// Return
				return bounds__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_drawingSession)));
				global::System.GC.KeepAlive(drawingSession);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasImage.GetBounds, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasDrawingSession__Microsoft_Graphics_Canvas__CanvasDrawingSession *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Rect Func_Microsoft_Graphics_Canvas_CanvasDrawingSession__Numerics_Matrix3x2___Rect__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasDrawingSession drawingSession, 
					global::System.Numerics.Matrix3x2 transform, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl** unsafe_drawingSession = default(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl**);
			global::Windows.Foundation.Rect unsafe_bounds__retval;
			global::Windows.Foundation.Rect bounds__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_drawingSession = (global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									drawingSession, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_drawingSession, 
									transform, 
									&(unsafe_bounds__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				bounds__retval = unsafe_bounds__retval;
				// Return
				return bounds__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_drawingSession)));
				global::System.GC.KeepAlive(drawingSession);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.Clear, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Color__(
					global::System.__ComObject __this, 
					global::Windows.UI.Color color, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								color
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.Clear, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector4__Windows_Foundation_Numerics__Vector4, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector4__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector4 color, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								color
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawImage, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasImage__Microsoft_Graphics_Canvas__ICanvasImage *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_ICanvasImage__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasImage image, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl** unsafe_image = default(global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_image = (global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									image, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasImage).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_image
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_image)));
				global::System.GC.KeepAlive(image);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawImage, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasImage__Microsoft_Graphics_Canvas__ICanvasImage *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_ICanvasImage__Numerics_Vector2__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasImage image, 
					global::System.Numerics.Vector2 offset, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl** unsafe_image = default(global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_image = (global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									image, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasImage).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_image, 
									offset
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_image)));
				global::System.GC.KeepAlive(image);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawImage, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasImage__Microsoft_Graphics_Canvas__ICanvasImage *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_ICanvasImage__float__float__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasImage image, 
					float x, 
					float y, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl** unsafe_image = default(global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_image = (global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									image, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasImage).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_image, 
									x, 
									y
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_image)));
				global::System.GC.KeepAlive(image);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawImage, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasBitmap___Rect__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap, 
					global::Windows.Foundation.Rect destinationRectangle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_bitmap = (global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									bitmap, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_bitmap, 
									destinationRectangle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap)));
				global::System.GC.KeepAlive(bitmap);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawImage, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasImage__Microsoft_Graphics_Canvas__ICanvasImage *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_ICanvasImage__Numerics_Vector2___Rect__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasImage image, 
					global::System.Numerics.Vector2 offset, 
					global::Windows.Foundation.Rect sourceRectangle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl** unsafe_image = default(global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_image = (global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									image, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasImage).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_image, 
									offset, 
									sourceRectangle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_image)));
				global::System.GC.KeepAlive(image);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawImage, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasImage__Microsoft_Graphics_Canvas__ICanvasImage *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_ICanvasImage__float__float___Rect__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasImage image, 
					float x, 
					float y, 
					global::Windows.Foundation.Rect sourceRectangle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl** unsafe_image = default(global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_image = (global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									image, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasImage).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_image, 
									x, 
									y, 
									sourceRectangle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_image)));
				global::System.GC.KeepAlive(image);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawImage, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasImage__Microsoft_Graphics_Canvas__ICanvasImage *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_ICanvasImage___Rect___Rect__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasImage image, 
					global::Windows.Foundation.Rect destinationRectangle, 
					global::Windows.Foundation.Rect sourceRectangle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl** unsafe_image = default(global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_image = (global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									image, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasImage).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_image, 
									destinationRectangle, 
									sourceRectangle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_image)));
				global::System.GC.KeepAlive(image);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawImage, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasImage__Microsoft_Graphics_Canvas__ICanvasImage *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_ICanvasImage__Numerics_Vector2___Rect__float__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasImage image, 
					global::System.Numerics.Vector2 offset, 
					global::Windows.Foundation.Rect sourceRectangle, 
					float opacity, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl** unsafe_image = default(global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_image = (global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									image, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasImage).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_image, 
									offset, 
									sourceRectangle, 
									opacity
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_image)));
				global::System.GC.KeepAlive(image);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawImage, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasImage__Microsoft_Graphics_Canvas__ICanvasImage *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_ICanvasImage__float__float___Rect__float__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasImage image, 
					float x, 
					float y, 
					global::Windows.Foundation.Rect sourceRectangle, 
					float opacity, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl** unsafe_image = default(global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_image = (global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									image, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasImage).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_image, 
									x, 
									y, 
									sourceRectangle, 
									opacity
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_image)));
				global::System.GC.KeepAlive(image);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawImage, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasImage__Microsoft_Graphics_Canvas__ICanvasImage *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_ICanvasImage___Rect___Rect__float__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasImage image, 
					global::Windows.Foundation.Rect destinationRectangle, 
					global::Windows.Foundation.Rect sourceRectangle, 
					float opacity, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl** unsafe_image = default(global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_image = (global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									image, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasImage).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_image, 
									destinationRectangle, 
									sourceRectangle, 
									opacity
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_image)));
				global::System.GC.KeepAlive(image);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawImage, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasImage__Microsoft_Graphics_Canvas__ICanvasImage *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasImageInterpolation__Microsoft_Graphics_Canvas__CanvasImageInterpolation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_ICanvasImage__Numerics_Vector2___Rect__float__int(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasImage image, 
					global::System.Numerics.Vector2 offset, 
					global::Windows.Foundation.Rect sourceRectangle, 
					float opacity, 
					int interpolation, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl** unsafe_image = default(global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_image = (global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									image, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasImage).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_image, 
									offset, 
									sourceRectangle, 
									opacity, 
									interpolation
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_image)));
				global::System.GC.KeepAlive(image);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawImage, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasImage__Microsoft_Graphics_Canvas__ICanvasImage *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasImageInterpolation__Microsoft_Graphics_Canvas__CanvasImageInterpolation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_ICanvasImage__float__float___Rect__float__int(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasImage image, 
					float x, 
					float y, 
					global::Windows.Foundation.Rect sourceRectangle, 
					float opacity, 
					int interpolation, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl** unsafe_image = default(global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_image = (global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									image, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasImage).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_image, 
									x, 
									y, 
									sourceRectangle, 
									opacity, 
									interpolation
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_image)));
				global::System.GC.KeepAlive(image);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawImage, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasImage__Microsoft_Graphics_Canvas__ICanvasImage *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasImageInterpolation__Microsoft_Graphics_Canvas__CanvasImageInterpolation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_ICanvasImage___Rect___Rect__float__int(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasImage image, 
					global::Windows.Foundation.Rect destinationRectangle, 
					global::Windows.Foundation.Rect sourceRectangle, 
					float opacity, 
					int interpolation, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl** unsafe_image = default(global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_image = (global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									image, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasImage).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_image, 
									destinationRectangle, 
									sourceRectangle, 
									opacity, 
									interpolation
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_image)));
				global::System.GC.KeepAlive(image);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawImage, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasImage__Microsoft_Graphics_Canvas__ICanvasImage *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasImageInterpolation__Microsoft_Graphics_Canvas__CanvasImageInterpolation, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasComposite__Microsoft_Graphics_Canvas__CanvasComposite, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_ICanvasImage__Numerics_Vector2___Rect__float__intint(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasImage image, 
					global::System.Numerics.Vector2 offset, 
					global::Windows.Foundation.Rect sourceRectangle, 
					float opacity, 
					int interpolation, 
					int composite, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl** unsafe_image = default(global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_image = (global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									image, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasImage).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_image, 
									offset, 
									sourceRectangle, 
									opacity, 
									interpolation, 
									composite
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_image)));
				global::System.GC.KeepAlive(image);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawImage, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasImage__Microsoft_Graphics_Canvas__ICanvasImage *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasImageInterpolation__Microsoft_Graphics_Canvas__CanvasImageInterpolation, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasComposite__Microsoft_Graphics_Canvas__CanvasComposite, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_ICanvasImage__float__float___Rect__float__intint(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasImage image, 
					float x, 
					float y, 
					global::Windows.Foundation.Rect sourceRectangle, 
					float opacity, 
					int interpolation, 
					int composite, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl** unsafe_image = default(global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_image = (global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									image, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasImage).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_image, 
									x, 
									y, 
									sourceRectangle, 
									opacity, 
									interpolation, 
									composite
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_image)));
				global::System.GC.KeepAlive(image);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawImage, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasImage__Microsoft_Graphics_Canvas__ICanvasImage *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasImageInterpolation__Microsoft_Graphics_Canvas__CanvasImageInterpolation, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasComposite__Microsoft_Graphics_Canvas__CanvasComposite, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_ICanvasImage___Rect___Rect__float__intint(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasImage image, 
					global::Windows.Foundation.Rect destinationRectangle, 
					global::Windows.Foundation.Rect sourceRectangle, 
					float opacity, 
					int interpolation, 
					int composite, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl** unsafe_image = default(global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_image = (global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									image, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasImage).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_image, 
									destinationRectangle, 
									sourceRectangle, 
									opacity, 
									interpolation, 
									composite
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_image)));
				global::System.GC.KeepAlive(image);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawImage, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasImageInterpolation__Microsoft_Graphics_Canvas__CanvasImageInterpolation, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix4x4__Windows_Foundation_Numerics__Matrix4x4, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasBitmap__Numerics_Vector2___Rect__float__intNumerics_Matrix4x4__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap, 
					global::System.Numerics.Vector2 offset, 
					global::Windows.Foundation.Rect sourceRectangle, 
					float opacity, 
					int interpolation, 
					global::System.Numerics.Matrix4x4 perspective, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_bitmap = (global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									bitmap, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_bitmap, 
									offset, 
									sourceRectangle, 
									opacity, 
									interpolation, 
									perspective
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap)));
				global::System.GC.KeepAlive(bitmap);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawImage, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasImageInterpolation__Microsoft_Graphics_Canvas__CanvasImageInterpolation, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix4x4__Windows_Foundation_Numerics__Matrix4x4, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasBitmap__float__float___Rect__float__intNumerics_Matrix4x4__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap, 
					float x, 
					float y, 
					global::Windows.Foundation.Rect sourceRectangle, 
					float opacity, 
					int interpolation, 
					global::System.Numerics.Matrix4x4 perspective, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_bitmap = (global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									bitmap, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_bitmap, 
									x, 
									y, 
									sourceRectangle, 
									opacity, 
									interpolation, 
									perspective
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap)));
				global::System.GC.KeepAlive(bitmap);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawImage, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasImageInterpolation__Microsoft_Graphics_Canvas__CanvasImageInterpolation, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix4x4__Windows_Foundation_Numerics__Matrix4x4, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasBitmap___Rect___Rect__float__intNumerics_Matrix4x4__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap, 
					global::Windows.Foundation.Rect destinationRectangle, 
					global::Windows.Foundation.Rect sourceRectangle, 
					float opacity, 
					int interpolation, 
					global::System.Numerics.Matrix4x4 perspective, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_bitmap = (global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									bitmap, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_bitmap, 
									destinationRectangle, 
									sourceRectangle, 
									opacity, 
									interpolation, 
									perspective
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap)));
				global::System.GC.KeepAlive(bitmap);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawLine, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__Numerics_Vector2__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 point0, 
					global::System.Numerics.Vector2 point1, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									point0, 
									point1, 
									unsafe_brush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawLine, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__float__float__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__(
					global::System.__ComObject __this, 
					float x0, 
					float y0, 
					float x1, 
					float y1, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									x0, 
									y0, 
									x1, 
									y1, 
									unsafe_brush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawLine, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__Numerics_Vector2__UI_Color__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 point0, 
					global::System.Numerics.Vector2 point1, 
					global::Windows.UI.Color color, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								point0, 
								point1, 
								color
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawLine, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__float__float__float__UI_Color__(
					global::System.__ComObject __this, 
					float x0, 
					float y0, 
					float x1, 
					float y1, 
					global::Windows.UI.Color color, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								x0, 
								y0, 
								x1, 
								y1, 
								color
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawLine, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__Numerics_Vector2__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__float__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 point0, 
					global::System.Numerics.Vector2 point1, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									point0, 
									point1, 
									unsafe_brush, 
									strokeWidth
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawLine, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__float__float__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__float__(
					global::System.__ComObject __this, 
					float x0, 
					float y0, 
					float x1, 
					float y1, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									x0, 
									y0, 
									x1, 
									y1, 
									unsafe_brush, 
									strokeWidth
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawLine, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__Numerics_Vector2__UI_Color__float__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 point0, 
					global::System.Numerics.Vector2 point1, 
					global::Windows.UI.Color color, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								point0, 
								point1, 
								color, 
								strokeWidth
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawLine, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__float__float__float__UI_Color__float__(
					global::System.__ComObject __this, 
					float x0, 
					float y0, 
					float x1, 
					float y1, 
					global::Windows.UI.Color color, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								x0, 
								y0, 
								x1, 
								y1, 
								color, 
								strokeWidth
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawLine, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__Numerics_Vector2__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 point0, 
					global::System.Numerics.Vector2 point1, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									point0, 
									point1, 
									unsafe_brush, 
									strokeWidth, 
									unsafe_strokeStyle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawLine, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__float__float__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__(
					global::System.__ComObject __this, 
					float x0, 
					float y0, 
					float x1, 
					float y1, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									x0, 
									y0, 
									x1, 
									y1, 
									unsafe_brush, 
									strokeWidth, 
									unsafe_strokeStyle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawLine, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__Numerics_Vector2__UI_Color__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 point0, 
					global::System.Numerics.Vector2 point1, 
					global::Windows.UI.Color color, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									point0, 
									point1, 
									color, 
									strokeWidth, 
									unsafe_strokeStyle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawLine, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__float__float__float__UI_Color__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__(
					global::System.__ComObject __this, 
					float x0, 
					float y0, 
					float x1, 
					float y1, 
					global::Windows.UI.Color color, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									x0, 
									y0, 
									x1, 
									y1, 
									color, 
									strokeWidth, 
									unsafe_strokeStyle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Rect__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Rect rect, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									rect, 
									unsafe_brush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Rect__UI_Color__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Rect rect, 
					global::Windows.UI.Color color, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								rect, 
								color
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Rect__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__float__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Rect rect, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									rect, 
									unsafe_brush, 
									strokeWidth
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Rect__UI_Color__float__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Rect rect, 
					global::Windows.UI.Color color, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								rect, 
								color, 
								strokeWidth
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Rect__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Rect rect, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									rect, 
									unsafe_brush, 
									strokeWidth, 
									unsafe_strokeStyle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Rect__UI_Color__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Rect rect, 
					global::Windows.UI.Color color, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									rect, 
									color, 
									strokeWidth, 
									unsafe_strokeStyle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.FillRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Rect__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Rect rect, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush opacityBrush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_opacityBrush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				unsafe_opacityBrush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									opacityBrush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									rect, 
									unsafe_brush, 
									unsafe_opacityBrush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_opacityBrush)));
				global::System.GC.KeepAlive(opacityBrush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.FillRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__float__float__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__(
					global::System.__ComObject __this, 
					float x, 
					float y, 
					float w, 
					float h, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush opacityBrush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_opacityBrush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				unsafe_opacityBrush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									opacityBrush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									x, 
									y, 
									w, 
									h, 
									unsafe_brush, 
									unsafe_opacityBrush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_opacityBrush)));
				global::System.GC.KeepAlive(opacityBrush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawRoundedRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Rect__float__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Rect rect, 
					float radiusX, 
					float radiusY, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									rect, 
									radiusX, 
									radiusY, 
									unsafe_brush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawRoundedRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__float__float__float__float__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__(
					global::System.__ComObject __this, 
					float x, 
					float y, 
					float w, 
					float h, 
					float radiusX, 
					float radiusY, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									x, 
									y, 
									w, 
									h, 
									radiusX, 
									radiusY, 
									unsafe_brush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawRoundedRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Rect__float__float__UI_Color__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Rect rect, 
					float radiusX, 
					float radiusY, 
					global::Windows.UI.Color color, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								rect, 
								radiusX, 
								radiusY, 
								color
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawRoundedRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__float__float__float__float__float__UI_Color__(
					global::System.__ComObject __this, 
					float x, 
					float y, 
					float w, 
					float h, 
					float radiusX, 
					float radiusY, 
					global::Windows.UI.Color color, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								x, 
								y, 
								w, 
								h, 
								radiusX, 
								radiusY, 
								color
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawRoundedRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Rect__float__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__float__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Rect rect, 
					float radiusX, 
					float radiusY, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									rect, 
									radiusX, 
									radiusY, 
									unsafe_brush, 
									strokeWidth
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawRoundedRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__float__float__float__float__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__float__(
					global::System.__ComObject __this, 
					float x, 
					float y, 
					float w, 
					float h, 
					float radiusX, 
					float radiusY, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									x, 
									y, 
									w, 
									h, 
									radiusX, 
									radiusY, 
									unsafe_brush, 
									strokeWidth
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawRoundedRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Rect__float__float__UI_Color__float__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Rect rect, 
					float radiusX, 
					float radiusY, 
					global::Windows.UI.Color color, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								rect, 
								radiusX, 
								radiusY, 
								color, 
								strokeWidth
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawRoundedRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__float__float__float__float__float__UI_Color__float__(
					global::System.__ComObject __this, 
					float x, 
					float y, 
					float w, 
					float h, 
					float radiusX, 
					float radiusY, 
					global::Windows.UI.Color color, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								x, 
								y, 
								w, 
								h, 
								radiusX, 
								radiusY, 
								color, 
								strokeWidth
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawRoundedRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Rect__float__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Rect rect, 
					float radiusX, 
					float radiusY, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									rect, 
									radiusX, 
									radiusY, 
									unsafe_brush, 
									strokeWidth, 
									unsafe_strokeStyle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawRoundedRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__float__float__float__float__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__(
					global::System.__ComObject __this, 
					float x, 
					float y, 
					float w, 
					float h, 
					float radiusX, 
					float radiusY, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									x, 
									y, 
									w, 
									h, 
									radiusX, 
									radiusY, 
									unsafe_brush, 
									strokeWidth, 
									unsafe_strokeStyle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawRoundedRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Rect__float__float__UI_Color__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Rect rect, 
					float radiusX, 
					float radiusY, 
					global::Windows.UI.Color color, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									rect, 
									radiusX, 
									radiusY, 
									color, 
									strokeWidth, 
									unsafe_strokeStyle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawRoundedRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__float__float__float__float__float__UI_Color__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__(
					global::System.__ComObject __this, 
					float x, 
					float y, 
					float w, 
					float h, 
					float radiusX, 
					float radiusY, 
					global::Windows.UI.Color color, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									x, 
									y, 
									w, 
									h, 
									radiusX, 
									radiusY, 
									color, 
									strokeWidth, 
									unsafe_strokeStyle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawEllipse, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__float__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 centerPoint, 
					float radiusX, 
					float radiusY, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									centerPoint, 
									radiusX, 
									radiusY, 
									unsafe_brush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawEllipse, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__float__float__UI_Color__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 centerPoint, 
					float radiusX, 
					float radiusY, 
					global::Windows.UI.Color color, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								centerPoint, 
								radiusX, 
								radiusY, 
								color
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawEllipse, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__float__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__float__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 centerPoint, 
					float radiusX, 
					float radiusY, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									centerPoint, 
									radiusX, 
									radiusY, 
									unsafe_brush, 
									strokeWidth
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawEllipse, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__float__float__UI_Color__float__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 centerPoint, 
					float radiusX, 
					float radiusY, 
					global::Windows.UI.Color color, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								centerPoint, 
								radiusX, 
								radiusY, 
								color, 
								strokeWidth
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawEllipse, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__float__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 centerPoint, 
					float radiusX, 
					float radiusY, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									centerPoint, 
									radiusX, 
									radiusY, 
									unsafe_brush, 
									strokeWidth, 
									unsafe_strokeStyle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawEllipse, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__float__float__UI_Color__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 centerPoint, 
					float radiusX, 
					float radiusY, 
					global::Windows.UI.Color color, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									centerPoint, 
									radiusX, 
									radiusY, 
									color, 
									strokeWidth, 
									unsafe_strokeStyle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawCircle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 centerPoint, 
					float radius, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									centerPoint, 
									radius, 
									unsafe_brush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawCircle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__float__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__(
					global::System.__ComObject __this, 
					float x, 
					float y, 
					float radius, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									x, 
									y, 
									radius, 
									unsafe_brush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawCircle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__float__UI_Color__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 centerPoint, 
					float radius, 
					global::Windows.UI.Color color, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								centerPoint, 
								radius, 
								color
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawCircle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__float__float__UI_Color__(
					global::System.__ComObject __this, 
					float x, 
					float y, 
					float radius, 
					global::Windows.UI.Color color, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								x, 
								y, 
								radius, 
								color
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawCircle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__float__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 centerPoint, 
					float radius, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									centerPoint, 
									radius, 
									unsafe_brush, 
									strokeWidth
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawCircle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__float__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__float__(
					global::System.__ComObject __this, 
					float x, 
					float y, 
					float radius, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									x, 
									y, 
									radius, 
									unsafe_brush, 
									strokeWidth
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawCircle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__float__UI_Color__float__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 centerPoint, 
					float radius, 
					global::Windows.UI.Color color, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								centerPoint, 
								radius, 
								color, 
								strokeWidth
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawCircle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__float__float__UI_Color__float__(
					global::System.__ComObject __this, 
					float x, 
					float y, 
					float radius, 
					global::Windows.UI.Color color, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								x, 
								y, 
								radius, 
								color, 
								strokeWidth
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawCircle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 centerPoint, 
					float radius, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									centerPoint, 
									radius, 
									unsafe_brush, 
									strokeWidth, 
									unsafe_strokeStyle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawCircle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__float__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__(
					global::System.__ComObject __this, 
					float x, 
					float y, 
					float radius, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									x, 
									y, 
									radius, 
									unsafe_brush, 
									strokeWidth, 
									unsafe_strokeStyle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawCircle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__float__UI_Color__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 centerPoint, 
					float radius, 
					global::Windows.UI.Color color, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									centerPoint, 
									radius, 
									color, 
									strokeWidth, 
									unsafe_strokeStyle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawCircle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__float__float__UI_Color__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__(
					global::System.__ComObject __this, 
					float x, 
					float y, 
					float radius, 
					global::Windows.UI.Color color, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									x, 
									y, 
									radius, 
									color, 
									strokeWidth, 
									unsafe_strokeStyle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawText, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__Numerics_Vector2__UI_Color__(
					global::System.__ComObject __this, 
					string text, 
					global::System.Numerics.Vector2 point, 
					global::Windows.UI.Color color, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_text = default(global::System.Runtime.InteropServices.HSTRING);
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_text = text)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_text;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_text, text, &(hstring_header_text), &(unsafe_text));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_text, 
									point, 
									color
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawText, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__float__float__UI_Color__(
					global::System.__ComObject __this, 
					string text, 
					float x, 
					float y, 
					global::Windows.UI.Color color, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_text = default(global::System.Runtime.InteropServices.HSTRING);
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_text = text)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_text;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_text, text, &(hstring_header_text), &(unsafe_text));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_text, 
									x, 
									y, 
									color
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawText, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextFormat__Microsoft_Graphics_Canvas_Text__CanvasTextFormat *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__Numerics_Vector2__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Text_CanvasTextFormat__(
					global::System.__ComObject __this, 
					string text, 
					global::System.Numerics.Vector2 point, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextFormat format, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_text = default(global::System.Runtime.InteropServices.HSTRING);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl** unsafe_format = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_text = text)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_text;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_text, text, &(hstring_header_text), &(unsafe_text));
					unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										brush, 
										typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
									);
					unsafe_format = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										format, 
										typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat).TypeHandle
									);
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_text, 
										point, 
										unsafe_brush, 
										unsafe_format
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_format)));
				global::System.GC.KeepAlive(format);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawText, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextFormat__Microsoft_Graphics_Canvas_Text__CanvasTextFormat *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string___Rect__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Text_CanvasTextFormat__(
					global::System.__ComObject __this, 
					string text, 
					global::Windows.Foundation.Rect rectangle, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextFormat format, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_text = default(global::System.Runtime.InteropServices.HSTRING);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl** unsafe_format = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_text = text)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_text;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_text, text, &(hstring_header_text), &(unsafe_text));
					unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										brush, 
										typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
									);
					unsafe_format = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										format, 
										typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat).TypeHandle
									);
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_text, 
										rectangle, 
										unsafe_brush, 
										unsafe_format
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_format)));
				global::System.GC.KeepAlive(format);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawText, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextFormat__Microsoft_Graphics_Canvas_Text__CanvasTextFormat *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__float__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Text_CanvasTextFormat__(
					global::System.__ComObject __this, 
					string text, 
					float x, 
					float y, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextFormat format, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_text = default(global::System.Runtime.InteropServices.HSTRING);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl** unsafe_format = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_text = text)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_text;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_text, text, &(hstring_header_text), &(unsafe_text));
					unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										brush, 
										typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
									);
					unsafe_format = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										format, 
										typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat).TypeHandle
									);
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_text, 
										x, 
										y, 
										unsafe_brush, 
										unsafe_format
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_format)));
				global::System.GC.KeepAlive(format);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawText, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextFormat__Microsoft_Graphics_Canvas_Text__CanvasTextFormat *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__float__float__float__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Text_CanvasTextFormat__(
					global::System.__ComObject __this, 
					string text, 
					float x, 
					float y, 
					float w, 
					float h, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextFormat format, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_text = default(global::System.Runtime.InteropServices.HSTRING);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl** unsafe_format = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_text = text)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_text;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_text, text, &(hstring_header_text), &(unsafe_text));
					unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										brush, 
										typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
									);
					unsafe_format = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										format, 
										typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat).TypeHandle
									);
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_text, 
										x, 
										y, 
										w, 
										h, 
										unsafe_brush, 
										unsafe_format
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_format)));
				global::System.GC.KeepAlive(format);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawText, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextFormat__Microsoft_Graphics_Canvas_Text__CanvasTextFormat *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__Numerics_Vector2__UI_Color__Microsoft_Graphics_Canvas_Text_CanvasTextFormat__(
					global::System.__ComObject __this, 
					string text, 
					global::System.Numerics.Vector2 point, 
					global::Windows.UI.Color color, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextFormat format, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_text = default(global::System.Runtime.InteropServices.HSTRING);
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl** unsafe_format = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_text = text)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_text;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_text, text, &(hstring_header_text), &(unsafe_text));
					unsafe_format = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										format, 
										typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat).TypeHandle
									);
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_text, 
										point, 
										color, 
										unsafe_format
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_format)));
				global::System.GC.KeepAlive(format);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawText, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextFormat__Microsoft_Graphics_Canvas_Text__CanvasTextFormat *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string___Rect__UI_Color__Microsoft_Graphics_Canvas_Text_CanvasTextFormat__(
					global::System.__ComObject __this, 
					string text, 
					global::Windows.Foundation.Rect rectangle, 
					global::Windows.UI.Color color, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextFormat format, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_text = default(global::System.Runtime.InteropServices.HSTRING);
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl** unsafe_format = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_text = text)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_text;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_text, text, &(hstring_header_text), &(unsafe_text));
					unsafe_format = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										format, 
										typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat).TypeHandle
									);
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_text, 
										rectangle, 
										color, 
										unsafe_format
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_format)));
				global::System.GC.KeepAlive(format);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawText, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextFormat__Microsoft_Graphics_Canvas_Text__CanvasTextFormat *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__float__float__UI_Color__Microsoft_Graphics_Canvas_Text_CanvasTextFormat__(
					global::System.__ComObject __this, 
					string text, 
					float x, 
					float y, 
					global::Windows.UI.Color color, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextFormat format, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_text = default(global::System.Runtime.InteropServices.HSTRING);
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl** unsafe_format = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_text = text)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_text;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_text, text, &(hstring_header_text), &(unsafe_text));
					unsafe_format = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										format, 
										typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat).TypeHandle
									);
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_text, 
										x, 
										y, 
										color, 
										unsafe_format
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_format)));
				global::System.GC.KeepAlive(format);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawText, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextFormat__Microsoft_Graphics_Canvas_Text__CanvasTextFormat *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__float__float__float__float__UI_Color__Microsoft_Graphics_Canvas_Text_CanvasTextFormat__(
					global::System.__ComObject __this, 
					string text, 
					float x, 
					float y, 
					float w, 
					float h, 
					global::Windows.UI.Color color, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextFormat format, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_text = default(global::System.Runtime.InteropServices.HSTRING);
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl** unsafe_format = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_text = text)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_text;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_text, text, &(hstring_header_text), &(unsafe_text));
					unsafe_format = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										format, 
										typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat).TypeHandle
									);
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_text, 
										x, 
										y, 
										w, 
										h, 
										color, 
										unsafe_format
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_format)));
				global::System.GC.KeepAlive(format);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Numerics_Vector2__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					global::System.Numerics.Vector2 offset, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									offset, 
									unsafe_brush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Numerics_Vector2__UI_Color__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					global::System.Numerics.Vector2 offset, 
					global::Windows.UI.Color color, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									offset, 
									color
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__float__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					float x, 
					float y, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									x, 
									y, 
									unsafe_brush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__float__float__UI_Color__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					float x, 
					float y, 
					global::Windows.UI.Color color, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									x, 
									y, 
									color
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									unsafe_brush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__UI_Color__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					global::Windows.UI.Color color, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									color
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Numerics_Vector2__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__float__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					global::System.Numerics.Vector2 offset, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									offset, 
									unsafe_brush, 
									strokeWidth
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Numerics_Vector2__UI_Color__float__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					global::System.Numerics.Vector2 offset, 
					global::Windows.UI.Color color, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									offset, 
									color, 
									strokeWidth
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__float__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__float__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					float x, 
					float y, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									x, 
									y, 
									unsafe_brush, 
									strokeWidth
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__float__float__UI_Color__float__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					float x, 
					float y, 
					global::Windows.UI.Color color, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									x, 
									y, 
									color, 
									strokeWidth
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__float__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									unsafe_brush, 
									strokeWidth
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__UI_Color__float__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					global::Windows.UI.Color color, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									color, 
									strokeWidth
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Numerics_Vector2__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					global::System.Numerics.Vector2 offset, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									offset, 
									unsafe_brush, 
									strokeWidth, 
									unsafe_strokeStyle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Numerics_Vector2__UI_Color__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					global::System.Numerics.Vector2 offset, 
					global::Windows.UI.Color color, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									offset, 
									color, 
									strokeWidth, 
									unsafe_strokeStyle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__float__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					float x, 
					float y, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									x, 
									y, 
									unsafe_brush, 
									strokeWidth, 
									unsafe_strokeStyle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__float__float__UI_Color__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					float x, 
					float y, 
					global::Windows.UI.Color color, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									x, 
									y, 
									color, 
									strokeWidth, 
									unsafe_strokeStyle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									unsafe_brush, 
									strokeWidth, 
									unsafe_strokeStyle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__UI_Color__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					global::Windows.UI.Color color, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									color, 
									strokeWidth, 
									unsafe_strokeStyle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.FillGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Numerics_Vector2__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					global::System.Numerics.Vector2 offset, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush opacityBrush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_opacityBrush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				unsafe_opacityBrush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									opacityBrush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									offset, 
									unsafe_brush, 
									unsafe_opacityBrush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_opacityBrush)));
				global::System.GC.KeepAlive(opacityBrush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.FillGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__float__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					float x, 
					float y, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush opacityBrush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_opacityBrush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				unsafe_opacityBrush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									opacityBrush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									x, 
									y, 
									unsafe_brush, 
									unsafe_opacityBrush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_opacityBrush)));
				global::System.GC.KeepAlive(opacityBrush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.FillGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush opacityBrush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_opacityBrush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				unsafe_opacityBrush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									opacityBrush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									unsafe_brush, 
									unsafe_opacityBrush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_opacityBrush)));
				global::System.GC.KeepAlive(opacityBrush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawCachedGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasCachedGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasCachedGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasCachedGeometry__Numerics_Vector2__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry geometry, 
					global::System.Numerics.Vector2 offset, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry).TypeHandle
								);
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									offset, 
									unsafe_brush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawCachedGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasCachedGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasCachedGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasCachedGeometry__Numerics_Vector2__UI_Color__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry geometry, 
					global::System.Numerics.Vector2 offset, 
					global::Windows.UI.Color color, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									offset, 
									color
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawCachedGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasCachedGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasCachedGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasCachedGeometry__float__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry geometry, 
					float x, 
					float y, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry).TypeHandle
								);
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									x, 
									y, 
									unsafe_brush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawCachedGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasCachedGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasCachedGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasCachedGeometry__float__float__UI_Color__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry geometry, 
					float x, 
					float y, 
					global::Windows.UI.Color color, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									x, 
									y, 
									color
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawCachedGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasCachedGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasCachedGeometry *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasCachedGeometry__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry geometry, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry).TypeHandle
								);
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									unsafe_brush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawCachedGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasCachedGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasCachedGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasCachedGeometry__UI_Color__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry geometry, 
					global::Windows.UI.Color color, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									color
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawTextLayout, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextLayout__Microsoft_Graphics_Canvas_Text__CanvasTextLayout *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Text_CanvasTextLayout__Numerics_Vector2__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextLayout textLayout, 
					global::System.Numerics.Vector2 point, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextLayout__Impl.Vtbl** unsafe_textLayout = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextLayout__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_textLayout = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextLayout__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									textLayout, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextLayout).TypeHandle
								);
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_textLayout, 
									point, 
									unsafe_brush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_textLayout)));
				global::System.GC.KeepAlive(textLayout);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawTextLayout, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextLayout__Microsoft_Graphics_Canvas_Text__CanvasTextLayout *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Text_CanvasTextLayout__float__float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextLayout textLayout, 
					float x, 
					float y, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextLayout__Impl.Vtbl** unsafe_textLayout = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextLayout__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_textLayout = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextLayout__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									textLayout, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextLayout).TypeHandle
								);
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_textLayout, 
									x, 
									y, 
									unsafe_brush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_textLayout)));
				global::System.GC.KeepAlive(textLayout);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawTextLayout, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextLayout__Microsoft_Graphics_Canvas_Text__CanvasTextLayout *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Text_CanvasTextLayout__Numerics_Vector2__UI_Color__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextLayout textLayout, 
					global::System.Numerics.Vector2 point, 
					global::Windows.UI.Color color, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextLayout__Impl.Vtbl** unsafe_textLayout = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextLayout__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_textLayout = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextLayout__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									textLayout, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextLayout).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_textLayout, 
									point, 
									color
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_textLayout)));
				global::System.GC.KeepAlive(textLayout);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawTextLayout, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextLayout__Microsoft_Graphics_Canvas_Text__CanvasTextLayout *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Text_CanvasTextLayout__float__float__UI_Color__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextLayout textLayout, 
					float x, 
					float y, 
					global::Windows.UI.Color color, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextLayout__Impl.Vtbl** unsafe_textLayout = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextLayout__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_textLayout = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextLayout__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									textLayout, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextLayout).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_textLayout, 
									x, 
									y, 
									color
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_textLayout)));
				global::System.GC.KeepAlive(textLayout);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawInk, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_Windows_UI_Input_Inking_InkStroke___Windows_Foundation_Collections__IIterable_A_Windows_UI_Input_Inking_InkStroke_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IEnumerable_1_UI_Input_Inking_InkStroke___(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.IEnumerable<global::Windows.UI.Input.Inking.InkStroke> inkStrokes, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IEnumerable_A_Windows_UI_Input_Inking_InkStroke_V___Impl.Vtbl** unsafe_inkStrokes = default(global::System.Collections.Generic.IEnumerable_A_Windows_UI_Input_Inking_InkStroke_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_inkStrokes = (global::System.Collections.Generic.IEnumerable_A_Windows_UI_Input_Inking_InkStroke_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									inkStrokes, 
									typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Input.Inking.InkStroke>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_inkStrokes
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_inkStrokes)));
				global::System.GC.KeepAlive(inkStrokes);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawInk, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_Windows_UI_Input_Inking_InkStroke___Windows_Foundation_Collections__IIterable_A_Windows_UI_Input_Inking_InkStroke_V_ *, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IEnumerable_1_UI_Input_Inking_InkStroke___bool__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.IEnumerable<global::Windows.UI.Input.Inking.InkStroke> inkStrokes, 
					bool highContrast, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IEnumerable_A_Windows_UI_Input_Inking_InkStroke_V___Impl.Vtbl** unsafe_inkStrokes = default(global::System.Collections.Generic.IEnumerable_A_Windows_UI_Input_Inking_InkStroke_V___Impl.Vtbl**);
			sbyte unsafe_highContrast;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_inkStrokes = (global::System.Collections.Generic.IEnumerable_A_Windows_UI_Input_Inking_InkStroke_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									inkStrokes, 
									typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Input.Inking.InkStroke>).TypeHandle
								);
				unsafe_highContrast = (highContrast ? ((sbyte)1) : ((sbyte)0));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_inkStrokes, 
									unsafe_highContrast
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_inkStrokes)));
				global::System.GC.KeepAlive(inkStrokes);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawGradientMesh, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGradientMesh__Microsoft_Graphics_Canvas_Geometry__CanvasGradientMesh *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMesh__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMesh gradientMesh, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGradientMesh__Impl.Vtbl** unsafe_gradientMesh = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGradientMesh__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_gradientMesh = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGradientMesh__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									gradientMesh, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGradientMesh).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_gradientMesh
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_gradientMesh)));
				global::System.GC.KeepAlive(gradientMesh);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawGradientMesh, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGradientMesh__Microsoft_Graphics_Canvas_Geometry__CanvasGradientMesh *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMesh__Numerics_Vector2__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMesh gradientMesh, 
					global::System.Numerics.Vector2 point, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGradientMesh__Impl.Vtbl** unsafe_gradientMesh = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGradientMesh__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_gradientMesh = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGradientMesh__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									gradientMesh, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGradientMesh).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_gradientMesh, 
									point
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_gradientMesh)));
				global::System.GC.KeepAlive(gradientMesh);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawGradientMesh, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGradientMesh__Microsoft_Graphics_Canvas_Geometry__CanvasGradientMesh *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMesh__float__float__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMesh gradientMesh, 
					float x, 
					float y, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGradientMesh__Impl.Vtbl** unsafe_gradientMesh = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGradientMesh__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_gradientMesh = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGradientMesh__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									gradientMesh, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGradientMesh).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_gradientMesh, 
									x, 
									y
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_gradientMesh)));
				global::System.GC.KeepAlive(gradientMesh);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.get_Antialiasing, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasAntialiasing__Microsoft_Graphics_Canvas__CanvasAntialiasing, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasAntialiasing Func_Microsoft_Graphics_Canvas_CanvasAntialiasing__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.CanvasAntialiasing unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.CanvasAntialiasing value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.get_Blend, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasBlend__Microsoft_Graphics_Canvas__CanvasBlend, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasBlend Func_Microsoft_Graphics_Canvas_CanvasBlend__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.CanvasBlend unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.CanvasBlend value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.get_TextAntialiasing, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextAntialiasing__Microsoft_Graphics_Canvas_Text__CanvasTextAntialiasing, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasTextAntialiasing Func_Microsoft_Graphics_Canvas_Text_CanvasTextAntialiasing__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasTextAntialiasing unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasTextAntialiasing value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.get_TextRenderingParameters, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextRenderingParameters__Microsoft_Graphics_Canvas_Text__CanvasTextRenderingParameters *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasTextRenderingParameters Func_Microsoft_Graphics_Canvas_Text_CanvasTextRenderingParameters__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderingParameters__Impl.Vtbl** unsafe_value__retval = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderingParameters__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.CanvasTextRenderingParameters value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasTextRenderingParameters);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Microsoft.Graphics.Canvas.Text.CanvasTextRenderingParameters)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderingParameters).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Text.CanvasTextRenderingParameters).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.put_TextRenderingParameters, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextRenderingParameters__Microsoft_Graphics_Canvas_Text__CanvasTextRenderingParameters *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Text_CanvasTextRenderingParameters__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextRenderingParameters value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderingParameters__Impl.Vtbl** unsafe_value = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderingParameters__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderingParameters__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderingParameters).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.get_Transform, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Matrix3x2 Func_Numerics_Matrix3x2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Matrix3x2 unsafe_value__retval;
			global::System.Numerics.Matrix3x2 value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.put_Transform, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Matrix3x2__(
					global::System.__ComObject __this, 
					global::System.Numerics.Matrix3x2 value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.get_Units, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasUnits__Microsoft_Graphics_Canvas__CanvasUnits, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasUnits Func_Microsoft_Graphics_Canvas_CanvasUnits__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.CanvasUnits unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.CanvasUnits value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.get_EffectBufferPrecision, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTReferenceMarshaller] System_Nullable_1_Microsoft_Graphics_Canvas_CanvasBufferPrecision___Windows_Foundation__IReference_A_Microsoft_Graphics_Canvas_CanvasBufferPrecision_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Nullable<global::Microsoft.Graphics.Canvas.CanvasBufferPrecision> Func_Nullable_1_Microsoft_Graphics_Canvas_CanvasBufferPrecision___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Nullable_A_Microsoft_Graphics_Canvas_CanvasBufferPrecision_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Nullable_A_Microsoft_Graphics_Canvas_CanvasBufferPrecision_V___Impl.Vtbl**);
			global::System.Nullable<global::Microsoft.Graphics.Canvas.CanvasBufferPrecision> value__retval = default(global::System.Nullable<global::Microsoft.Graphics.Canvas.CanvasBufferPrecision>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					value__retval = (global::Microsoft.Graphics.Canvas.CanvasBufferPrecision)global::System.Runtime.InteropServices.McgModuleManager.UnboxIfBoxed(
										global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
															((global::System.IntPtr)unsafe_value__retval), 
															typeof(global::Windows.Foundation.IReference<global::Microsoft.Graphics.Canvas.CanvasBufferPrecision>).TypeHandle
														), 
										"Windows.Foundation.IReference`1<Microsoft.Graphics.Canvas.CanvasBufferPrecision>"
									);
				else
					value__retval = null;
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.put_EffectBufferPrecision, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTReferenceMarshaller] System_Nullable_1_Microsoft_Graphics_Canvas_CanvasBufferPrecision___Windows_Foundation__IReference_A_Microsoft_Graphics_Canvas_CanvasBufferPrecision_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Nullable_1_Microsoft_Graphics_Canvas_CanvasBufferPrecision___(
					global::System.__ComObject __this, 
					global::System.Nullable<global::Microsoft.Graphics.Canvas.CanvasBufferPrecision> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Nullable_A_Microsoft_Graphics_Canvas_CanvasBufferPrecision_V___Impl.Vtbl** unsafe_value = default(global::System.Nullable_A_Microsoft_Graphics_Canvas_CanvasBufferPrecision_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				if (value.HasValue)
				{
					global::System.Runtime.InteropServices.WindowsRuntime.ReferenceImpl<global::Microsoft.Graphics.Canvas.CanvasBufferPrecision> unsafe_value_Wrapper = new global::System.Runtime.InteropServices.WindowsRuntime.ReferenceImpl<global::Microsoft.Graphics.Canvas.CanvasBufferPrecision>(value.Value, 20);
					unsafe_value = (global::System.Nullable_A_Microsoft_Graphics_Canvas_CanvasBufferPrecision_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ManagedObjectToComInterface(
										unsafe_value_Wrapper, 
										typeof(global::Windows.Foundation.IReference<global::Microsoft.Graphics.Canvas.CanvasBufferPrecision>).TypeHandle
									);
				}
				else
					unsafe_value = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.get_EffectTileSize, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Windows_Graphics_Imaging_BitmapSize__Windows_Graphics_Imaging__BitmapSize, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Graphics.Imaging.BitmapSize Func_Graphics_Imaging_BitmapSize__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Graphics.Imaging.BitmapSize unsafe_value__retval;
			global::Windows.Graphics.Imaging.BitmapSize value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.put_EffectTileSize, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Windows_Graphics_Imaging_BitmapSize__Windows_Graphics_Imaging__BitmapSize, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Graphics_Imaging_BitmapSize__(
					global::System.__ComObject __this, 
					global::Windows.Graphics.Imaging.BitmapSize value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.CreateLayer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasActiveLayer__Microsoft_Graphics_Canvas__CanvasActiveLayer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasActiveLayer Func_float__Microsoft_Graphics_Canvas_CanvasActiveLayer__(
					global::System.__ComObject __this, 
					float opacity, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasActiveLayer__Impl.Vtbl** unsafe_layer__retval = default(global::Microsoft.Graphics.Canvas.ICanvasActiveLayer__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasActiveLayer layer__retval = default(global::Microsoft.Graphics.Canvas.CanvasActiveLayer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_layer__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									opacity, 
									&(unsafe_layer__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				layer__retval = (global::Microsoft.Graphics.Canvas.CanvasActiveLayer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_layer__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasActiveLayer).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasActiveLayer).TypeHandle
								);
				// Return
				return layer__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_layer__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.CreateLayer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasActiveLayer__Microsoft_Graphics_Canvas__CanvasActiveLayer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasActiveLayer Func_Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_CanvasActiveLayer__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush opacityBrush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_opacityBrush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasActiveLayer__Impl.Vtbl** unsafe_layer__retval = default(global::Microsoft.Graphics.Canvas.ICanvasActiveLayer__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasActiveLayer layer__retval = default(global::Microsoft.Graphics.Canvas.CanvasActiveLayer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_opacityBrush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									opacityBrush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				unsafe_layer__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_opacityBrush, 
									&(unsafe_layer__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				layer__retval = (global::Microsoft.Graphics.Canvas.CanvasActiveLayer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_layer__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasActiveLayer).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasActiveLayer).TypeHandle
								);
				// Return
				return layer__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_opacityBrush)));
				global::System.GC.KeepAlive(opacityBrush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_layer__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.CreateLayer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasActiveLayer__Microsoft_Graphics_Canvas__CanvasActiveLayer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasActiveLayer Func_float___Rect__Microsoft_Graphics_Canvas_CanvasActiveLayer__(
					global::System.__ComObject __this, 
					float opacity, 
					global::Windows.Foundation.Rect clipRectangle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasActiveLayer__Impl.Vtbl** unsafe_layer__retval = default(global::Microsoft.Graphics.Canvas.ICanvasActiveLayer__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasActiveLayer layer__retval = default(global::Microsoft.Graphics.Canvas.CanvasActiveLayer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_layer__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									opacity, 
									clipRectangle, 
									&(unsafe_layer__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				layer__retval = (global::Microsoft.Graphics.Canvas.CanvasActiveLayer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_layer__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasActiveLayer).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasActiveLayer).TypeHandle
								);
				// Return
				return layer__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_layer__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.CreateLayer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasActiveLayer__Microsoft_Graphics_Canvas__CanvasActiveLayer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasActiveLayer Func_Microsoft_Graphics_Canvas_Brushes_ICanvasBrush___Rect__Microsoft_Graphics_Canvas_CanvasActiveLayer__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush opacityBrush, 
					global::Windows.Foundation.Rect clipRectangle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_opacityBrush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasActiveLayer__Impl.Vtbl** unsafe_layer__retval = default(global::Microsoft.Graphics.Canvas.ICanvasActiveLayer__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasActiveLayer layer__retval = default(global::Microsoft.Graphics.Canvas.CanvasActiveLayer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_opacityBrush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									opacityBrush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				unsafe_layer__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_opacityBrush, 
									clipRectangle, 
									&(unsafe_layer__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				layer__retval = (global::Microsoft.Graphics.Canvas.CanvasActiveLayer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_layer__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasActiveLayer).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasActiveLayer).TypeHandle
								);
				// Return
				return layer__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_opacityBrush)));
				global::System.GC.KeepAlive(opacityBrush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_layer__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.CreateLayer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasActiveLayer__Microsoft_Graphics_Canvas__CanvasActiveLayer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasActiveLayer Func_float__Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_CanvasActiveLayer__(
					global::System.__ComObject __this, 
					float opacity, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry clipGeometry, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_clipGeometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasActiveLayer__Impl.Vtbl** unsafe_layer__retval = default(global::Microsoft.Graphics.Canvas.ICanvasActiveLayer__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasActiveLayer layer__retval = default(global::Microsoft.Graphics.Canvas.CanvasActiveLayer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_clipGeometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									clipGeometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_layer__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									opacity, 
									unsafe_clipGeometry, 
									&(unsafe_layer__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				layer__retval = (global::Microsoft.Graphics.Canvas.CanvasActiveLayer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_layer__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasActiveLayer).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasActiveLayer).TypeHandle
								);
				// Return
				return layer__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_clipGeometry)));
				global::System.GC.KeepAlive(clipGeometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_layer__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.CreateLayer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasActiveLayer__Microsoft_Graphics_Canvas__CanvasActiveLayer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasActiveLayer Func_Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_CanvasActiveLayer__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush opacityBrush, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry clipGeometry, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_opacityBrush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_clipGeometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasActiveLayer__Impl.Vtbl** unsafe_layer__retval = default(global::Microsoft.Graphics.Canvas.ICanvasActiveLayer__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasActiveLayer layer__retval = default(global::Microsoft.Graphics.Canvas.CanvasActiveLayer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_opacityBrush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									opacityBrush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				unsafe_clipGeometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									clipGeometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_layer__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_opacityBrush, 
									unsafe_clipGeometry, 
									&(unsafe_layer__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				layer__retval = (global::Microsoft.Graphics.Canvas.CanvasActiveLayer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_layer__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasActiveLayer).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasActiveLayer).TypeHandle
								);
				// Return
				return layer__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_opacityBrush)));
				global::System.GC.KeepAlive(opacityBrush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_clipGeometry)));
				global::System.GC.KeepAlive(clipGeometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_layer__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.CreateLayer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasActiveLayer__Microsoft_Graphics_Canvas__CanvasActiveLayer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasActiveLayer Func_float__Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Numerics_Matrix3x2__Microsoft_Graphics_Canvas_CanvasActiveLayer__(
					global::System.__ComObject __this, 
					float opacity, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry clipGeometry, 
					global::System.Numerics.Matrix3x2 geometryTransform, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_clipGeometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasActiveLayer__Impl.Vtbl** unsafe_layer__retval = default(global::Microsoft.Graphics.Canvas.ICanvasActiveLayer__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasActiveLayer layer__retval = default(global::Microsoft.Graphics.Canvas.CanvasActiveLayer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_clipGeometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									clipGeometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_layer__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									opacity, 
									unsafe_clipGeometry, 
									geometryTransform, 
									&(unsafe_layer__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				layer__retval = (global::Microsoft.Graphics.Canvas.CanvasActiveLayer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_layer__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasActiveLayer).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasActiveLayer).TypeHandle
								);
				// Return
				return layer__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_clipGeometry)));
				global::System.GC.KeepAlive(clipGeometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_layer__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.CreateLayer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasActiveLayer__Microsoft_Graphics_Canvas__CanvasActiveLayer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasActiveLayer Func_Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Numerics_Matrix3x2__Microsoft_Graphics_Canvas_CanvasActiveLayer__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush opacityBrush, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry clipGeometry, 
					global::System.Numerics.Matrix3x2 geometryTransform, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_opacityBrush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_clipGeometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasActiveLayer__Impl.Vtbl** unsafe_layer__retval = default(global::Microsoft.Graphics.Canvas.ICanvasActiveLayer__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasActiveLayer layer__retval = default(global::Microsoft.Graphics.Canvas.CanvasActiveLayer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_opacityBrush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									opacityBrush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				unsafe_clipGeometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									clipGeometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_layer__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_opacityBrush, 
									unsafe_clipGeometry, 
									geometryTransform, 
									&(unsafe_layer__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				layer__retval = (global::Microsoft.Graphics.Canvas.CanvasActiveLayer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_layer__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasActiveLayer).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasActiveLayer).TypeHandle
								);
				// Return
				return layer__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_opacityBrush)));
				global::System.GC.KeepAlive(opacityBrush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_clipGeometry)));
				global::System.GC.KeepAlive(clipGeometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_layer__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.CreateLayer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasLayerOptions__Microsoft_Graphics_Canvas__CanvasLayerOptions, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasActiveLayer__Microsoft_Graphics_Canvas__CanvasActiveLayer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasActiveLayer Func_float__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush___Rect__Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Numerics_Matrix3x2__Microsoft_Graphics_Canvas_CanvasLayerOptions__Microsoft_Graphics_Canvas_CanvasActiveLayer__(
					global::System.__ComObject __this, 
					float opacity, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush opacityBrush, 
					global::Windows.Foundation.Rect clipRectangle, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry clipGeometry, 
					global::System.Numerics.Matrix3x2 geometryTransform, 
					global::Microsoft.Graphics.Canvas.CanvasLayerOptions options, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_opacityBrush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_clipGeometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasActiveLayer__Impl.Vtbl** unsafe_layer__retval = default(global::Microsoft.Graphics.Canvas.ICanvasActiveLayer__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasActiveLayer layer__retval = default(global::Microsoft.Graphics.Canvas.CanvasActiveLayer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_opacityBrush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									opacityBrush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				unsafe_clipGeometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									clipGeometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_layer__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									opacity, 
									unsafe_opacityBrush, 
									clipRectangle, 
									unsafe_clipGeometry, 
									geometryTransform, 
									options, 
									&(unsafe_layer__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				layer__retval = (global::Microsoft.Graphics.Canvas.CanvasActiveLayer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_layer__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasActiveLayer).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasActiveLayer).TypeHandle
								);
				// Return
				return layer__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_opacityBrush)));
				global::System.GC.KeepAlive(opacityBrush);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_clipGeometry)));
				global::System.GC.KeepAlive(clipGeometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_layer__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawGlyphRun, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontFace__Microsoft_Graphics_Canvas_Text__CanvasFontFace *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph *, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__Microsoft_Graphics_Canvas_Text_CanvasFontFace__float__rg_Microsoft_Graphics_Canvas_Text_CanvasGlyph__bool__uint__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 point, 
					global::Microsoft.Graphics.Canvas.Text.CanvasFontFace fontFace, 
					float fontSize, 
					global::Microsoft.Graphics.Canvas.Text.CanvasGlyph[] glyphs, 
					bool isSideways, 
					uint bidiLevel, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl** unsafe_fontFace = default(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyph* unsafe_glyphs = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyph*);
			uint unsafe_glyphs_mcgLength = 0;
			sbyte unsafe_isSideways;
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_fontFace = (global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									fontFace, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace).TypeHandle
								);
				if (glyphs == null)
					unsafe_glyphs = null;
				else
				{
					if (glyphs != null)
						unsafe_glyphs_mcgLength = (uint)glyphs.Length;
					if (glyphs != null)
						unsafe_glyphs = (global::Microsoft.Graphics.Canvas.Text.CanvasGlyph*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_glyphs_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasGlyph))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_glyphs_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph glyphs
						unsafe_glyphs[mcgIdx] = glyphs[mcgIdx];
					}
				}
				unsafe_isSideways = (isSideways ? ((sbyte)1) : ((sbyte)0));
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									point, 
									unsafe_fontFace, 
									fontSize, 
									unsafe_glyphs_mcgLength, 
									unsafe_glyphs, 
									unsafe_isSideways, 
									bidiLevel, 
									unsafe_brush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_fontFace)));
				global::System.GC.KeepAlive(fontFace);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_glyphs);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawGlyphRun, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontFace__Microsoft_Graphics_Canvas_Text__CanvasFontFace *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph *, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextMeasuringMode__Microsoft_Graphics_Canvas_Text__CanvasTextMeasuringMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__Microsoft_Graphics_Canvas_Text_CanvasFontFace__float__rg_Microsoft_Graphics_Canvas_Text_CanvasGlyph__bool__uint__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__int(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 point, 
					global::Microsoft.Graphics.Canvas.Text.CanvasFontFace fontFace, 
					float fontSize, 
					global::Microsoft.Graphics.Canvas.Text.CanvasGlyph[] glyphs, 
					bool isSideways, 
					uint bidiLevel, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					int measuringMode, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl** unsafe_fontFace = default(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyph* unsafe_glyphs = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyph*);
			uint unsafe_glyphs_mcgLength = 0;
			sbyte unsafe_isSideways;
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_fontFace = (global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									fontFace, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace).TypeHandle
								);
				if (glyphs == null)
					unsafe_glyphs = null;
				else
				{
					if (glyphs != null)
						unsafe_glyphs_mcgLength = (uint)glyphs.Length;
					if (glyphs != null)
						unsafe_glyphs = (global::Microsoft.Graphics.Canvas.Text.CanvasGlyph*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_glyphs_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasGlyph))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_glyphs_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph glyphs
						unsafe_glyphs[mcgIdx] = glyphs[mcgIdx];
					}
				}
				unsafe_isSideways = (isSideways ? ((sbyte)1) : ((sbyte)0));
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									point, 
									unsafe_fontFace, 
									fontSize, 
									unsafe_glyphs_mcgLength, 
									unsafe_glyphs, 
									unsafe_isSideways, 
									bidiLevel, 
									unsafe_brush, 
									measuringMode
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_fontFace)));
				global::System.GC.KeepAlive(fontFace);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_glyphs);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.DrawGlyphRun, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontFace__Microsoft_Graphics_Canvas_Text__CanvasFontFace *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph *, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextMeasuringMode__Microsoft_Graphics_Canvas_Text__CanvasTextMeasuringMode, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_int__int *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__Microsoft_Graphics_Canvas_Text_CanvasFontFace__float__rg_Microsoft_Graphics_Canvas_Text_CanvasGlyph__bool__uint__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__intstring__string__rg_int__uint__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 point, 
					global::Microsoft.Graphics.Canvas.Text.CanvasFontFace fontFace, 
					float fontSize, 
					global::Microsoft.Graphics.Canvas.Text.CanvasGlyph[] glyphs, 
					bool isSideways, 
					uint bidiLevel, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					int measuringMode, 
					string localeName, 
					string textString, 
					int[] clusterMapIndices, 
					uint textPosition, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl** unsafe_fontFace = default(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyph* unsafe_glyphs = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyph*);
			uint unsafe_glyphs_mcgLength = 0;
			sbyte unsafe_isSideways;
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::System.Runtime.InteropServices.HSTRING unsafe_localeName = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.HSTRING unsafe_textString = default(global::System.Runtime.InteropServices.HSTRING);
			uint unsafe_clusterMapIndices_mcgLength = 0;
			int* unsafe_clusterMapIndices;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_fontFace = (global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									fontFace, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace).TypeHandle
								);
				if (glyphs == null)
					unsafe_glyphs = null;
				else
				{
					if (glyphs != null)
						unsafe_glyphs_mcgLength = (uint)glyphs.Length;
					if (glyphs != null)
						unsafe_glyphs = (global::Microsoft.Graphics.Canvas.Text.CanvasGlyph*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_glyphs_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasGlyph))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_glyphs_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph glyphs
						unsafe_glyphs[mcgIdx] = glyphs[mcgIdx];
					}
				}
				unsafe_isSideways = (isSideways ? ((sbyte)1) : ((sbyte)0));
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				fixed (char* pBuffer_localeName = localeName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_localeName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_localeName, localeName, &(hstring_header_localeName), &(unsafe_localeName));
					fixed (char* pBuffer_textString = textString)
					{
						global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_textString;
						global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_textString, textString, &(hstring_header_textString), &(unsafe_textString));
						if (clusterMapIndices != null)
							unsafe_clusterMapIndices_mcgLength = (uint)clusterMapIndices.Length;
						fixed (int* pinned_clusterMapIndices = global::McgInterop.McgCoreHelpers.GetArrayForCompat(clusterMapIndices))
						{
							unsafe_clusterMapIndices = (int*)pinned_clusterMapIndices;
							// Call to native method
							unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
												__this, 
												__typeHnd, 
												__targetIndex, 
												point, 
												unsafe_fontFace, 
												fontSize, 
												unsafe_glyphs_mcgLength, 
												unsafe_glyphs, 
												unsafe_isSideways, 
												bidiLevel, 
												unsafe_brush, 
												measuringMode, 
												unsafe_localeName, 
												unsafe_textString, 
												unsafe_clusterMapIndices_mcgLength, 
												unsafe_clusterMapIndices, 
												textPosition
											);
							global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
						}
					}
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_fontFace)));
				global::System.GC.KeepAlive(fontFace);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_glyphs);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.CreateSpriteBatch, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasSpriteBatch__Microsoft_Graphics_Canvas__CanvasSpriteBatch *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasSpriteBatch Func_Microsoft_Graphics_Canvas_CanvasSpriteBatch__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasSpriteBatch__Impl.Vtbl** unsafe_spriteBatch__retval = default(global::Microsoft.Graphics.Canvas.ICanvasSpriteBatch__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasSpriteBatch spriteBatch__retval = default(global::Microsoft.Graphics.Canvas.CanvasSpriteBatch);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_spriteBatch__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_spriteBatch__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				spriteBatch__retval = (global::Microsoft.Graphics.Canvas.CanvasSpriteBatch)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_spriteBatch__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasSpriteBatch).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasSpriteBatch).TypeHandle
								);
				// Return
				return spriteBatch__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_spriteBatch__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.CreateSpriteBatch, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasSpriteSortMode__Microsoft_Graphics_Canvas__CanvasSpriteSortMode, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasSpriteBatch__Microsoft_Graphics_Canvas__CanvasSpriteBatch *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasSpriteBatch Func_intMicrosoft_Graphics_Canvas_CanvasSpriteBatch__(
					global::System.__ComObject __this, 
					int sortMode, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasSpriteBatch__Impl.Vtbl** unsafe_spriteBatch__retval = default(global::Microsoft.Graphics.Canvas.ICanvasSpriteBatch__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasSpriteBatch spriteBatch__retval = default(global::Microsoft.Graphics.Canvas.CanvasSpriteBatch);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_spriteBatch__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									sortMode, 
									&(unsafe_spriteBatch__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				spriteBatch__retval = (global::Microsoft.Graphics.Canvas.CanvasSpriteBatch)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_spriteBatch__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasSpriteBatch).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasSpriteBatch).TypeHandle
								);
				// Return
				return spriteBatch__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_spriteBatch__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.CreateSpriteBatch, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasSpriteSortMode__Microsoft_Graphics_Canvas__CanvasSpriteSortMode, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasImageInterpolation__Microsoft_Graphics_Canvas__CanvasImageInterpolation, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasSpriteBatch__Microsoft_Graphics_Canvas__CanvasSpriteBatch *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasSpriteBatch Func_intintMicrosoft_Graphics_Canvas_CanvasSpriteBatch__(
					global::System.__ComObject __this, 
					int sortMode, 
					int interpolation, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasSpriteBatch__Impl.Vtbl** unsafe_spriteBatch__retval = default(global::Microsoft.Graphics.Canvas.ICanvasSpriteBatch__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasSpriteBatch spriteBatch__retval = default(global::Microsoft.Graphics.Canvas.CanvasSpriteBatch);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_spriteBatch__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									sortMode, 
									interpolation, 
									&(unsafe_spriteBatch__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				spriteBatch__retval = (global::Microsoft.Graphics.Canvas.CanvasSpriteBatch)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_spriteBatch__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasSpriteBatch).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasSpriteBatch).TypeHandle
								);
				// Return
				return spriteBatch__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_spriteBatch__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasDrawingSession.CreateSpriteBatch, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasSpriteSortMode__Microsoft_Graphics_Canvas__CanvasSpriteSortMode, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasImageInterpolation__Microsoft_Graphics_Canvas__CanvasImageInterpolation, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasSpriteOptions__Microsoft_Graphics_Canvas__CanvasSpriteOptions, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasSpriteBatch__Microsoft_Graphics_Canvas__CanvasSpriteBatch *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasSpriteBatch Func_intintMicrosoft_Graphics_Canvas_CanvasSpriteOptions__Microsoft_Graphics_Canvas_CanvasSpriteBatch__(
					global::System.__ComObject __this, 
					int sortMode, 
					int interpolation, 
					global::Microsoft.Graphics.Canvas.CanvasSpriteOptions options, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasSpriteBatch__Impl.Vtbl** unsafe_spriteBatch__retval = default(global::Microsoft.Graphics.Canvas.ICanvasSpriteBatch__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasSpriteBatch spriteBatch__retval = default(global::Microsoft.Graphics.Canvas.CanvasSpriteBatch);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_spriteBatch__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									sortMode, 
									interpolation, 
									options, 
									&(unsafe_spriteBatch__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				spriteBatch__retval = (global::Microsoft.Graphics.Canvas.CanvasSpriteBatch)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_spriteBatch__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasSpriteBatch).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasSpriteBatch).TypeHandle
								);
				// Return
				return spriteBatch__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_spriteBatch__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi.get_Dpi, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static float Func_float__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			float unsafe_dpi__retval;
			float dpi__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_dpi__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			dpi__retval = unsafe_dpi__retval;
			// Return
			return dpi__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi.ConvertPixelsToDips, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static float Func_int__float__(
					global::System.__ComObject __this, 
					int pixels, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			float unsafe_dips__retval;
			float dips__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								pixels, 
								&(unsafe_dips__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			dips__retval = unsafe_dips__retval;
			// Return
			return dips__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi.ConvertDipsToPixels, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasDpiRounding__Microsoft_Graphics_Canvas__CanvasDpiRounding, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_float__intint__(
					global::System.__ComObject __this, 
					float dips, 
					int dpiRounding, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe_pixels__retval;
			int pixels__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								dips, 
								dpiRounding, 
								&(unsafe_pixels__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			pixels__retval = unsafe_pixels__retval;
			// Return
			return pixels__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmapStatics.CreateFromDirect3D11Surface, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Graphics_DirectX_Direct3D11_IDirect3DSurface__Windows_Graphics_DirectX_Direct3D11__IDirect3DSurface *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasBitmap Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Graphics_DirectX_Direct3D11_IDirect3DSurface__Microsoft_Graphics_Canvas_CanvasBitmap__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface surface, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface__Impl.Vtbl** unsafe_surface = default(global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap__retval = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap__retval = default(global::Microsoft.Graphics.Canvas.CanvasBitmap);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_surface = (global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									surface, 
									typeof(global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface).TypeHandle
								);
				unsafe_bitmap__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_surface, 
									&(unsafe_bitmap__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				bitmap__retval = (global::Microsoft.Graphics.Canvas.CanvasBitmap)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_bitmap__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasBitmap).TypeHandle
								);
				// Return
				return bitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_surface)));
				global::System.GC.KeepAlive(surface);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmapStatics.CreateFromDirect3D11Surface, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Graphics_DirectX_Direct3D11_IDirect3DSurface__Windows_Graphics_DirectX_Direct3D11__IDirect3DSurface *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasBitmap Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Graphics_DirectX_Direct3D11_IDirect3DSurface__float__Microsoft_Graphics_Canvas_CanvasBitmap__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface surface, 
					float dpi, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface__Impl.Vtbl** unsafe_surface = default(global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap__retval = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap__retval = default(global::Microsoft.Graphics.Canvas.CanvasBitmap);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_surface = (global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									surface, 
									typeof(global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface).TypeHandle
								);
				unsafe_bitmap__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_surface, 
									dpi, 
									&(unsafe_bitmap__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				bitmap__retval = (global::Microsoft.Graphics.Canvas.CanvasBitmap)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_bitmap__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasBitmap).TypeHandle
								);
				// Return
				return bitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_surface)));
				global::System.GC.KeepAlive(surface);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmapStatics.CreateFromDirect3D11Surface, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Graphics_DirectX_Direct3D11_IDirect3DSurface__Windows_Graphics_DirectX_Direct3D11__IDirect3DSurface *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasAlphaMode__Microsoft_Graphics_Canvas__CanvasAlphaMode, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasBitmap Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Graphics_DirectX_Direct3D11_IDirect3DSurface__float__intMicrosoft_Graphics_Canvas_CanvasBitmap__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface surface, 
					float dpi, 
					int alpha, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface__Impl.Vtbl** unsafe_surface = default(global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap__retval = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap__retval = default(global::Microsoft.Graphics.Canvas.CanvasBitmap);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_surface = (global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									surface, 
									typeof(global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface).TypeHandle
								);
				unsafe_bitmap__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_surface, 
									dpi, 
									alpha, 
									&(unsafe_bitmap__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				bitmap__retval = (global::Microsoft.Graphics.Canvas.CanvasBitmap)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_bitmap__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasBitmap).TypeHandle
								);
				// Return
				return bitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_surface)));
				global::System.GC.KeepAlive(surface);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmapStatics.CreateFromBytes, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Graphics_DirectX_DirectXPixelFormat__Windows_Graphics_DirectX__DirectXPixelFormat, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasBitmap Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__rg_byte__int__int__intMicrosoft_Graphics_Canvas_CanvasBitmap__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					byte[] bytes, 
					int widthInPixels, 
					int heightInPixels, 
					int format, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			uint unsafe_bytes_mcgLength = 0;
			byte* unsafe_bytes;
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap__retval = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap__retval = default(global::Microsoft.Graphics.Canvas.CanvasBitmap);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				if (bytes != null)
					unsafe_bytes_mcgLength = (uint)bytes.Length;
				fixed (byte* pinned_bytes = global::McgInterop.McgCoreHelpers.GetArrayForCompat(bytes))
				{
					unsafe_bytes = (byte*)pinned_bytes;
					unsafe_bitmap__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_resourceCreator, 
										unsafe_bytes_mcgLength, 
										unsafe_bytes, 
										widthInPixels, 
										heightInPixels, 
										format, 
										&(unsafe_bitmap__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					bitmap__retval = (global::Microsoft.Graphics.Canvas.CanvasBitmap)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_bitmap__retval), 
										typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle, 
										typeof(global::Microsoft.Graphics.Canvas.CanvasBitmap).TypeHandle
									);
				}
				// Return
				return bitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmapStatics.CreateFromBytes, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Graphics_DirectX_DirectXPixelFormat__Windows_Graphics_DirectX__DirectXPixelFormat, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasBitmap Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__rg_byte__int__int__intfloat__Microsoft_Graphics_Canvas_CanvasBitmap__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					byte[] bytes, 
					int widthInPixels, 
					int heightInPixels, 
					int format, 
					float dpi, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			uint unsafe_bytes_mcgLength = 0;
			byte* unsafe_bytes;
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap__retval = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap__retval = default(global::Microsoft.Graphics.Canvas.CanvasBitmap);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				if (bytes != null)
					unsafe_bytes_mcgLength = (uint)bytes.Length;
				fixed (byte* pinned_bytes = global::McgInterop.McgCoreHelpers.GetArrayForCompat(bytes))
				{
					unsafe_bytes = (byte*)pinned_bytes;
					unsafe_bitmap__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_resourceCreator, 
										unsafe_bytes_mcgLength, 
										unsafe_bytes, 
										widthInPixels, 
										heightInPixels, 
										format, 
										dpi, 
										&(unsafe_bitmap__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					bitmap__retval = (global::Microsoft.Graphics.Canvas.CanvasBitmap)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_bitmap__retval), 
										typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle, 
										typeof(global::Microsoft.Graphics.Canvas.CanvasBitmap).TypeHandle
									);
				}
				// Return
				return bitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmapStatics.CreateFromBytes, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Graphics_DirectX_DirectXPixelFormat__Windows_Graphics_DirectX__DirectXPixelFormat, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasAlphaMode__Microsoft_Graphics_Canvas__CanvasAlphaMode, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasBitmap Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__rg_byte__int__int__intfloat__intMicrosoft_Graphics_Canvas_CanvasBitmap__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					byte[] bytes, 
					int widthInPixels, 
					int heightInPixels, 
					int format, 
					float dpi, 
					int alpha, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			uint unsafe_bytes_mcgLength = 0;
			byte* unsafe_bytes;
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap__retval = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap__retval = default(global::Microsoft.Graphics.Canvas.CanvasBitmap);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				if (bytes != null)
					unsafe_bytes_mcgLength = (uint)bytes.Length;
				fixed (byte* pinned_bytes = global::McgInterop.McgCoreHelpers.GetArrayForCompat(bytes))
				{
					unsafe_bytes = (byte*)pinned_bytes;
					unsafe_bitmap__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_resourceCreator, 
										unsafe_bytes_mcgLength, 
										unsafe_bytes, 
										widthInPixels, 
										heightInPixels, 
										format, 
										dpi, 
										alpha, 
										&(unsafe_bitmap__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					bitmap__retval = (global::Microsoft.Graphics.Canvas.CanvasBitmap)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_bitmap__retval), 
										typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle, 
										typeof(global::Microsoft.Graphics.Canvas.CanvasBitmap).TypeHandle
									);
				}
				// Return
				return bitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmapStatics.CreateFromBytes, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Graphics_DirectX_DirectXPixelFormat__Windows_Graphics_DirectX__DirectXPixelFormat, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasBitmap Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Storage_Streams_IBuffer__int__int__intMicrosoft_Graphics_Canvas_CanvasBitmap__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.Storage.Streams.IBuffer buffer, 
					int widthInPixels, 
					int heightInPixels, 
					int format, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_buffer = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap__retval = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap__retval = default(global::Microsoft.Graphics.Canvas.CanvasBitmap);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_buffer = (global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									buffer, 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				unsafe_bitmap__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_buffer, 
									widthInPixels, 
									heightInPixels, 
									format, 
									&(unsafe_bitmap__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				bitmap__retval = (global::Microsoft.Graphics.Canvas.CanvasBitmap)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_bitmap__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasBitmap).TypeHandle
								);
				// Return
				return bitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_buffer)));
				global::System.GC.KeepAlive(buffer);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmapStatics.CreateFromBytes, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Graphics_DirectX_DirectXPixelFormat__Windows_Graphics_DirectX__DirectXPixelFormat, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasBitmap Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Storage_Streams_IBuffer__int__int__intfloat__Microsoft_Graphics_Canvas_CanvasBitmap__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.Storage.Streams.IBuffer buffer, 
					int widthInPixels, 
					int heightInPixels, 
					int format, 
					float dpi, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_buffer = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap__retval = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap__retval = default(global::Microsoft.Graphics.Canvas.CanvasBitmap);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_buffer = (global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									buffer, 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				unsafe_bitmap__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_buffer, 
									widthInPixels, 
									heightInPixels, 
									format, 
									dpi, 
									&(unsafe_bitmap__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				bitmap__retval = (global::Microsoft.Graphics.Canvas.CanvasBitmap)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_bitmap__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasBitmap).TypeHandle
								);
				// Return
				return bitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_buffer)));
				global::System.GC.KeepAlive(buffer);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmapStatics.CreateFromBytes, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Graphics_DirectX_DirectXPixelFormat__Windows_Graphics_DirectX__DirectXPixelFormat, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasAlphaMode__Microsoft_Graphics_Canvas__CanvasAlphaMode, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasBitmap Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Storage_Streams_IBuffer__int__int__intfloat__intMicrosoft_Graphics_Canvas_CanvasBitmap__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.Storage.Streams.IBuffer buffer, 
					int widthInPixels, 
					int heightInPixels, 
					int format, 
					float dpi, 
					int alpha, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_buffer = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap__retval = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap__retval = default(global::Microsoft.Graphics.Canvas.CanvasBitmap);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_buffer = (global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									buffer, 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				unsafe_bitmap__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_buffer, 
									widthInPixels, 
									heightInPixels, 
									format, 
									dpi, 
									alpha, 
									&(unsafe_bitmap__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				bitmap__retval = (global::Microsoft.Graphics.Canvas.CanvasBitmap)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_bitmap__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasBitmap).TypeHandle
								);
				// Return
				return bitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_buffer)));
				global::System.GC.KeepAlive(buffer);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmapStatics.CreateFromColors, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_UI_Color__Windows_UI__Color *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasBitmap Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__rg_UI_Color__int__int__Microsoft_Graphics_Canvas_CanvasBitmap__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.UI.Color[] colors, 
					int widthInPixels, 
					int heightInPixels, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			uint unsafe_colors_mcgLength = 0;
			global::Windows.UI.Color* unsafe_colors;
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap__retval = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap__retval = default(global::Microsoft.Graphics.Canvas.CanvasBitmap);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				if (colors != null)
					unsafe_colors_mcgLength = (uint)colors.Length;
				fixed (global::Windows.UI.Color* pinned_colors = global::McgInterop.McgCoreHelpers.GetArrayForCompat(colors))
				{
					unsafe_colors = (global::Windows.UI.Color*)pinned_colors;
					unsafe_bitmap__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_resourceCreator, 
										unsafe_colors_mcgLength, 
										unsafe_colors, 
										widthInPixels, 
										heightInPixels, 
										&(unsafe_bitmap__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					bitmap__retval = (global::Microsoft.Graphics.Canvas.CanvasBitmap)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_bitmap__retval), 
										typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle, 
										typeof(global::Microsoft.Graphics.Canvas.CanvasBitmap).TypeHandle
									);
				}
				// Return
				return bitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmapStatics.CreateFromColors, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_UI_Color__Windows_UI__Color *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasBitmap Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__rg_UI_Color__int__int__float__Microsoft_Graphics_Canvas_CanvasBitmap__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.UI.Color[] colors, 
					int widthInPixels, 
					int heightInPixels, 
					float dpi, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			uint unsafe_colors_mcgLength = 0;
			global::Windows.UI.Color* unsafe_colors;
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap__retval = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap__retval = default(global::Microsoft.Graphics.Canvas.CanvasBitmap);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				if (colors != null)
					unsafe_colors_mcgLength = (uint)colors.Length;
				fixed (global::Windows.UI.Color* pinned_colors = global::McgInterop.McgCoreHelpers.GetArrayForCompat(colors))
				{
					unsafe_colors = (global::Windows.UI.Color*)pinned_colors;
					unsafe_bitmap__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_resourceCreator, 
										unsafe_colors_mcgLength, 
										unsafe_colors, 
										widthInPixels, 
										heightInPixels, 
										dpi, 
										&(unsafe_bitmap__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					bitmap__retval = (global::Microsoft.Graphics.Canvas.CanvasBitmap)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_bitmap__retval), 
										typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle, 
										typeof(global::Microsoft.Graphics.Canvas.CanvasBitmap).TypeHandle
									);
				}
				// Return
				return bitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmapStatics.CreateFromColors, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_UI_Color__Windows_UI__Color *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasAlphaMode__Microsoft_Graphics_Canvas__CanvasAlphaMode, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasBitmap Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__rg_UI_Color__int__int__float__intMicrosoft_Graphics_Canvas_CanvasBitmap__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.UI.Color[] colors, 
					int widthInPixels, 
					int heightInPixels, 
					float dpi, 
					int alpha, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			uint unsafe_colors_mcgLength = 0;
			global::Windows.UI.Color* unsafe_colors;
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap__retval = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap__retval = default(global::Microsoft.Graphics.Canvas.CanvasBitmap);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				if (colors != null)
					unsafe_colors_mcgLength = (uint)colors.Length;
				fixed (global::Windows.UI.Color* pinned_colors = global::McgInterop.McgCoreHelpers.GetArrayForCompat(colors))
				{
					unsafe_colors = (global::Windows.UI.Color*)pinned_colors;
					unsafe_bitmap__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_resourceCreator, 
										unsafe_colors_mcgLength, 
										unsafe_colors, 
										widthInPixels, 
										heightInPixels, 
										dpi, 
										alpha, 
										&(unsafe_bitmap__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					bitmap__retval = (global::Microsoft.Graphics.Canvas.CanvasBitmap)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_bitmap__retval), 
										typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle, 
										typeof(global::Microsoft.Graphics.Canvas.CanvasBitmap).TypeHandle
									);
				}
				// Return
				return bitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmapStatics.CreateFromSoftwareBitmap, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Graphics_Imaging_SoftwareBitmap__Windows_Graphics_Imaging__SoftwareBitmap *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasBitmap Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Graphics_Imaging_SoftwareBitmap__Microsoft_Graphics_Canvas_CanvasBitmap__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.Graphics.Imaging.SoftwareBitmap sourceBitmap, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Graphics.Imaging.ISoftwareBitmap__Impl.Vtbl** unsafe_sourceBitmap = default(global::Windows.Graphics.Imaging.ISoftwareBitmap__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap__retval = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap__retval = default(global::Microsoft.Graphics.Canvas.CanvasBitmap);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_sourceBitmap = (global::Windows.Graphics.Imaging.ISoftwareBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sourceBitmap, 
									typeof(global::Windows.Graphics.Imaging.ISoftwareBitmap).TypeHandle
								);
				unsafe_bitmap__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_sourceBitmap, 
									&(unsafe_bitmap__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				bitmap__retval = (global::Microsoft.Graphics.Canvas.CanvasBitmap)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_bitmap__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasBitmap).TypeHandle
								);
				// Return
				return bitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sourceBitmap)));
				global::System.GC.KeepAlive(sourceBitmap);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmapStatics.LoadAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasBitmap___Windows_Foundation__IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap> Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__string___IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasBitmap___(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					string fileName, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::System.Runtime.InteropServices.HSTRING unsafe_fileName = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V___Impl.Vtbl** unsafe_canvasBitmap__retval = default(global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap> canvasBitmap__retval = default(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				fixed (char* pBuffer_fileName = fileName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_fileName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_fileName, fileName, &(hstring_header_fileName), &(unsafe_fileName));
					unsafe_canvasBitmap__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_resourceCreator, 
										unsafe_fileName, 
										&(unsafe_canvasBitmap__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					canvasBitmap__retval = (global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_canvasBitmap__retval), 
										typeof(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>).TypeHandle
									);
				}
				// Return
				return canvasBitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasBitmap__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmapStatics.LoadAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasBitmap___Windows_Foundation__IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap> Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__string__float___IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasBitmap___(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					string fileName, 
					float dpi, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::System.Runtime.InteropServices.HSTRING unsafe_fileName = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V___Impl.Vtbl** unsafe_canvasBitmap__retval = default(global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap> canvasBitmap__retval = default(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				fixed (char* pBuffer_fileName = fileName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_fileName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_fileName, fileName, &(hstring_header_fileName), &(unsafe_fileName));
					unsafe_canvasBitmap__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_resourceCreator, 
										unsafe_fileName, 
										dpi, 
										&(unsafe_canvasBitmap__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					canvasBitmap__retval = (global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_canvasBitmap__retval), 
										typeof(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>).TypeHandle
									);
				}
				// Return
				return canvasBitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasBitmap__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmapStatics.LoadAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasAlphaMode__Microsoft_Graphics_Canvas__CanvasAlphaMode, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasBitmap___Windows_Foundation__IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap> Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__string__float__int_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasBitmap___(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					string fileName, 
					float dpi, 
					int alpha, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::System.Runtime.InteropServices.HSTRING unsafe_fileName = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V___Impl.Vtbl** unsafe_canvasBitmap__retval = default(global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap> canvasBitmap__retval = default(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				fixed (char* pBuffer_fileName = fileName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_fileName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_fileName, fileName, &(hstring_header_fileName), &(unsafe_fileName));
					unsafe_canvasBitmap__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_resourceCreator, 
										unsafe_fileName, 
										dpi, 
										alpha, 
										&(unsafe_canvasBitmap__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					canvasBitmap__retval = (global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_canvasBitmap__retval), 
										typeof(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>).TypeHandle
									);
				}
				// Return
				return canvasBitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasBitmap__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmapStatics.LoadAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasBitmap___Windows_Foundation__IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap> Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Uri___IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasBitmap___(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::System.Uri uri, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl** unsafe_uri = default(global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V___Impl.Vtbl** unsafe_canvasBitmap__retval = default(global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap> canvasBitmap__retval = default(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				if (uri != null)
					unsafe_uri = (global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**)global::McgInterop.McgHelpers.SystemUri2WindowsFoundationUri(uri);
				else
					unsafe_uri = null;
				unsafe_canvasBitmap__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_uri, 
									&(unsafe_canvasBitmap__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasBitmap__retval = (global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_canvasBitmap__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>).TypeHandle
								);
				// Return
				return canvasBitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_uri)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasBitmap__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmapStatics.LoadAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasBitmap___Windows_Foundation__IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap> Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Uri__float___IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasBitmap___(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::System.Uri uri, 
					float dpi, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl** unsafe_uri = default(global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V___Impl.Vtbl** unsafe_canvasBitmap__retval = default(global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap> canvasBitmap__retval = default(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				if (uri != null)
					unsafe_uri = (global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**)global::McgInterop.McgHelpers.SystemUri2WindowsFoundationUri(uri);
				else
					unsafe_uri = null;
				unsafe_canvasBitmap__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_uri, 
									dpi, 
									&(unsafe_canvasBitmap__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasBitmap__retval = (global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_canvasBitmap__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>).TypeHandle
								);
				// Return
				return canvasBitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_uri)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasBitmap__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmapStatics.LoadAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasAlphaMode__Microsoft_Graphics_Canvas__CanvasAlphaMode, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasBitmap___Windows_Foundation__IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap> Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Uri__float__int_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasBitmap___(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::System.Uri uri, 
					float dpi, 
					int alpha, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl** unsafe_uri = default(global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V___Impl.Vtbl** unsafe_canvasBitmap__retval = default(global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap> canvasBitmap__retval = default(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				if (uri != null)
					unsafe_uri = (global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**)global::McgInterop.McgHelpers.SystemUri2WindowsFoundationUri(uri);
				else
					unsafe_uri = null;
				unsafe_canvasBitmap__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_uri, 
									dpi, 
									alpha, 
									&(unsafe_canvasBitmap__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasBitmap__retval = (global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_canvasBitmap__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>).TypeHandle
								);
				// Return
				return canvasBitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_uri)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasBitmap__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmapStatics.LoadAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IRandomAccessStream__Windows_Storage_Streams__IRandomAccessStream *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasBitmap___Windows_Foundation__IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap> Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Storage_Streams_IRandomAccessStream___IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasBitmap___(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.Storage.Streams.IRandomAccessStream stream, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl** unsafe_stream = default(global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V___Impl.Vtbl** unsafe_canvasBitmap__retval = default(global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap> canvasBitmap__retval = default(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_stream = (global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									stream, 
									typeof(global::Windows.Storage.Streams.IRandomAccessStream).TypeHandle
								);
				unsafe_canvasBitmap__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_stream, 
									&(unsafe_canvasBitmap__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasBitmap__retval = (global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_canvasBitmap__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>).TypeHandle
								);
				// Return
				return canvasBitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_stream)));
				global::System.GC.KeepAlive(stream);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasBitmap__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmapStatics.LoadAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IRandomAccessStream__Windows_Storage_Streams__IRandomAccessStream *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasBitmap___Windows_Foundation__IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap> Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Storage_Streams_IRandomAccessStream__float___IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasBitmap___(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.Storage.Streams.IRandomAccessStream stream, 
					float dpi, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl** unsafe_stream = default(global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V___Impl.Vtbl** unsafe_canvasBitmap__retval = default(global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap> canvasBitmap__retval = default(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_stream = (global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									stream, 
									typeof(global::Windows.Storage.Streams.IRandomAccessStream).TypeHandle
								);
				unsafe_canvasBitmap__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_stream, 
									dpi, 
									&(unsafe_canvasBitmap__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasBitmap__retval = (global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_canvasBitmap__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>).TypeHandle
								);
				// Return
				return canvasBitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_stream)));
				global::System.GC.KeepAlive(stream);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasBitmap__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmapStatics.LoadAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IRandomAccessStream__Windows_Storage_Streams__IRandomAccessStream *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasAlphaMode__Microsoft_Graphics_Canvas__CanvasAlphaMode, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasBitmap___Windows_Foundation__IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap> Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Storage_Streams_IRandomAccessStream__float__int_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasBitmap___(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.Storage.Streams.IRandomAccessStream stream, 
					float dpi, 
					int alpha, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl** unsafe_stream = default(global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V___Impl.Vtbl** unsafe_canvasBitmap__retval = default(global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap> canvasBitmap__retval = default(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_stream = (global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									stream, 
									typeof(global::Windows.Storage.Streams.IRandomAccessStream).TypeHandle
								);
				unsafe_canvasBitmap__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_stream, 
									dpi, 
									alpha, 
									&(unsafe_canvasBitmap__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasBitmap__retval = (global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_canvasBitmap__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>).TypeHandle
								);
				// Return
				return canvasBitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_stream)));
				global::System.GC.KeepAlive(stream);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasBitmap__retval)));
			}
		}

		// Signature, Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface.get_Description, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Windows_Graphics_DirectX_Direct3D11_Direct3DSurfaceDescription__Windows_Graphics_DirectX_Direct3D11__Direct3DSurfaceDescription, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Graphics.DirectX.Direct3D11.Direct3DSurfaceDescription Func_Graphics_DirectX_Direct3D11_Direct3DSurfaceDescription__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Graphics.DirectX.Direct3D11.Direct3DSurfaceDescription unsafe_value__retval;
			global::Windows.Graphics.DirectX.Direct3D11.Direct3DSurfaceDescription value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<Microsoft.Graphics.Canvas.CanvasBitmap>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasBitmap___Windows_Foundation__IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasBitmap___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasBitmap_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasBitmap>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmap.get_Size, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Size__Windows_Foundation__Size, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Size Func__Size__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Size unsafe_size__retval;
			global::Windows.Foundation.Size size__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_size__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			size__retval = unsafe_size__retval;
			// Return
			return size__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmap.get_Format, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Graphics_DirectX_DirectXPixelFormat__Windows_Graphics_DirectX__DirectXPixelFormat, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Graphics.DirectX.DirectXPixelFormat Func_Graphics_DirectX_DirectXPixelFormat__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Graphics.DirectX.DirectXPixelFormat unsafe_value__retval;
			global::Windows.Graphics.DirectX.DirectXPixelFormat value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmap.get_AlphaMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasAlphaMode__Microsoft_Graphics_Canvas__CanvasAlphaMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasAlphaMode Func_Microsoft_Graphics_Canvas_CanvasAlphaMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.CanvasAlphaMode unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.CanvasAlphaMode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmap.SaveAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncAction__Windows_Foundation__IAsyncAction *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncAction Func_string___IAsyncAction__(
					global::System.__ComObject __this, 
					string fileName, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_fileName = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.Foundation.IAsyncAction__Impl.Vtbl** unsafe_asyncAction__retval = default(global::Windows.Foundation.IAsyncAction__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction asyncAction__retval = default(global::Windows.Foundation.IAsyncAction);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_fileName = fileName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_fileName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_fileName, fileName, &(hstring_header_fileName), &(unsafe_fileName));
					unsafe_asyncAction__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_fileName, 
										&(unsafe_asyncAction__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					asyncAction__retval = (global::Windows.Foundation.IAsyncAction)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_asyncAction__retval), 
										typeof(global::Windows.Foundation.IAsyncAction).TypeHandle
									);
				}
				// Return
				return asyncAction__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncAction__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmap.SaveAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasBitmapFileFormat__Microsoft_Graphics_Canvas__CanvasBitmapFileFormat, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncAction__Windows_Foundation__IAsyncAction *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncAction Func_string__int_IAsyncAction__(
					global::System.__ComObject __this, 
					string fileName, 
					int fileFormat, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_fileName = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.Foundation.IAsyncAction__Impl.Vtbl** unsafe_asyncAction__retval = default(global::Windows.Foundation.IAsyncAction__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction asyncAction__retval = default(global::Windows.Foundation.IAsyncAction);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_fileName = fileName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_fileName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_fileName, fileName, &(hstring_header_fileName), &(unsafe_fileName));
					unsafe_asyncAction__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_fileName, 
										fileFormat, 
										&(unsafe_asyncAction__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					asyncAction__retval = (global::Windows.Foundation.IAsyncAction)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_asyncAction__retval), 
										typeof(global::Windows.Foundation.IAsyncAction).TypeHandle
									);
				}
				// Return
				return asyncAction__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncAction__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmap.SaveAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasBitmapFileFormat__Microsoft_Graphics_Canvas__CanvasBitmapFileFormat, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncAction__Windows_Foundation__IAsyncAction *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncAction Func_string__intfloat___IAsyncAction__(
					global::System.__ComObject __this, 
					string fileName, 
					int fileFormat, 
					float quality, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_fileName = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.Foundation.IAsyncAction__Impl.Vtbl** unsafe_asyncAction__retval = default(global::Windows.Foundation.IAsyncAction__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction asyncAction__retval = default(global::Windows.Foundation.IAsyncAction);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_fileName = fileName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_fileName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_fileName, fileName, &(hstring_header_fileName), &(unsafe_fileName));
					unsafe_asyncAction__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_fileName, 
										fileFormat, 
										quality, 
										&(unsafe_asyncAction__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					asyncAction__retval = (global::Windows.Foundation.IAsyncAction)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_asyncAction__retval), 
										typeof(global::Windows.Foundation.IAsyncAction).TypeHandle
									);
				}
				// Return
				return asyncAction__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncAction__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmap.SaveAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IRandomAccessStream__Windows_Storage_Streams__IRandomAccessStream *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasBitmapFileFormat__Microsoft_Graphics_Canvas__CanvasBitmapFileFormat, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncAction__Windows_Foundation__IAsyncAction *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncAction Func_Storage_Streams_IRandomAccessStream__int_IAsyncAction__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IRandomAccessStream stream, 
					int fileFormat, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl** unsafe_stream = default(global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction__Impl.Vtbl** unsafe_asyncAction__retval = default(global::Windows.Foundation.IAsyncAction__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction asyncAction__retval = default(global::Windows.Foundation.IAsyncAction);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_stream = (global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									stream, 
									typeof(global::Windows.Storage.Streams.IRandomAccessStream).TypeHandle
								);
				unsafe_asyncAction__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_stream, 
									fileFormat, 
									&(unsafe_asyncAction__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				asyncAction__retval = (global::Windows.Foundation.IAsyncAction)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_asyncAction__retval), 
									typeof(global::Windows.Foundation.IAsyncAction).TypeHandle
								);
				// Return
				return asyncAction__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_stream)));
				global::System.GC.KeepAlive(stream);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncAction__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmap.SaveAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IRandomAccessStream__Windows_Storage_Streams__IRandomAccessStream *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasBitmapFileFormat__Microsoft_Graphics_Canvas__CanvasBitmapFileFormat, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncAction__Windows_Foundation__IAsyncAction *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncAction Func_Storage_Streams_IRandomAccessStream__intfloat___IAsyncAction__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IRandomAccessStream stream, 
					int fileFormat, 
					float quality, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl** unsafe_stream = default(global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction__Impl.Vtbl** unsafe_asyncAction__retval = default(global::Windows.Foundation.IAsyncAction__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction asyncAction__retval = default(global::Windows.Foundation.IAsyncAction);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_stream = (global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									stream, 
									typeof(global::Windows.Storage.Streams.IRandomAccessStream).TypeHandle
								);
				unsafe_asyncAction__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_stream, 
									fileFormat, 
									quality, 
									&(unsafe_asyncAction__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				asyncAction__retval = (global::Windows.Foundation.IAsyncAction)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_asyncAction__retval), 
									typeof(global::Windows.Foundation.IAsyncAction).TypeHandle
								);
				// Return
				return asyncAction__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_stream)));
				global::System.GC.KeepAlive(stream);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncAction__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmap.GetPixelBytes, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static byte[] Func_rg_byte__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			byte* unsafe_valueElements__retval = default(byte*);
			byte[] valueElements__retval = default(byte[]);
			uint unsafe_valueElements__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_valueElements__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_valueElements__retval_mcgLength), 
									&(unsafe_valueElements__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_valueElements__retval == null)
					valueElements__retval = null;
				else
				{
					valueElements__retval = new byte[unsafe_valueElements__retval_mcgLength];
					if (valueElements__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_valueElements__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] byte__unsigned char valueElements__retval
							valueElements__retval[mcgIdx] = unsafe_valueElements__retval[mcgIdx];
						}
				}
				// Return
				return valueElements__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_valueElements__retval);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmap.GetPixelBytes, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static byte[] Func_int__int__int__int__rg_byte__(
					global::System.__ComObject __this, 
					int left, 
					int top, 
					int width, 
					int height, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			byte* unsafe_valueElements__retval = default(byte*);
			byte[] valueElements__retval = default(byte[]);
			uint unsafe_valueElements__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_valueElements__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									left, 
									top, 
									width, 
									height, 
									&(unsafe_valueElements__retval_mcgLength), 
									&(unsafe_valueElements__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_valueElements__retval == null)
					valueElements__retval = null;
				else
				{
					valueElements__retval = new byte[unsafe_valueElements__retval_mcgLength];
					if (valueElements__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_valueElements__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] byte__unsigned char valueElements__retval
							valueElements__retval[mcgIdx] = unsafe_valueElements__retval[mcgIdx];
						}
				}
				// Return
				return valueElements__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_valueElements__retval);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmap.GetPixelBytes, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Storage_Streams_IBuffer__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IBuffer buffer, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_buffer = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_buffer = (global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									buffer, 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_buffer
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_buffer)));
				global::System.GC.KeepAlive(buffer);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmap.GetPixelBytes, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Storage_Streams_IBuffer__int__int__int__int__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IBuffer buffer, 
					int left, 
					int top, 
					int width, 
					int height, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_buffer = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_buffer = (global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									buffer, 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_buffer, 
									left, 
									top, 
									width, 
									height
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_buffer)));
				global::System.GC.KeepAlive(buffer);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmap.GetPixelColors, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_UI_Color__Windows_UI__Color *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Color[] Func_rg_UI_Color__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Color* unsafe_valueElements__retval = default(global::Windows.UI.Color*);
			global::Windows.UI.Color[] valueElements__retval = default(global::Windows.UI.Color[]);
			uint unsafe_valueElements__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_valueElements__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_valueElements__retval_mcgLength), 
									&(unsafe_valueElements__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_valueElements__retval == null)
					valueElements__retval = null;
				else
				{
					valueElements__retval = new global::Windows.UI.Color[unsafe_valueElements__retval_mcgLength];
					if (valueElements__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_valueElements__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color valueElements__retval
							valueElements__retval[mcgIdx] = unsafe_valueElements__retval[mcgIdx];
						}
				}
				// Return
				return valueElements__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_valueElements__retval);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmap.GetPixelColors, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_UI_Color__Windows_UI__Color *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Color[] Func_int__int__int__int__rg_UI_Color__(
					global::System.__ComObject __this, 
					int left, 
					int top, 
					int width, 
					int height, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Color* unsafe_valueElements__retval = default(global::Windows.UI.Color*);
			global::Windows.UI.Color[] valueElements__retval = default(global::Windows.UI.Color[]);
			uint unsafe_valueElements__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_valueElements__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									left, 
									top, 
									width, 
									height, 
									&(unsafe_valueElements__retval_mcgLength), 
									&(unsafe_valueElements__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_valueElements__retval == null)
					valueElements__retval = null;
				else
				{
					valueElements__retval = new global::Windows.UI.Color[unsafe_valueElements__retval_mcgLength];
					if (valueElements__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_valueElements__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color valueElements__retval
							valueElements__retval[mcgIdx] = unsafe_valueElements__retval[mcgIdx];
						}
				}
				// Return
				return valueElements__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_valueElements__retval);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmap.SetPixelBytes, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_byte__(
					global::System.__ComObject __this, 
					byte[] valueElements, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_valueElements_mcgLength = 0;
			byte* unsafe_valueElements;
			int unsafe___return__;
			// Marshalling
			if (valueElements != null)
				unsafe_valueElements_mcgLength = (uint)valueElements.Length;
			fixed (byte* pinned_valueElements = global::McgInterop.McgCoreHelpers.GetArrayForCompat(valueElements))
			{
				unsafe_valueElements = (byte*)pinned_valueElements;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_valueElements_mcgLength, 
									unsafe_valueElements
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmap.SetPixelBytes, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_byte__int__int__int__int__(
					global::System.__ComObject __this, 
					byte[] valueElements, 
					int left, 
					int top, 
					int width, 
					int height, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_valueElements_mcgLength = 0;
			byte* unsafe_valueElements;
			int unsafe___return__;
			// Marshalling
			if (valueElements != null)
				unsafe_valueElements_mcgLength = (uint)valueElements.Length;
			fixed (byte* pinned_valueElements = global::McgInterop.McgCoreHelpers.GetArrayForCompat(valueElements))
			{
				unsafe_valueElements = (byte*)pinned_valueElements;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_valueElements_mcgLength, 
									unsafe_valueElements, 
									left, 
									top, 
									width, 
									height
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmap.SetPixelColors, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_UI_Color__Windows_UI__Color *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Color__(
					global::System.__ComObject __this, 
					global::Windows.UI.Color[] valueElements, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_valueElements_mcgLength = 0;
			global::Windows.UI.Color* unsafe_valueElements;
			int unsafe___return__;
			// Marshalling
			if (valueElements != null)
				unsafe_valueElements_mcgLength = (uint)valueElements.Length;
			fixed (global::Windows.UI.Color* pinned_valueElements = global::McgInterop.McgCoreHelpers.GetArrayForCompat(valueElements))
			{
				unsafe_valueElements = (global::Windows.UI.Color*)pinned_valueElements;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_valueElements_mcgLength, 
									unsafe_valueElements
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmap.SetPixelColors, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_UI_Color__Windows_UI__Color *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Color__int__int__int__int__(
					global::System.__ComObject __this, 
					global::Windows.UI.Color[] valueElements, 
					int left, 
					int top, 
					int width, 
					int height, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_valueElements_mcgLength = 0;
			global::Windows.UI.Color* unsafe_valueElements;
			int unsafe___return__;
			// Marshalling
			if (valueElements != null)
				unsafe_valueElements_mcgLength = (uint)valueElements.Length;
			fixed (global::Windows.UI.Color* pinned_valueElements = global::McgInterop.McgCoreHelpers.GetArrayForCompat(valueElements))
			{
				unsafe_valueElements = (global::Windows.UI.Color*)pinned_valueElements;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_valueElements_mcgLength, 
									unsafe_valueElements, 
									left, 
									top, 
									width, 
									height
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmap.CopyPixelsFromBitmap, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasBitmap__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasBitmap otherBitmap, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_otherBitmap = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_otherBitmap = (global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									otherBitmap, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_otherBitmap
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_otherBitmap)));
				global::System.GC.KeepAlive(otherBitmap);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmap.CopyPixelsFromBitmap, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasBitmap__int__int__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasBitmap otherBitmap, 
					int destX, 
					int destY, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_otherBitmap = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_otherBitmap = (global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									otherBitmap, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_otherBitmap, 
									destX, 
									destY
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_otherBitmap)));
				global::System.GC.KeepAlive(otherBitmap);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasBitmap.CopyPixelsFromBitmap, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasBitmap__int__int__int__int__int__int__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasBitmap otherBitmap, 
					int destX, 
					int destY, 
					int sourceRectLeft, 
					int sourceRectTop, 
					int sourceRectWidth, 
					int sourceRectHeight, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_otherBitmap = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_otherBitmap = (global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									otherBitmap, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_otherBitmap, 
									destX, 
									destY, 
									sourceRectLeft, 
									sourceRectTop, 
									sourceRectWidth, 
									sourceRectHeight
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_otherBitmap)));
				global::System.GC.KeepAlive(otherBitmap);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasBrush.put_Opacity, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__(
					global::System.__ComObject __this, 
					float value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle.get_StartCap, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasCapStyle__Microsoft_Graphics_Canvas_Geometry__CanvasCapStyle, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasCapStyle Func_Microsoft_Graphics_Canvas_Geometry_CanvasCapStyle__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.CanvasCapStyle unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasCapStyle value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle.get_LineJoin, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasLineJoin__Microsoft_Graphics_Canvas_Geometry__CanvasLineJoin, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasLineJoin Func_Microsoft_Graphics_Canvas_Geometry_CanvasLineJoin__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.CanvasLineJoin unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasLineJoin value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle.get_DashStyle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasDashStyle__Microsoft_Graphics_Canvas_Geometry__CanvasDashStyle, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasDashStyle Func_Microsoft_Graphics_Canvas_Geometry_CanvasDashStyle__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.CanvasDashStyle unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasDashStyle value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle.get_CustomDashStyle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_float__float *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static float[] Func_rg_float__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			float* unsafe_valueElements__retval = default(float*);
			float[] valueElements__retval = default(float[]);
			uint unsafe_valueElements__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_valueElements__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_valueElements__retval_mcgLength), 
									&(unsafe_valueElements__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_valueElements__retval == null)
					valueElements__retval = null;
				else
				{
					valueElements__retval = new float[unsafe_valueElements__retval_mcgLength];
					if (valueElements__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_valueElements__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] float__float valueElements__retval
							valueElements__retval[mcgIdx] = unsafe_valueElements__retval[mcgIdx];
						}
				}
				// Return
				return valueElements__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_valueElements__retval);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle.put_CustomDashStyle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_float__float *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_float__(
					global::System.__ComObject __this, 
					float[] valueElements, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_valueElements_mcgLength = 0;
			float* unsafe_valueElements;
			int unsafe___return__;
			// Marshalling
			if (valueElements != null)
				unsafe_valueElements_mcgLength = (uint)valueElements.Length;
			fixed (float* pinned_valueElements = global::McgInterop.McgCoreHelpers.GetArrayForCompat(valueElements))
			{
				unsafe_valueElements = (float*)pinned_valueElements;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_valueElements_mcgLength, 
									unsafe_valueElements
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle.get_TransformBehavior, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeTransformBehavior__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeTransformBehavior, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeTransformBehavior Func_Microsoft_Graphics_Canvas_Geometry_CanvasStrokeTransformBehavior__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeTransformBehavior unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeTransformBehavior value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextFormatStatics.GetSystemFontFamilies, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_string__System.Runtime.InteropServices.HSTRING *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static string[] Func_rg_string__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING* unsafe_valueElements__retval = default(global::System.Runtime.InteropServices.HSTRING*);
			string[] valueElements__retval = default(string[]);
			uint unsafe_valueElements__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_valueElements__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_valueElements__retval_mcgLength), 
									&(unsafe_valueElements__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_valueElements__retval == null)
					valueElements__retval = null;
				else
				{
					valueElements__retval = new string[unsafe_valueElements__retval_mcgLength];
					if (valueElements__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_valueElements__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING valueElements__retval
							valueElements__retval[mcgIdx] = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_valueElements__retval[mcgIdx]);
						}
				}
				// Return
				return valueElements__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_valueElements__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_valueElements__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING valueElements__retval
						global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe_valueElements__retval[mcgIdx_1].handle);
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_valueElements__retval);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextFormatStatics.GetSystemFontFamilies, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_string___Windows_Foundation_Collections__IVectorView_A_string_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_string__System.Runtime.InteropServices.HSTRING *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static string[] Func__IReadOnlyList_1_string___rg_string__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.IReadOnlyList<string> localeList, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_string_V___Impl.Vtbl** unsafe_localeList = default(global::System.Collections.Generic.IReadOnlyList_A_string_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.HSTRING* unsafe_valueElements__retval = default(global::System.Runtime.InteropServices.HSTRING*);
			string[] valueElements__retval = default(string[]);
			uint unsafe_valueElements__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_localeList = (global::System.Collections.Generic.IReadOnlyList_A_string_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									localeList, 
									typeof(global::System.Collections.Generic.IReadOnlyList<string>).TypeHandle
								);
				unsafe_valueElements__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_localeList, 
									&(unsafe_valueElements__retval_mcgLength), 
									&(unsafe_valueElements__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_valueElements__retval == null)
					valueElements__retval = null;
				else
				{
					valueElements__retval = new string[unsafe_valueElements__retval_mcgLength];
					if (valueElements__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_valueElements__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING valueElements__retval
							valueElements__retval[mcgIdx] = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_valueElements__retval[mcgIdx]);
						}
				}
				// Return
				return valueElements__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_localeList)));
				global::System.GC.KeepAlive(localeList);
				if (unsafe_valueElements__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_valueElements__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING valueElements__retval
						global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe_valueElements__retval[mcgIdx_1].handle);
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_valueElements__retval);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextFormat.get_Direction, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextDirection__Microsoft_Graphics_Canvas_Text__CanvasTextDirection, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasTextDirection Func_Microsoft_Graphics_Canvas_Text_CanvasTextDirection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasTextDirection unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasTextDirection value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextFormat.get_FontStretch, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Text_FontStretch__Windows_UI_Text__FontStretch, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Text.FontStretch Func_UI_Text_FontStretch__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Text.FontStretch unsafe_value__retval;
			global::Windows.UI.Text.FontStretch value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextFormat.get_FontStyle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Text_FontStyle__Windows_UI_Text__FontStyle, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Text.FontStyle Func_UI_Text_FontStyle__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Text.FontStyle unsafe_value__retval;
			global::Windows.UI.Text.FontStyle value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextFormat.get_FontWeight, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Windows_UI_Text_FontWeight__Windows_UI_Text__FontWeight, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Text.FontWeight Func_UI_Text_FontWeight__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Text.FontWeight unsafe_value__retval;
			global::Windows.UI.Text.FontWeight value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextFormat.put_FontWeight, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Windows_UI_Text_FontWeight__Windows_UI_Text__FontWeight, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Text_FontWeight__(
					global::System.__ComObject __this, 
					global::Windows.UI.Text.FontWeight value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextFormat.get_VerticalAlignment, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasVerticalAlignment__Microsoft_Graphics_Canvas_Text__CanvasVerticalAlignment, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasVerticalAlignment Func_Microsoft_Graphics_Canvas_Text_CanvasVerticalAlignment__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasVerticalAlignment unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasVerticalAlignment value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextFormat.get_HorizontalAlignment, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasHorizontalAlignment__Microsoft_Graphics_Canvas_Text__CanvasHorizontalAlignment, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasHorizontalAlignment Func_Microsoft_Graphics_Canvas_Text_CanvasHorizontalAlignment__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasHorizontalAlignment unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasHorizontalAlignment value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextFormat.get_TrimmingGranularity, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextTrimmingGranularity__Microsoft_Graphics_Canvas_Text__CanvasTextTrimmingGranularity, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasTextTrimmingGranularity Func_Microsoft_Graphics_Canvas_Text_CanvasTextTrimmingGranularity__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasTextTrimmingGranularity unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasTextTrimmingGranularity value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextFormat.put_TrimmingDelimiterCount, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__(
					global::System.__ComObject __this, 
					int value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextFormat.get_WordWrapping, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasWordWrapping__Microsoft_Graphics_Canvas_Text__CanvasWordWrapping, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasWordWrapping Func_Microsoft_Graphics_Canvas_Text_CanvasWordWrapping__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasWordWrapping unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasWordWrapping value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextFormat.get_Options, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasDrawTextOptions__Microsoft_Graphics_Canvas_Text__CanvasDrawTextOptions, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasDrawTextOptions Func_Microsoft_Graphics_Canvas_Text_CanvasDrawTextOptions__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasDrawTextOptions unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasDrawTextOptions value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextFormat.put_Options, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasDrawTextOptions__Microsoft_Graphics_Canvas_Text__CanvasDrawTextOptions, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Text_CanvasDrawTextOptions__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasDrawTextOptions value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextFormat.get_VerticalGlyphOrientation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasVerticalGlyphOrientation__Microsoft_Graphics_Canvas_Text__CanvasVerticalGlyphOrientation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasVerticalGlyphOrientation Func_Microsoft_Graphics_Canvas_Text_CanvasVerticalGlyphOrientation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasVerticalGlyphOrientation unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasVerticalGlyphOrientation value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextFormat.get_OpticalAlignment, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasOpticalAlignment__Microsoft_Graphics_Canvas_Text__CanvasOpticalAlignment, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasOpticalAlignment Func_Microsoft_Graphics_Canvas_Text_CanvasOpticalAlignment__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasOpticalAlignment unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasOpticalAlignment value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextFormat.get_LineSpacingMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasLineSpacingMode__Microsoft_Graphics_Canvas_Text__CanvasLineSpacingMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasLineSpacingMode Func_Microsoft_Graphics_Canvas_Text_CanvasLineSpacingMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasLineSpacingMode unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasLineSpacingMode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextFormat.get_TrimmingSign, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTrimmingSign__Microsoft_Graphics_Canvas_Text__CanvasTrimmingSign, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasTrimmingSign Func_Microsoft_Graphics_Canvas_Text_CanvasTrimmingSign__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasTrimmingSign unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasTrimmingSign value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextFormat.get_CustomTrimmingSign, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Text_ICanvasTextInlineObject__Microsoft_Graphics_Canvas_Text__ICanvasTextInlineObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject Func_Microsoft_Graphics_Canvas_Text_ICanvasTextInlineObject__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject__Impl.Vtbl** unsafe_value__retval = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject value__retval = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextFormat.put_CustomTrimmingSign, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Text_ICanvasTextInlineObject__Microsoft_Graphics_Canvas_Text__ICanvasTextInlineObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Text_ICanvasTextInlineObject__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject__Impl.Vtbl** unsafe_value = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject.Draw, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Text_ICanvasTextRenderer__Microsoft_Graphics_Canvas_Text__ICanvasTextRenderer *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Text_ICanvasTextRenderer__Numerics_Vector2__bool__bool__object__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderer textRenderer, 
					global::System.Numerics.Vector2 point, 
					bool isSideways, 
					bool isRightToLeft, 
					object brush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderer__Impl.Vtbl** unsafe_textRenderer = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderer__Impl.Vtbl**);
			sbyte unsafe_isSideways;
			sbyte unsafe_isRightToLeft;
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_brush = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_textRenderer = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									textRenderer, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderer).TypeHandle
								);
				unsafe_isSideways = (isSideways ? ((sbyte)1) : ((sbyte)0));
				unsafe_isRightToLeft = (isRightToLeft ? ((sbyte)1) : ((sbyte)0));
				unsafe_brush = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(brush);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_textRenderer, 
									point, 
									unsafe_isSideways, 
									unsafe_isRightToLeft, 
									unsafe_brush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_textRenderer)));
				global::System.GC.KeepAlive(textRenderer);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject.get_BreakBefore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasLineBreakCondition__Microsoft_Graphics_Canvas_Text__CanvasLineBreakCondition, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasLineBreakCondition Func_Microsoft_Graphics_Canvas_Text_CanvasLineBreakCondition__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasLineBreakCondition unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasLineBreakCondition value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontFace.GetRecommendedRenderingMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextMeasuringMode__Microsoft_Graphics_Canvas_Text__CanvasTextMeasuringMode, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextRenderingParameters__Microsoft_Graphics_Canvas_Text__CanvasTextRenderingParameters *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextRenderingMode__Microsoft_Graphics_Canvas_Text__CanvasTextRenderingMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasTextRenderingMode Func_float__float__intMicrosoft_Graphics_Canvas_Text_CanvasTextRenderingParameters__Microsoft_Graphics_Canvas_Text_CanvasTextRenderingMode__(
					global::System.__ComObject __this, 
					float fontSize, 
					float dpi, 
					int measuringMode, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextRenderingParameters renderingParameters, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderingParameters__Impl.Vtbl** unsafe_renderingParameters = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderingParameters__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.CanvasTextRenderingMode unsafe_renderingMode__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasTextRenderingMode renderingMode__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_renderingParameters = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderingParameters__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									renderingParameters, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderingParameters).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									fontSize, 
									dpi, 
									measuringMode, 
									unsafe_renderingParameters, 
									&(unsafe_renderingMode__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				renderingMode__retval = unsafe_renderingMode__retval;
				// Return
				return renderingMode__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_renderingParameters)));
				global::System.GC.KeepAlive(renderingParameters);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontFace.GetRecommendedRenderingMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextMeasuringMode__Microsoft_Graphics_Canvas_Text__CanvasTextMeasuringMode, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextRenderingParameters__Microsoft_Graphics_Canvas_Text__CanvasTextRenderingParameters *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasAntialiasing__Microsoft_Graphics_Canvas__CanvasAntialiasing, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextRenderingMode__Microsoft_Graphics_Canvas_Text__CanvasTextRenderingMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasTextRenderingMode Func_float__float__intMicrosoft_Graphics_Canvas_Text_CanvasTextRenderingParameters__Numerics_Matrix3x2__bool__intMicrosoft_Graphics_Canvas_Text_CanvasTextRenderingMode__(
					global::System.__ComObject __this, 
					float fontSize, 
					float dpi, 
					int measuringMode, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextRenderingParameters renderingParameters, 
					global::System.Numerics.Matrix3x2 transform, 
					bool isSideways, 
					int outlineThreshold, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderingParameters__Impl.Vtbl** unsafe_renderingParameters = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderingParameters__Impl.Vtbl**);
			sbyte unsafe_isSideways;
			global::Microsoft.Graphics.Canvas.Text.CanvasTextRenderingMode unsafe_renderingMode__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasTextRenderingMode renderingMode__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_renderingParameters = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderingParameters__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									renderingParameters, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderingParameters).TypeHandle
								);
				unsafe_isSideways = (isSideways ? ((sbyte)1) : ((sbyte)0));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									fontSize, 
									dpi, 
									measuringMode, 
									unsafe_renderingParameters, 
									transform, 
									unsafe_isSideways, 
									outlineThreshold, 
									&(unsafe_renderingMode__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				renderingMode__retval = unsafe_renderingMode__retval;
				// Return
				return renderingMode__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_renderingParameters)));
				global::System.GC.KeepAlive(renderingParameters);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontFace.GetRecommendedGridFit, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextMeasuringMode__Microsoft_Graphics_Canvas_Text__CanvasTextMeasuringMode, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextRenderingParameters__Microsoft_Graphics_Canvas_Text__CanvasTextRenderingParameters *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasAntialiasing__Microsoft_Graphics_Canvas__CanvasAntialiasing, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextGridFit__Microsoft_Graphics_Canvas_Text__CanvasTextGridFit, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasTextGridFit Func_float__float__intMicrosoft_Graphics_Canvas_Text_CanvasTextRenderingParameters__Numerics_Matrix3x2__bool__intMicrosoft_Graphics_Canvas_Text_CanvasTextGridFit__(
					global::System.__ComObject __this, 
					float fontSize, 
					float dpi, 
					int measuringMode, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextRenderingParameters renderingParameters, 
					global::System.Numerics.Matrix3x2 transform, 
					bool isSideways, 
					int outlineThreshold, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderingParameters__Impl.Vtbl** unsafe_renderingParameters = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderingParameters__Impl.Vtbl**);
			sbyte unsafe_isSideways;
			global::Microsoft.Graphics.Canvas.Text.CanvasTextGridFit unsafe_gridFit__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasTextGridFit gridFit__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_renderingParameters = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderingParameters__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									renderingParameters, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderingParameters).TypeHandle
								);
				unsafe_isSideways = (isSideways ? ((sbyte)1) : ((sbyte)0));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									fontSize, 
									dpi, 
									measuringMode, 
									unsafe_renderingParameters, 
									transform, 
									unsafe_isSideways, 
									outlineThreshold, 
									&(unsafe_gridFit__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				gridFit__retval = unsafe_gridFit__retval;
				// Return
				return gridFit__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_renderingParameters)));
				global::System.GC.KeepAlive(renderingParameters);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontFace.get_SubscriptPosition, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Vector2 Func_Numerics_Vector2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Vector2 unsafe_value__retval;
			global::System.Numerics.Vector2 value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontFace.get_UnicodeRanges, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange__Microsoft_Graphics_Canvas_Text__CanvasUnicodeRange *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange[] Func_rg_Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange* unsafe_valueElements__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange*);
			global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange[] valueElements__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange[]);
			uint unsafe_valueElements__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_valueElements__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_valueElements__retval_mcgLength), 
									&(unsafe_valueElements__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_valueElements__retval == null)
					valueElements__retval = null;
				else
				{
					valueElements__retval = new global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange[unsafe_valueElements__retval_mcgLength];
					if (valueElements__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_valueElements__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange__Microsoft_Graphics_Canvas_Text__CanvasUnicodeRange valueElements__retval
							valueElements__retval[mcgIdx] = unsafe_valueElements__retval[mcgIdx];
						}
				}
				// Return
				return valueElements__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_valueElements__retval);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontFace.GetVerticalGlyphVariants, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_int__int *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_int__int *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int[] Func_rg_int__rg_int__(
					global::System.__ComObject __this, 
					int[] inputElements, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_inputElements_mcgLength = 0;
			int* unsafe_inputElements;
			int* unsafe_outputElements__retval = default(int*);
			int[] outputElements__retval = default(int[]);
			uint unsafe_outputElements__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (inputElements != null)
					unsafe_inputElements_mcgLength = (uint)inputElements.Length;
				fixed (int* pinned_inputElements = global::McgInterop.McgCoreHelpers.GetArrayForCompat(inputElements))
				{
					unsafe_inputElements = (int*)pinned_inputElements;
					unsafe_outputElements__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_inputElements_mcgLength, 
										unsafe_inputElements, 
										&(unsafe_outputElements__retval_mcgLength), 
										&(unsafe_outputElements__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					if (unsafe_outputElements__retval == null)
						outputElements__retval = null;
					else
					{
						outputElements__retval = new int[unsafe_outputElements__retval_mcgLength];
						if (outputElements__retval != null)
							for (uint mcgIdx = 0; (mcgIdx < unsafe_outputElements__retval_mcgLength); mcgIdx++)
							{
								// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] int__int outputElements__retval
								outputElements__retval[mcgIdx] = unsafe_outputElements__retval[mcgIdx];
							}
					}
				}
				// Return
				return outputElements__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_outputElements__retval);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontFace.get_FileFormatType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontFileFormatType__Microsoft_Graphics_Canvas_Text__CanvasFontFileFormatType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasFontFileFormatType Func_Microsoft_Graphics_Canvas_Text_CanvasFontFileFormatType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasFontFileFormatType unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasFontFileFormatType value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontFace.get_Simulations, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontSimulations__Microsoft_Graphics_Canvas_Text__CanvasFontSimulations, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasFontSimulations Func_Microsoft_Graphics_Canvas_Text_CanvasFontSimulations__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasFontSimulations unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasFontSimulations value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontFace.GetGlyphIndices, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_uint__unsigned int *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_int__int *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int[] Func_rg_uint__rg_int__(
					global::System.__ComObject __this, 
					uint[] inputElements, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_inputElements_mcgLength = 0;
			uint* unsafe_inputElements;
			int* unsafe_outputElements__retval = default(int*);
			int[] outputElements__retval = default(int[]);
			uint unsafe_outputElements__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (inputElements != null)
					unsafe_inputElements_mcgLength = (uint)inputElements.Length;
				fixed (uint* pinned_inputElements = global::McgInterop.McgCoreHelpers.GetArrayForCompat(inputElements))
				{
					unsafe_inputElements = (uint*)pinned_inputElements;
					unsafe_outputElements__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_inputElements_mcgLength, 
										unsafe_inputElements, 
										&(unsafe_outputElements__retval_mcgLength), 
										&(unsafe_outputElements__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					if (unsafe_outputElements__retval == null)
						outputElements__retval = null;
					else
					{
						outputElements__retval = new int[unsafe_outputElements__retval_mcgLength];
						if (outputElements__retval != null)
							for (uint mcgIdx = 0; (mcgIdx < unsafe_outputElements__retval_mcgLength); mcgIdx++)
							{
								// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] int__int outputElements__retval
								outputElements__retval[mcgIdx] = unsafe_outputElements__retval[mcgIdx];
							}
					}
				}
				// Return
				return outputElements__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_outputElements__retval);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontFace.GetGlyphMetrics, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_int__int *, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__Microsoft_Graphics_Canvas_Text__CanvasGlyphMetrics *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics[] Func_rg_int__bool__rg_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__(
					global::System.__ComObject __this, 
					int[] inputElements, 
					bool isSideways, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_inputElements_mcgLength = 0;
			int* unsafe_inputElements;
			sbyte unsafe_isSideways;
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics* unsafe_outputElements__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics*);
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics[] outputElements__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics[]);
			uint unsafe_outputElements__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (inputElements != null)
					unsafe_inputElements_mcgLength = (uint)inputElements.Length;
				fixed (int* pinned_inputElements = global::McgInterop.McgCoreHelpers.GetArrayForCompat(inputElements))
				{
					unsafe_inputElements = (int*)pinned_inputElements;
					unsafe_isSideways = (isSideways ? ((sbyte)1) : ((sbyte)0));
					unsafe_outputElements__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_inputElements_mcgLength, 
										unsafe_inputElements, 
										unsafe_isSideways, 
										&(unsafe_outputElements__retval_mcgLength), 
										&(unsafe_outputElements__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					if (unsafe_outputElements__retval == null)
						outputElements__retval = null;
					else
					{
						outputElements__retval = new global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics[unsafe_outputElements__retval_mcgLength];
						if (outputElements__retval != null)
							for (uint mcgIdx = 0; (mcgIdx < unsafe_outputElements__retval_mcgLength); mcgIdx++)
							{
								// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__Microsoft_Graphics_Canvas_Text__CanvasGlyphMetrics outputElements__retval
								outputElements__retval[mcgIdx] = unsafe_outputElements__retval[mcgIdx];
							}
					}
				}
				// Return
				return outputElements__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_outputElements__retval);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontFace.GetGdiCompatibleGlyphMetrics, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_int__int *, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__Microsoft_Graphics_Canvas_Text__CanvasGlyphMetrics *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics[] Func_float__float__Numerics_Matrix3x2__bool__rg_int__bool__rg_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__(
					global::System.__ComObject __this, 
					float fontSize, 
					float dpi, 
					global::System.Numerics.Matrix3x2 transform, 
					bool useGdiNatural, 
					int[] inputElements, 
					bool isSideways, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			sbyte unsafe_useGdiNatural;
			uint unsafe_inputElements_mcgLength = 0;
			int* unsafe_inputElements;
			sbyte unsafe_isSideways;
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics* unsafe_outputElements__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics*);
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics[] outputElements__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics[]);
			uint unsafe_outputElements__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_useGdiNatural = (useGdiNatural ? ((sbyte)1) : ((sbyte)0));
				if (inputElements != null)
					unsafe_inputElements_mcgLength = (uint)inputElements.Length;
				fixed (int* pinned_inputElements = global::McgInterop.McgCoreHelpers.GetArrayForCompat(inputElements))
				{
					unsafe_inputElements = (int*)pinned_inputElements;
					unsafe_isSideways = (isSideways ? ((sbyte)1) : ((sbyte)0));
					unsafe_outputElements__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										fontSize, 
										dpi, 
										transform, 
										unsafe_useGdiNatural, 
										unsafe_inputElements_mcgLength, 
										unsafe_inputElements, 
										unsafe_isSideways, 
										&(unsafe_outputElements__retval_mcgLength), 
										&(unsafe_outputElements__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					if (unsafe_outputElements__retval == null)
						outputElements__retval = null;
					else
					{
						outputElements__retval = new global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics[unsafe_outputElements__retval_mcgLength];
						if (outputElements__retval != null)
							for (uint mcgIdx = 0; (mcgIdx < unsafe_outputElements__retval_mcgLength); mcgIdx++)
							{
								// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__Microsoft_Graphics_Canvas_Text__CanvasGlyphMetrics outputElements__retval
								outputElements__retval[mcgIdx] = unsafe_outputElements__retval[mcgIdx];
							}
					}
				}
				// Return
				return outputElements__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_outputElements__retval);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontFace.get_FamilyNames, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyDictionary_2_string__string___Windows_Foundation_Collections__IMapView_A_string_j_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyDictionary<string, string> Func__IReadOnlyDictionary_2_string__string___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyDictionary_A_string_j_string_V___Impl.Vtbl** unsafe_values__retval = default(global::System.Collections.Generic.IReadOnlyDictionary_A_string_j_string_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyDictionary<string, string> values__retval = default(global::System.Collections.Generic.IReadOnlyDictionary<string, string>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_values__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_values__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				values__retval = (global::System.Collections.Generic.IReadOnlyDictionary<string, string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_values__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyDictionary<string, string>).TypeHandle
								);
				// Return
				return values__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_values__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontFace.GetInformationalStrings, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontInformation__Microsoft_Graphics_Canvas_Text__CanvasFontInformation, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyDictionary_2_string__string___Windows_Foundation_Collections__IMapView_A_string_j_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyDictionary<string, string> Func_int_IReadOnlyDictionary_2_string__string___(
					global::System.__ComObject __this, 
					int fontInformation, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyDictionary_A_string_j_string_V___Impl.Vtbl** unsafe_values__retval = default(global::System.Collections.Generic.IReadOnlyDictionary_A_string_j_string_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyDictionary<string, string> values__retval = default(global::System.Collections.Generic.IReadOnlyDictionary<string, string>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_values__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									fontInformation, 
									&(unsafe_values__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				values__retval = (global::System.Collections.Generic.IReadOnlyDictionary<string, string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_values__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyDictionary<string, string>).TypeHandle
								);
				// Return
				return values__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_values__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontFace.HasCharacter, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_uint__bool__(
					global::System.__ComObject __this, 
					uint unicodeValue, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			bool value__retval;
			sbyte unsafe_value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								unicodeValue, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval != 0;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontFace.GetGlyphRunBounds, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasDrawingSession__Microsoft_Graphics_Canvas__CanvasDrawingSession *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph *, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Rect Func_Microsoft_Graphics_Canvas_CanvasDrawingSession__Numerics_Vector2__float__rg_Microsoft_Graphics_Canvas_Text_CanvasGlyph__bool__uint___Rect__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasDrawingSession drawingSession, 
					global::System.Numerics.Vector2 point, 
					float fontSize, 
					global::Microsoft.Graphics.Canvas.Text.CanvasGlyph[] glyphs, 
					bool isSideways, 
					uint bidiLevel, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl** unsafe_drawingSession = default(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyph* unsafe_glyphs = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyph*);
			uint unsafe_glyphs_mcgLength = 0;
			sbyte unsafe_isSideways;
			global::Windows.Foundation.Rect unsafe_bounds__retval;
			global::Windows.Foundation.Rect bounds__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_drawingSession = (global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									drawingSession, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession).TypeHandle
								);
				if (glyphs == null)
					unsafe_glyphs = null;
				else
				{
					if (glyphs != null)
						unsafe_glyphs_mcgLength = (uint)glyphs.Length;
					if (glyphs != null)
						unsafe_glyphs = (global::Microsoft.Graphics.Canvas.Text.CanvasGlyph*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_glyphs_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasGlyph))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_glyphs_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph glyphs
						unsafe_glyphs[mcgIdx] = glyphs[mcgIdx];
					}
				}
				unsafe_isSideways = (isSideways ? ((sbyte)1) : ((sbyte)0));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_drawingSession, 
									point, 
									fontSize, 
									unsafe_glyphs_mcgLength, 
									unsafe_glyphs, 
									unsafe_isSideways, 
									bidiLevel, 
									&(unsafe_bounds__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				bounds__retval = unsafe_bounds__retval;
				// Return
				return bounds__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_drawingSession)));
				global::System.GC.KeepAlive(drawingSession);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_glyphs);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontFace.GetGlyphRunBounds, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasDrawingSession__Microsoft_Graphics_Canvas__CanvasDrawingSession *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph *, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextMeasuringMode__Microsoft_Graphics_Canvas_Text__CanvasTextMeasuringMode, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Rect Func_Microsoft_Graphics_Canvas_CanvasDrawingSession__Numerics_Vector2__float__rg_Microsoft_Graphics_Canvas_Text_CanvasGlyph__bool__uint__int_Rect__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasDrawingSession drawingSession, 
					global::System.Numerics.Vector2 point, 
					float fontSize, 
					global::Microsoft.Graphics.Canvas.Text.CanvasGlyph[] glyphs, 
					bool isSideways, 
					uint bidiLevel, 
					int measuringMode, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl** unsafe_drawingSession = default(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyph* unsafe_glyphs = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyph*);
			uint unsafe_glyphs_mcgLength = 0;
			sbyte unsafe_isSideways;
			global::Windows.Foundation.Rect unsafe_bounds__retval;
			global::Windows.Foundation.Rect bounds__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_drawingSession = (global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									drawingSession, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession).TypeHandle
								);
				if (glyphs == null)
					unsafe_glyphs = null;
				else
				{
					if (glyphs != null)
						unsafe_glyphs_mcgLength = (uint)glyphs.Length;
					if (glyphs != null)
						unsafe_glyphs = (global::Microsoft.Graphics.Canvas.Text.CanvasGlyph*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_glyphs_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasGlyph))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_glyphs_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph glyphs
						unsafe_glyphs[mcgIdx] = glyphs[mcgIdx];
					}
				}
				unsafe_isSideways = (isSideways ? ((sbyte)1) : ((sbyte)0));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_drawingSession, 
									point, 
									fontSize, 
									unsafe_glyphs_mcgLength, 
									unsafe_glyphs, 
									unsafe_isSideways, 
									bidiLevel, 
									measuringMode, 
									&(unsafe_bounds__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				bounds__retval = unsafe_bounds__retval;
				// Return
				return bounds__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_drawingSession)));
				global::System.GC.KeepAlive(drawingSession);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_glyphs);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextRenderingParametersFactory.Create, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextRenderingMode__Microsoft_Graphics_Canvas_Text__CanvasTextRenderingMode, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextGridFit__Microsoft_Graphics_Canvas_Text__CanvasTextGridFit, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_intintIntPtr__(
					global::System.__ComObject __this, 
					int textRenderingMode, 
					int gridFit, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_textRenderingParameters__retval;
			global::System.IntPtr textRenderingParameters__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								textRenderingMode, 
								gridFit, 
								&(unsafe_textRenderingParameters__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			textRenderingParameters__retval = unsafe_textRenderingParameters__retval;
			// Return
			return textRenderingParameters__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextRenderingParameters.get_RenderingMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextRenderingMode__Microsoft_Graphics_Canvas_Text__CanvasTextRenderingMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasTextRenderingMode Func_Microsoft_Graphics_Canvas_Text_CanvasTextRenderingMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasTextRenderingMode unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasTextRenderingMode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextRenderingParameters.get_GridFit, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextGridFit__Microsoft_Graphics_Canvas_Text__CanvasTextGridFit, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasTextGridFit Func_Microsoft_Graphics_Canvas_Text_CanvasTextGridFit__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasTextGridFit unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasTextGridFit value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometryStatics.CreateRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator___Rect__Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.Foundation.Rect rect, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_geometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									rect, 
									&(unsafe_geometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_geometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
								);
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometryStatics.CreateRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__float__float__float__float__Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					float x, 
					float y, 
					float w, 
					float h, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_geometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									x, 
									y, 
									w, 
									h, 
									&(unsafe_geometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_geometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
								);
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometryStatics.CreateRoundedRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator___Rect__float__float__Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.Foundation.Rect rect, 
					float radiusX, 
					float radiusY, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_geometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									rect, 
									radiusX, 
									radiusY, 
									&(unsafe_geometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_geometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
								);
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometryStatics.CreateRoundedRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__float__float__float__float__float__float__Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					float x, 
					float y, 
					float w, 
					float h, 
					float radiusX, 
					float radiusY, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_geometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									x, 
									y, 
									w, 
									h, 
									radiusX, 
									radiusY, 
									&(unsafe_geometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_geometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
								);
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometryStatics.CreateEllipse, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Numerics_Vector2__float__float__Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::System.Numerics.Vector2 centerPoint, 
					float radiusX, 
					float radiusY, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_geometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									centerPoint, 
									radiusX, 
									radiusY, 
									&(unsafe_geometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_geometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
								);
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometryStatics.CreateCircle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Numerics_Vector2__float__Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::System.Numerics.Vector2 centerPoint, 
					float radius, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_geometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									centerPoint, 
									radius, 
									&(unsafe_geometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_geometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
								);
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometryStatics.CreateCircle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__float__float__float__Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					float x, 
					float y, 
					float radius, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_geometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									x, 
									y, 
									radius, 
									&(unsafe_geometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_geometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
								);
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometryStatics.CreatePath, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasPathBuilder__Microsoft_Graphics_Canvas_Geometry__CanvasPathBuilder *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_Microsoft_Graphics_Canvas_Geometry_CanvasPathBuilder__Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasPathBuilder pathBuilder, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasPathBuilder__Impl.Vtbl** unsafe_pathBuilder = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasPathBuilder__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_pathBuilder = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasPathBuilder__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									pathBuilder, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasPathBuilder).TypeHandle
								);
				unsafe_geometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_pathBuilder, 
									&(unsafe_geometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_geometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
								);
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_pathBuilder)));
				global::System.GC.KeepAlive(pathBuilder);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometryStatics.CreatePolygon, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2 *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__rg_Numerics_Vector2__Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::System.Numerics.Vector2[] points, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			uint unsafe_points_mcgLength = 0;
			global::System.Numerics.Vector2* unsafe_points;
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				if (points != null)
					unsafe_points_mcgLength = (uint)points.Length;
				fixed (global::System.Numerics.Vector2* pinned_points = global::McgInterop.McgCoreHelpers.GetArrayForCompat(points))
				{
					unsafe_points = (global::System.Numerics.Vector2*)pinned_points;
					unsafe_geometry__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_resourceCreator, 
										unsafe_points_mcgLength, 
										unsafe_points, 
										&(unsafe_geometry__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_geometry__retval), 
										typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
										typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
									);
				}
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometryStatics.CreateGroup, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__rg_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry[] geometries, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			uint unsafe_geometries_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl*** unsafe_geometries = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl***);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_geometries = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									geometries, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									out unsafe_geometries_mcgLength
								);
				unsafe_geometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_geometries_mcgLength, 
									unsafe_geometries, 
									&(unsafe_geometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_geometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
								);
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				if (unsafe_geometries != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_geometries_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry * geometries
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometries[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_geometries);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometryStatics.CreateGroup, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry * *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasFilledRegionDetermination__Microsoft_Graphics_Canvas_Geometry__CanvasFilledRegionDetermination, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__rg_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__intMicrosoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry[] geometries, 
					int filledRegionDetermination, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			uint unsafe_geometries_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl*** unsafe_geometries = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl***);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_geometries = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									geometries, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									out unsafe_geometries_mcgLength
								);
				unsafe_geometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_geometries_mcgLength, 
									unsafe_geometries, 
									filledRegionDetermination, 
									&(unsafe_geometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_geometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
								);
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				if (unsafe_geometries != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_geometries_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry * geometries
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometries[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_geometries);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometryStatics.CreateText, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextLayout__Microsoft_Graphics_Canvas_Text__CanvasTextLayout *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_Microsoft_Graphics_Canvas_Text_CanvasTextLayout__Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextLayout textLayout, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextLayout__Impl.Vtbl** unsafe_textLayout = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextLayout__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_textLayout = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextLayout__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									textLayout, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextLayout).TypeHandle
								);
				unsafe_geometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_textLayout, 
									&(unsafe_geometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_geometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
								);
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_textLayout)));
				global::System.GC.KeepAlive(textLayout);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometryStatics.CreateGlyphRun, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontFace__Microsoft_Graphics_Canvas_Text__CanvasFontFace *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph *, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextMeasuringMode__Microsoft_Graphics_Canvas_Text__CanvasTextMeasuringMode, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyphOrientation__Microsoft_Graphics_Canvas_Text__CanvasGlyphOrientation, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Numerics_Vector2__Microsoft_Graphics_Canvas_Text_CanvasFontFace__float__rg_Microsoft_Graphics_Canvas_Text_CanvasGlyph__bool__uint__intintMicrosoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::System.Numerics.Vector2 point, 
					global::Microsoft.Graphics.Canvas.Text.CanvasFontFace fontFace, 
					float fontSize, 
					global::Microsoft.Graphics.Canvas.Text.CanvasGlyph[] glyphs, 
					bool isSideways, 
					uint bidiLevel, 
					int measuringMode, 
					int glyphOrientation, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl** unsafe_fontFace = default(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyph* unsafe_glyphs = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyph*);
			uint unsafe_glyphs_mcgLength = 0;
			sbyte unsafe_isSideways;
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_fontFace = (global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									fontFace, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace).TypeHandle
								);
				if (glyphs == null)
					unsafe_glyphs = null;
				else
				{
					if (glyphs != null)
						unsafe_glyphs_mcgLength = (uint)glyphs.Length;
					if (glyphs != null)
						unsafe_glyphs = (global::Microsoft.Graphics.Canvas.Text.CanvasGlyph*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_glyphs_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasGlyph))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_glyphs_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph glyphs
						unsafe_glyphs[mcgIdx] = glyphs[mcgIdx];
					}
				}
				unsafe_isSideways = (isSideways ? ((sbyte)1) : ((sbyte)0));
				unsafe_geometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									point, 
									unsafe_fontFace, 
									fontSize, 
									unsafe_glyphs_mcgLength, 
									unsafe_glyphs, 
									unsafe_isSideways, 
									bidiLevel, 
									measuringMode, 
									glyphOrientation, 
									&(unsafe_geometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_geometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
								);
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_fontFace)));
				global::System.GC.KeepAlive(fontFace);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_glyphs);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometryStatics.CreateInk, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_Windows_UI_Input_Inking_InkStroke___Windows_Foundation_Collections__IIterable_A_Windows_UI_Input_Inking_InkStroke_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator___IEnumerable_1_UI_Input_Inking_InkStroke___Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::System.Collections.Generic.IEnumerable<global::Windows.UI.Input.Inking.InkStroke> inkStrokes, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::System.Collections.Generic.IEnumerable_A_Windows_UI_Input_Inking_InkStroke_V___Impl.Vtbl** unsafe_inkStrokes = default(global::System.Collections.Generic.IEnumerable_A_Windows_UI_Input_Inking_InkStroke_V___Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_inkStrokes = (global::System.Collections.Generic.IEnumerable_A_Windows_UI_Input_Inking_InkStroke_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									inkStrokes, 
									typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Input.Inking.InkStroke>).TypeHandle
								);
				unsafe_geometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_inkStrokes, 
									&(unsafe_geometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_geometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
								);
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_inkStrokes)));
				global::System.GC.KeepAlive(inkStrokes);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometryStatics.CreateInk, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_Windows_UI_Input_Inking_InkStroke___Windows_Foundation_Collections__IIterable_A_Windows_UI_Input_Inking_InkStroke_V_ *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator___IEnumerable_1_UI_Input_Inking_InkStroke___Numerics_Matrix3x2__float__Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::System.Collections.Generic.IEnumerable<global::Windows.UI.Input.Inking.InkStroke> inkStrokes, 
					global::System.Numerics.Matrix3x2 transform, 
					float flatteningTolerance, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::System.Collections.Generic.IEnumerable_A_Windows_UI_Input_Inking_InkStroke_V___Impl.Vtbl** unsafe_inkStrokes = default(global::System.Collections.Generic.IEnumerable_A_Windows_UI_Input_Inking_InkStroke_V___Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_inkStrokes = (global::System.Collections.Generic.IEnumerable_A_Windows_UI_Input_Inking_InkStroke_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									inkStrokes, 
									typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Input.Inking.InkStroke>).TypeHandle
								);
				unsafe_geometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_inkStrokes, 
									transform, 
									flatteningTolerance, 
									&(unsafe_geometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_geometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
								);
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_inkStrokes)));
				global::System.GC.KeepAlive(inkStrokes);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometryStatics.ComputeFlatteningTolerance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static float Func_float__float__float__(
					global::System.__ComObject __this, 
					float dpi, 
					float maximumZoomFactor, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			float unsafe_flatteningTolerance__retval;
			float flatteningTolerance__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								dpi, 
								maximumZoomFactor, 
								&(unsafe_flatteningTolerance__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			flatteningTolerance__retval = unsafe_flatteningTolerance__retval;
			// Return
			return flatteningTolerance__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometryStatics.ComputeFlatteningTolerance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static float Func_float__float__Numerics_Matrix3x2__float__(
					global::System.__ComObject __this, 
					float dpi, 
					float maximumZoomFactor, 
					global::System.Numerics.Matrix3x2 expectedGeometryTransform, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			float unsafe_flatteningTolerance__retval;
			float flatteningTolerance__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								dpi, 
								maximumZoomFactor, 
								expectedGeometryTransform, 
								&(unsafe_flatteningTolerance__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			flatteningTolerance__retval = unsafe_flatteningTolerance__retval;
			// Return
			return flatteningTolerance__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasPathBuilderFactory.Create, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__IntPtr__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::System.IntPtr unsafe_canvasPathBuilder__retval;
			global::System.IntPtr canvasPathBuilder__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									&(unsafe_canvasPathBuilder__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasPathBuilder__retval = unsafe_canvasPathBuilder__retval;
				// Return
				return canvasPathBuilder__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasPathBuilder.BeginFigure, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasFigureFill__Microsoft_Graphics_Canvas_Geometry__CanvasFigureFill, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__int(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 startPoint, 
					int figureFill, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								startPoint, 
								figureFill
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasPathBuilder.BeginFigure, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 startPoint, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								startPoint
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasPathBuilder.BeginFigure, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasFigureFill__Microsoft_Graphics_Canvas_Geometry__CanvasFigureFill, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__float__int(
					global::System.__ComObject __this, 
					float startX, 
					float startY, 
					int figureFill, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								startX, 
								startY, 
								figureFill
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasPathBuilder.BeginFigure, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__float__(
					global::System.__ComObject __this, 
					float startX, 
					float startY, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								startX, 
								startY
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasPathBuilder.AddArc, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasSweepDirection__Microsoft_Graphics_Canvas_Geometry__CanvasSweepDirection, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasArcSize__Microsoft_Graphics_Canvas_Geometry__CanvasArcSize, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__float__float__float__intint(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 endPoint, 
					float radiusX, 
					float radiusY, 
					float rotationAngle, 
					int sweepDirection, 
					int arcSize, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								endPoint, 
								radiusX, 
								radiusY, 
								rotationAngle, 
								sweepDirection, 
								arcSize
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasPathBuilder.AddArc, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__float__float__float__float__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 centerPoint, 
					float radiusX, 
					float radiusY, 
					float startAngle, 
					float sweepAngle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								centerPoint, 
								radiusX, 
								radiusY, 
								startAngle, 
								sweepAngle
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasPathBuilder.AddCubicBezier, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__Numerics_Vector2__Numerics_Vector2__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 controlPoint1, 
					global::System.Numerics.Vector2 controlPoint2, 
					global::System.Numerics.Vector2 endPoint, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								controlPoint1, 
								controlPoint2, 
								endPoint
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasPathBuilder.AddQuadraticBezier, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector2__Numerics_Vector2__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 controlPoint, 
					global::System.Numerics.Vector2 endPoint, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								controlPoint, 
								endPoint
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasPathBuilder.SetSegmentOptions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasFigureSegmentOptions__Microsoft_Graphics_Canvas_Geometry__CanvasFigureSegmentOptions, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasFigureSegmentOptions__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasFigureSegmentOptions figureSegmentOptions, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								figureSegmentOptions
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasPathBuilder.AddGeometry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayoutFactory.Create, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextFormat__Microsoft_Graphics_Canvas_Text__CanvasTextFormat *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__string__Microsoft_Graphics_Canvas_Text_CanvasTextFormat__float__float__IntPtr__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					string textString, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextFormat textFormat, 
					float requestedWidth, 
					float requestedHeight, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::System.Runtime.InteropServices.HSTRING unsafe_textString = default(global::System.Runtime.InteropServices.HSTRING);
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl** unsafe_textFormat = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl**);
			global::System.IntPtr unsafe_canvasTextLayout__retval;
			global::System.IntPtr canvasTextLayout__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				fixed (char* pBuffer_textString = textString)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_textString;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_textString, textString, &(hstring_header_textString), &(unsafe_textString));
					unsafe_textFormat = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										textFormat, 
										typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat).TypeHandle
									);
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_resourceCreator, 
										unsafe_textString, 
										unsafe_textFormat, 
										requestedWidth, 
										requestedHeight, 
										&(unsafe_canvasTextLayout__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					canvasTextLayout__retval = unsafe_canvasTextLayout__retval;
				}
				// Return
				return canvasTextLayout__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_textFormat)));
				global::System.GC.KeepAlive(textFormat);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.GetFormatChangeIndices, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_int__int *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int[] Func_rg_int__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int* unsafe_stops__retval = default(int*);
			int[] stops__retval = default(int[]);
			uint unsafe_stops__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_stops__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_stops__retval_mcgLength), 
									&(unsafe_stops__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_stops__retval == null)
					stops__retval = null;
				else
				{
					stops__retval = new int[unsafe_stops__retval_mcgLength];
					if (stops__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_stops__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] int__int stops__retval
							stops__retval[mcgIdx] = unsafe_stops__retval[mcgIdx];
						}
				}
				// Return
				return stops__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_stops__retval);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.put_RequestedSize, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Size__Windows_Foundation__Size, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Size__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Size value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.GetBrush, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush Func_int__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__(
					global::System.__ComObject __this, 
					int characterIndex, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush__retval = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush__retval = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									characterIndex, 
									&(unsafe_brush__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				brush__retval = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_brush__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Return
				return brush__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.GetCustomBrush, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_int__object__(
					global::System.__ComObject __this, 
					int characterIndex, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_brush__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object brush__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									characterIndex, 
									&(unsafe_brush__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				brush__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_brush__retval));
				// Return
				return brush__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.GetFontFamily, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static string Func_int__string__(
					global::System.__ComObject __this, 
					int characterIndex, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_fontFamily__retval = default(global::System.Runtime.InteropServices.HSTRING);
			string fontFamily__retval = default(string);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_fontFamily__retval = default(global::System.Runtime.InteropServices.HSTRING);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									characterIndex, 
									&(unsafe_fontFamily__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				fontFamily__retval = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_fontFamily__retval);
				// Return
				return fontFamily__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe_fontFamily__retval.handle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.GetFontStretch, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Text_FontStretch__Windows_UI_Text__FontStretch, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Text.FontStretch Func_int__UI_Text_FontStretch__(
					global::System.__ComObject __this, 
					int characterIndex, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Text.FontStretch unsafe_fontStretch__retval;
			global::Windows.UI.Text.FontStretch fontStretch__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								characterIndex, 
								&(unsafe_fontStretch__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			fontStretch__retval = unsafe_fontStretch__retval;
			// Return
			return fontStretch__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.GetFontStyle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Text_FontStyle__Windows_UI_Text__FontStyle, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Text.FontStyle Func_int__UI_Text_FontStyle__(
					global::System.__ComObject __this, 
					int characterIndex, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Text.FontStyle unsafe_fontStyle__retval;
			global::Windows.UI.Text.FontStyle fontStyle__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								characterIndex, 
								&(unsafe_fontStyle__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			fontStyle__retval = unsafe_fontStyle__retval;
			// Return
			return fontStyle__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.GetFontWeight, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Windows_UI_Text_FontWeight__Windows_UI_Text__FontWeight, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Text.FontWeight Func_int__UI_Text_FontWeight__(
					global::System.__ComObject __this, 
					int characterIndex, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Text.FontWeight unsafe_fontWeight__retval;
			global::Windows.UI.Text.FontWeight fontWeight__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								characterIndex, 
								&(unsafe_fontWeight__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			fontWeight__retval = unsafe_fontWeight__retval;
			// Return
			return fontWeight__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.GetInlineObject, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Text_ICanvasTextInlineObject__Microsoft_Graphics_Canvas_Text__ICanvasTextInlineObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject Func_int__Microsoft_Graphics_Canvas_Text_ICanvasTextInlineObject__(
					global::System.__ComObject __this, 
					int characterIndex, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject__Impl.Vtbl** unsafe_inlineObject__retval = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject inlineObject__retval = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_inlineObject__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									characterIndex, 
									&(unsafe_inlineObject__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				inlineObject__retval = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_inlineObject__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject).TypeHandle
								);
				// Return
				return inlineObject__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_inlineObject__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.SetColor, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__int__UI_Color__(
					global::System.__ComObject __this, 
					int characterIndex, 
					int characterCount, 
					global::Windows.UI.Color color, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								characterIndex, 
								characterCount, 
								color
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.SetBrush, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__Microsoft_Graphics_Canvas_Brushes__ICanvasBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__int__Microsoft_Graphics_Canvas_Brushes_ICanvasBrush__(
					global::System.__ComObject __this, 
					int characterIndex, 
					int characterCount, 
					global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush brush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl** unsafe_brush = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									brush, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									characterIndex, 
									characterCount, 
									unsafe_brush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
				global::System.GC.KeepAlive(brush);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.SetCustomBrush, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__int__object__(
					global::System.__ComObject __this, 
					int characterIndex, 
					int characterCount, 
					object brush, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_brush = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_brush = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(brush);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									characterIndex, 
									characterCount, 
									unsafe_brush
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_brush)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.SetFontFamily, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__int__string__(
					global::System.__ComObject __this, 
					int characterIndex, 
					int characterCount, 
					string fontFamily, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_fontFamily = default(global::System.Runtime.InteropServices.HSTRING);
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_fontFamily = fontFamily)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_fontFamily;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_fontFamily, fontFamily, &(hstring_header_fontFamily), &(unsafe_fontFamily));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									characterIndex, 
									characterCount, 
									unsafe_fontFamily
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.SetFontSize, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__int__float__(
					global::System.__ComObject __this, 
					int characterIndex, 
					int characterCount, 
					float fontSize, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								characterIndex, 
								characterCount, 
								fontSize
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.SetFontStretch, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Text_FontStretch__Windows_UI_Text__FontStretch, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__int__int(
					global::System.__ComObject __this, 
					int characterIndex, 
					int characterCount, 
					int fontStretch, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								characterIndex, 
								characterCount, 
								fontStretch
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.SetFontWeight, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Windows_UI_Text_FontWeight__Windows_UI_Text__FontWeight, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__int__UI_Text_FontWeight__(
					global::System.__ComObject __this, 
					int characterIndex, 
					int characterCount, 
					global::Windows.UI.Text.FontWeight fontWeight, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								characterIndex, 
								characterCount, 
								fontWeight
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.SetStrikethrough, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__int__bool__(
					global::System.__ComObject __this, 
					int characterIndex, 
					int characterCount, 
					bool hasStrikethrough, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			sbyte unsafe_hasStrikethrough;
			int unsafe___return__;
			// Marshalling
			unsafe_hasStrikethrough = (hasStrikethrough ? ((sbyte)1) : ((sbyte)0));
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								characterIndex, 
								characterCount, 
								unsafe_hasStrikethrough
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.SetInlineObject, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Text_ICanvasTextInlineObject__Microsoft_Graphics_Canvas_Text__ICanvasTextInlineObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__int__Microsoft_Graphics_Canvas_Text_ICanvasTextInlineObject__(
					global::System.__ComObject __this, 
					int characterIndex, 
					int characterCount, 
					global::Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject inlineObject, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject__Impl.Vtbl** unsafe_inlineObject = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_inlineObject = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									inlineObject, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextInlineObject).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									characterIndex, 
									characterCount, 
									unsafe_inlineObject
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_inlineObject)));
				global::System.GC.KeepAlive(inlineObject);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.DrawToTextRenderer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Text_ICanvasTextRenderer__Microsoft_Graphics_Canvas_Text__ICanvasTextRenderer *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Text_ICanvasTextRenderer__Numerics_Vector2__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderer textRenderer, 
					global::System.Numerics.Vector2 position, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderer__Impl.Vtbl** unsafe_textRenderer = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderer__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_textRenderer = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									textRenderer, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderer).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_textRenderer, 
									position
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_textRenderer)));
				global::System.GC.KeepAlive(textRenderer);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.DrawToTextRenderer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Text_ICanvasTextRenderer__Microsoft_Graphics_Canvas_Text__ICanvasTextRenderer *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Text_ICanvasTextRenderer__float__float__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderer textRenderer, 
					float x, 
					float y, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderer__Impl.Vtbl** unsafe_textRenderer = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderer__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_textRenderer = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									textRenderer, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextRenderer).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_textRenderer, 
									x, 
									y
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_textRenderer)));
				global::System.GC.KeepAlive(textRenderer);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.get_LineMetrics, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasLineMetrics__Microsoft_Graphics_Canvas_Text__CanvasLineMetrics *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics[] Func_rg_Microsoft_Graphics_Canvas_Text_CanvasLineMetrics__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType* unsafe_valueElements__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType*);
			global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics[] valueElements__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics[]);
			uint unsafe_valueElements__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_valueElements__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_valueElements__retval_mcgLength), 
									&(unsafe_valueElements__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_valueElements__retval == null)
					valueElements__retval = null;
				else
				{
					valueElements__retval = new global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics[unsafe_valueElements__retval_mcgLength];
					if (valueElements__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_valueElements__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasLineMetrics__Microsoft_Graphics_Canvas_Text__CanvasLineMetrics valueElements__retval
							global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.Marshal__UnsafeToSafe(
												ref unsafe_valueElements__retval[mcgIdx], 
												out valueElements__retval[mcgIdx]
											);
						}
				}
				// Return
				return valueElements__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_valueElements__retval);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.get_ClusterMetrics, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics__Microsoft_Graphics_Canvas_Text__CanvasClusterMetrics *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics[] Func_rg_Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics* unsafe_valueElements__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics*);
			global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics[] valueElements__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics[]);
			uint unsafe_valueElements__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_valueElements__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_valueElements__retval_mcgLength), 
									&(unsafe_valueElements__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_valueElements__retval == null)
					valueElements__retval = null;
				else
				{
					valueElements__retval = new global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics[unsafe_valueElements__retval_mcgLength];
					if (valueElements__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_valueElements__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics__Microsoft_Graphics_Canvas_Text__CanvasClusterMetrics valueElements__retval
							valueElements__retval[mcgIdx] = unsafe_valueElements__retval[mcgIdx];
						}
				}
				// Return
				return valueElements__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_valueElements__retval);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.SetTypography, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTypography__Microsoft_Graphics_Canvas_Text__CanvasTypography *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__int__Microsoft_Graphics_Canvas_Text_CanvasTypography__(
					global::System.__ComObject __this, 
					int characterIndex, 
					int characterCount, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTypography typography, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasTypography__Impl.Vtbl** unsafe_typography = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTypography__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_typography = (global::Microsoft.Graphics.Canvas.Text.ICanvasTypography__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									typography, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTypography).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									characterIndex, 
									characterCount, 
									unsafe_typography
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_typography)));
				global::System.GC.KeepAlive(typography);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.GetTypography, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTypography__Microsoft_Graphics_Canvas_Text__CanvasTypography *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasTypography Func_int__Microsoft_Graphics_Canvas_Text_CanvasTypography__(
					global::System.__ComObject __this, 
					int characterIndex, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasTypography__Impl.Vtbl** unsafe_typography__retval = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTypography__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.CanvasTypography typography__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasTypography);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_typography__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									characterIndex, 
									&(unsafe_typography__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				typography__retval = (global::Microsoft.Graphics.Canvas.Text.CanvasTypography)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_typography__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTypography).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Text.CanvasTypography).TypeHandle
								);
				// Return
				return typography__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_typography__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.HitTest, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Numerics_Vector2__bool__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 point, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			bool isHit__retval;
			sbyte unsafe_isHit__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								point, 
								&(unsafe_isHit__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			isHit__retval = unsafe_isHit__retval != 0;
			// Return
			return isHit__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.HitTest, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_float__float__bool__(
					global::System.__ComObject __this, 
					float x, 
					float y, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			bool isHit__retval;
			sbyte unsafe_isHit__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								x, 
								y, 
								&(unsafe_isHit__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			isHit__retval = unsafe_isHit__retval != 0;
			// Return
			return isHit__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.HitTest, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__Microsoft_Graphics_Canvas_Text__CanvasTextLayoutRegion, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Numerics_Vector2__out_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__bool__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 point, 
					out global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion textLayoutRegion, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion unsafe_textLayoutRegion;
			bool isHit__retval;
			sbyte unsafe_isHit__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								point, 
								&(unsafe_textLayoutRegion), 
								&(unsafe_isHit__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			isHit__retval = unsafe_isHit__retval != 0;
			textLayoutRegion = unsafe_textLayoutRegion;
			// Return
			return isHit__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.HitTest, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__Microsoft_Graphics_Canvas_Text__CanvasTextLayoutRegion, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_float__float__out_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__bool__(
					global::System.__ComObject __this, 
					float x, 
					float y, 
					out global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion textLayoutRegion, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion unsafe_textLayoutRegion;
			bool isHit__retval;
			sbyte unsafe_isHit__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								x, 
								y, 
								&(unsafe_textLayoutRegion), 
								&(unsafe_isHit__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			isHit__retval = unsafe_isHit__retval != 0;
			textLayoutRegion = unsafe_textLayoutRegion;
			// Return
			return isHit__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.HitTest, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__Microsoft_Graphics_Canvas_Text__CanvasTextLayoutRegion, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Numerics_Vector2__out_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__out_bool__bool__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 point, 
					out global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion textLayoutRegion, 
					out bool trailingSideOfCharacter, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion unsafe_textLayoutRegion;
			sbyte unsafe_trailingSideOfCharacter;
			bool isHit__retval;
			sbyte unsafe_isHit__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								point, 
								&(unsafe_textLayoutRegion), 
								&(unsafe_trailingSideOfCharacter), 
								&(unsafe_isHit__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			isHit__retval = unsafe_isHit__retval != 0;
			trailingSideOfCharacter = unsafe_trailingSideOfCharacter != 0;
			textLayoutRegion = unsafe_textLayoutRegion;
			// Return
			return isHit__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.HitTest, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__Microsoft_Graphics_Canvas_Text__CanvasTextLayoutRegion, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_float__float__out_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__out_bool__bool__(
					global::System.__ComObject __this, 
					float x, 
					float y, 
					out global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion textLayoutRegion, 
					out bool trailingSideOfCharacter, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion unsafe_textLayoutRegion;
			sbyte unsafe_trailingSideOfCharacter;
			bool isHit__retval;
			sbyte unsafe_isHit__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								x, 
								y, 
								&(unsafe_textLayoutRegion), 
								&(unsafe_trailingSideOfCharacter), 
								&(unsafe_isHit__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			isHit__retval = unsafe_isHit__retval != 0;
			trailingSideOfCharacter = unsafe_trailingSideOfCharacter != 0;
			textLayoutRegion = unsafe_textLayoutRegion;
			// Return
			return isHit__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.GetCaretPosition, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Vector2 Func_int__bool__Numerics_Vector2__(
					global::System.__ComObject __this, 
					int characterIndex, 
					bool trailingSideOfCharacter, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			sbyte unsafe_trailingSideOfCharacter;
			global::System.Numerics.Vector2 unsafe_location__retval;
			global::System.Numerics.Vector2 location__retval;
			int unsafe___return__;
			// Marshalling
			unsafe_trailingSideOfCharacter = (trailingSideOfCharacter ? ((sbyte)1) : ((sbyte)0));
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								characterIndex, 
								unsafe_trailingSideOfCharacter, 
								&(unsafe_location__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			location__retval = unsafe_location__retval;
			// Return
			return location__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.GetCaretPosition, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__Microsoft_Graphics_Canvas_Text__CanvasTextLayoutRegion, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Vector2 Func_int__bool__out_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__Numerics_Vector2__(
					global::System.__ComObject __this, 
					int characterIndex, 
					bool trailingSideOfCharacter, 
					out global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion textLayoutRegion, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			sbyte unsafe_trailingSideOfCharacter;
			global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion unsafe_textLayoutRegion;
			global::System.Numerics.Vector2 unsafe_location__retval;
			global::System.Numerics.Vector2 location__retval;
			int unsafe___return__;
			// Marshalling
			unsafe_trailingSideOfCharacter = (trailingSideOfCharacter ? ((sbyte)1) : ((sbyte)0));
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								characterIndex, 
								unsafe_trailingSideOfCharacter, 
								&(unsafe_textLayoutRegion), 
								&(unsafe_location__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			location__retval = unsafe_location__retval;
			textLayoutRegion = unsafe_textLayoutRegion;
			// Return
			return location__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.GetCharacterRegions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__Microsoft_Graphics_Canvas_Text__CanvasTextLayoutRegion *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion[] Func_int__int__rg_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__(
					global::System.__ComObject __this, 
					int characterIndex, 
					int characterCount, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion* unsafe_hitTestDescriptions__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion*);
			global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion[] hitTestDescriptions__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion[]);
			uint unsafe_hitTestDescriptions__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_hitTestDescriptions__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									characterIndex, 
									characterCount, 
									&(unsafe_hitTestDescriptions__retval_mcgLength), 
									&(unsafe_hitTestDescriptions__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_hitTestDescriptions__retval == null)
					hitTestDescriptions__retval = null;
				else
				{
					hitTestDescriptions__retval = new global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion[unsafe_hitTestDescriptions__retval_mcgLength];
					if (hitTestDescriptions__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_hitTestDescriptions__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__Microsoft_Graphics_Canvas_Text__CanvasTextLayoutRegion hitTestDescriptions__retval
							hitTestDescriptions__retval[mcgIdx] = unsafe_hitTestDescriptions__retval[mcgIdx];
						}
				}
				// Return
				return hitTestDescriptions__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_hitTestDescriptions__retval);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextLayout.SetCharacterSpacing, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__int__float__float__float__(
					global::System.__ComObject __this, 
					int characterIndex, 
					int characterCount, 
					float leadingSpacing, 
					float trailingSpacing, 
					float minimumAdvance, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								characterIndex, 
								characterCount, 
								leadingSpacing, 
								trailingSpacing, 
								minimumAdvance
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTypography.AddFeature, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature__Microsoft_Graphics_Canvas_Text__CanvasTypographyFeature, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature feature, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								feature
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTypography.AddFeature, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTypographyFeatureName__Microsoft_Graphics_Canvas_Text__CanvasTypographyFeatureName, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_intuint__(
					global::System.__ComObject __this, 
					int name, 
					uint parameter, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								name, 
								parameter
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTypography.GetFeatures, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature__Microsoft_Graphics_Canvas_Text__CanvasTypographyFeature *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature[] Func_rg_Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature* unsafe_features__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature*);
			global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature[] features__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature[]);
			uint unsafe_features__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_features__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_features__retval_mcgLength), 
									&(unsafe_features__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_features__retval == null)
					features__retval = null;
				else
				{
					features__retval = new global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature[unsafe_features__retval_mcgLength];
					if (features__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_features__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature__Microsoft_Graphics_Canvas_Text__CanvasTypographyFeature features__retval
							features__retval[mcgIdx] = unsafe_features__retval[mcgIdx];
						}
				}
				// Return
				return features__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_features__retval);
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Input.Inking.InkStroke>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Input_Inking_InkStroke__Windows_UI_Input_Inking__InkStroke *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Input.Inking.InkStroke Func_UI_Input_Inking_InkStroke__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Input.Inking.IInkStroke__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Input.Inking.IInkStroke__Impl.Vtbl**);
			global::Windows.UI.Input.Inking.InkStroke __value__retval = default(global::Windows.UI.Input.Inking.InkStroke);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Input.Inking.InkStroke)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Input.Inking.IInkStroke).TypeHandle, 
									typeof(global::Windows.UI.Input.Inking.InkStroke).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Input.Inking.InkStroke>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Input_Inking_InkStroke__Windows_UI_Input_Inking__InkStroke * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Input_Inking_InkStroke__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Input.Inking.InkStroke[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Input.Inking.IInkStroke__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Input.Inking.IInkStroke__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Input.Inking.IInkStroke__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Input.Inking.IInkStroke__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Input_Inking_InkStroke__Windows_UI_Input_Inking__InkStroke * items
						items[mcgIdx] = (global::Windows.UI.Input.Inking.InkStroke)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Input.Inking.IInkStroke).TypeHandle, 
											typeof(global::Windows.UI.Input.Inking.InkStroke).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Input_Inking_InkStroke__Windows_UI_Input_Inking__InkStroke * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.CombineWith, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometryCombine__Microsoft_Graphics_Canvas_Geometry__CanvasGeometryCombine, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Numerics_Matrix3x2__intMicrosoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry otherGeometry, 
					global::System.Numerics.Matrix3x2 otherGeometryTransform, 
					int combine, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_otherGeometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_otherGeometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									otherGeometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_geometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_otherGeometry, 
									otherGeometryTransform, 
									combine, 
									&(unsafe_geometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_geometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
								);
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_otherGeometry)));
				global::System.GC.KeepAlive(otherGeometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.CombineWith, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometryCombine__Microsoft_Graphics_Canvas_Geometry__CanvasGeometryCombine, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Numerics_Matrix3x2__intfloat__Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry otherGeometry, 
					global::System.Numerics.Matrix3x2 otherGeometryTransform, 
					int combine, 
					float flatteningTolerance, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_otherGeometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_otherGeometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									otherGeometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_geometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_otherGeometry, 
									otherGeometryTransform, 
									combine, 
									flatteningTolerance, 
									&(unsafe_geometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_geometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
								);
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_otherGeometry)));
				global::System.GC.KeepAlive(otherGeometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.Stroke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_float__Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									strokeWidth, 
									&(unsafe_geometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_geometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
								);
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.Stroke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				unsafe_geometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									strokeWidth, 
									unsafe_strokeStyle, 
									&(unsafe_geometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_geometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
								);
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.Stroke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Numerics_Matrix3x2__float__Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.Numerics.Matrix3x2 transform, 
					float flatteningTolerance, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				unsafe_geometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									strokeWidth, 
									unsafe_strokeStyle, 
									transform, 
									flatteningTolerance, 
									&(unsafe_geometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_geometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
								);
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.Outline, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_geometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_geometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
								);
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.Outline, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_Numerics_Matrix3x2__float__Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					global::System.Numerics.Matrix3x2 transform, 
					float flatteningTolerance, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									transform, 
									flatteningTolerance, 
									&(unsafe_geometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_geometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
								);
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.Simplify, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometrySimplification__Microsoft_Graphics_Canvas_Geometry__CanvasGeometrySimplification, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_intMicrosoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					int simplification, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									simplification, 
									&(unsafe_geometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_geometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
								);
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.Simplify, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometrySimplification__Microsoft_Graphics_Canvas_Geometry__CanvasGeometrySimplification, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_intNumerics_Matrix3x2__float__Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					int simplification, 
					global::System.Numerics.Matrix3x2 transform, 
					float flatteningTolerance, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									simplification, 
									transform, 
									flatteningTolerance, 
									&(unsafe_geometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_geometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
								);
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.Transform, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry Func_Numerics_Matrix3x2__Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__(
					global::System.__ComObject __this, 
					global::System.Numerics.Matrix3x2 transform, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									transform, 
									&(unsafe_geometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				geometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_geometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry).TypeHandle
								);
				// Return
				return geometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.CompareWith, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometryRelation__Microsoft_Graphics_Canvas_Geometry__CanvasGeometryRelation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometryRelation Func_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry_CanvasGeometryRelation__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry otherGeometry, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_otherGeometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometryRelation unsafe_relation__retval;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometryRelation relation__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_otherGeometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									otherGeometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_otherGeometry, 
									&(unsafe_relation__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				relation__retval = unsafe_relation__retval;
				// Return
				return relation__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_otherGeometry)));
				global::System.GC.KeepAlive(otherGeometry);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.CompareWith, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometryRelation__Microsoft_Graphics_Canvas_Geometry__CanvasGeometryRelation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometryRelation Func_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Numerics_Matrix3x2__float__Microsoft_Graphics_Canvas_Geometry_CanvasGeometryRelation__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry otherGeometry, 
					global::System.Numerics.Matrix3x2 otherGeometryTransform, 
					float flatteningTolerance, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_otherGeometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometryRelation unsafe_relation__retval;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometryRelation relation__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_otherGeometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									otherGeometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_otherGeometry, 
									otherGeometryTransform, 
									flatteningTolerance, 
									&(unsafe_relation__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				relation__retval = unsafe_relation__retval;
				// Return
				return relation__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_otherGeometry)));
				global::System.GC.KeepAlive(otherGeometry);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.ComputeArea, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static float Func_Numerics_Matrix3x2__float__float__(
					global::System.__ComObject __this, 
					global::System.Numerics.Matrix3x2 transform, 
					float flatteningTolerance, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			float unsafe_area__retval;
			float area__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								transform, 
								flatteningTolerance, 
								&(unsafe_area__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			area__retval = unsafe_area__retval;
			// Return
			return area__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.ComputePointOnPath, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Vector2 Func_float__Numerics_Vector2__(
					global::System.__ComObject __this, 
					float distance, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Vector2 unsafe_point__retval;
			global::System.Numerics.Vector2 point__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								distance, 
								&(unsafe_point__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			point__retval = unsafe_point__retval;
			// Return
			return point__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.ComputePointOnPath, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Vector2 Func_float__out_Numerics_Vector2__Numerics_Vector2__(
					global::System.__ComObject __this, 
					float distance, 
					out global::System.Numerics.Vector2 tangent, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Vector2 unsafe_tangent;
			global::System.Numerics.Vector2 unsafe_point__retval;
			global::System.Numerics.Vector2 point__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								distance, 
								&(unsafe_tangent), 
								&(unsafe_point__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			point__retval = unsafe_point__retval;
			tangent = unsafe_tangent;
			// Return
			return point__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.ComputePointOnPath, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Vector2 Func_float__Numerics_Matrix3x2__float__out_Numerics_Vector2__Numerics_Vector2__(
					global::System.__ComObject __this, 
					float length, 
					global::System.Numerics.Matrix3x2 transform, 
					float flatteningTolerance, 
					out global::System.Numerics.Vector2 tangent, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Vector2 unsafe_tangent;
			global::System.Numerics.Vector2 unsafe_point__retval;
			global::System.Numerics.Vector2 point__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								length, 
								transform, 
								flatteningTolerance, 
								&(unsafe_tangent), 
								&(unsafe_point__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			point__retval = unsafe_point__retval;
			tangent = unsafe_tangent;
			// Return
			return point__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.FillContainsPoint, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Numerics_Vector2__Numerics_Matrix3x2__float__bool__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 point, 
					global::System.Numerics.Matrix3x2 transform, 
					float flatteningTolerance, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			bool containsPoint__retval;
			sbyte unsafe_containsPoint__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								point, 
								transform, 
								flatteningTolerance, 
								&(unsafe_containsPoint__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			containsPoint__retval = unsafe_containsPoint__retval != 0;
			// Return
			return containsPoint__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.ComputeBounds, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Rect Func_Numerics_Matrix3x2___Rect__(
					global::System.__ComObject __this, 
					global::System.Numerics.Matrix3x2 transform, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Rect unsafe_bounds__retval;
			global::Windows.Foundation.Rect bounds__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								transform, 
								&(unsafe_bounds__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			bounds__retval = unsafe_bounds__retval;
			// Return
			return bounds__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.ComputeStrokeBounds, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Rect Func_float___Rect__(
					global::System.__ComObject __this, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Rect unsafe_bounds__retval;
			global::Windows.Foundation.Rect bounds__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								strokeWidth, 
								&(unsafe_bounds__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			bounds__retval = unsafe_bounds__retval;
			// Return
			return bounds__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.ComputeStrokeBounds, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Rect Func_float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle___Rect__(
					global::System.__ComObject __this, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			global::Windows.Foundation.Rect unsafe_bounds__retval;
			global::Windows.Foundation.Rect bounds__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									strokeWidth, 
									unsafe_strokeStyle, 
									&(unsafe_bounds__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				bounds__retval = unsafe_bounds__retval;
				// Return
				return bounds__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.ComputeStrokeBounds, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Rect Func_float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Numerics_Matrix3x2__float___Rect__(
					global::System.__ComObject __this, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.Numerics.Matrix3x2 transform, 
					float flatteningTolerance, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			global::Windows.Foundation.Rect unsafe_bounds__retval;
			global::Windows.Foundation.Rect bounds__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									strokeWidth, 
									unsafe_strokeStyle, 
									transform, 
									flatteningTolerance, 
									&(unsafe_bounds__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				bounds__retval = unsafe_bounds__retval;
				// Return
				return bounds__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.StrokeContainsPoint, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Numerics_Vector2__float__bool__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 point, 
					float strokeWidth, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			bool containsPoint__retval;
			sbyte unsafe_containsPoint__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								point, 
								strokeWidth, 
								&(unsafe_containsPoint__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			containsPoint__retval = unsafe_containsPoint__retval != 0;
			// Return
			return containsPoint__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.StrokeContainsPoint, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Numerics_Vector2__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__bool__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 point, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			bool containsPoint__retval;
			sbyte unsafe_containsPoint__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									point, 
									strokeWidth, 
									unsafe_strokeStyle, 
									&(unsafe_containsPoint__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				containsPoint__retval = unsafe_containsPoint__retval != 0;
				// Return
				return containsPoint__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.StrokeContainsPoint, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Numerics_Vector2__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Numerics_Matrix3x2__float__bool__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2 point, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.Numerics.Matrix3x2 transform, 
					float flatteningTolerance, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			bool containsPoint__retval;
			sbyte unsafe_containsPoint__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									point, 
									strokeWidth, 
									unsafe_strokeStyle, 
									transform, 
									flatteningTolerance, 
									&(unsafe_containsPoint__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				containsPoint__retval = unsafe_containsPoint__retval != 0;
				// Return
				return containsPoint__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.Tessellate, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__Microsoft_Graphics_Canvas_Geometry__CanvasTriangleVertices *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices[] Func_rg_Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices* unsafe_triangles__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices*);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices[] triangles__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices[]);
			uint unsafe_triangles__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_triangles__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_triangles__retval_mcgLength), 
									&(unsafe_triangles__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_triangles__retval == null)
					triangles__retval = null;
				else
				{
					triangles__retval = new global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices[unsafe_triangles__retval_mcgLength];
					if (triangles__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_triangles__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__Microsoft_Graphics_Canvas_Geometry__CanvasTriangleVertices triangles__retval
							triangles__retval[mcgIdx] = unsafe_triangles__retval[mcgIdx];
						}
				}
				// Return
				return triangles__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_triangles__retval);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.Tessellate, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__Microsoft_Graphics_Canvas_Geometry__CanvasTriangleVertices *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices[] Func_Numerics_Matrix3x2__float__rg_Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__(
					global::System.__ComObject __this, 
					global::System.Numerics.Matrix3x2 transform, 
					float flatteningTolerance, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices* unsafe_triangles__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices*);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices[] triangles__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices[]);
			uint unsafe_triangles__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_triangles__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									transform, 
									flatteningTolerance, 
									&(unsafe_triangles__retval_mcgLength), 
									&(unsafe_triangles__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_triangles__retval == null)
					triangles__retval = null;
				else
				{
					triangles__retval = new global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices[unsafe_triangles__retval_mcgLength];
					if (triangles__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_triangles__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__Microsoft_Graphics_Canvas_Geometry__CanvasTriangleVertices triangles__retval
							triangles__retval[mcgIdx] = unsafe_triangles__retval[mcgIdx];
						}
				}
				// Return
				return triangles__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_triangles__retval);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry.SendPathTo, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Geometry_ICanvasPathReceiver__Microsoft_Graphics_Canvas_Geometry__ICanvasPathReceiver *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_ICanvasPathReceiver__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.ICanvasPathReceiver streamReader, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasPathReceiver__Impl.Vtbl** unsafe_streamReader = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasPathReceiver__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_streamReader = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasPathReceiver__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									streamReader, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasPathReceiver).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_streamReader
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_streamReader)));
				global::System.GC.KeepAlive(streamReader);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometryStatics.CreateFill, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasCachedGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasCachedGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry Func_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry_CanvasCachedGeometry__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl** unsafe_cachedGeometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry cachedGeometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_cachedGeometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									&(unsafe_cachedGeometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				cachedGeometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_cachedGeometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry).TypeHandle
								);
				// Return
				return cachedGeometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_cachedGeometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometryStatics.CreateFill, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasCachedGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasCachedGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry Func_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__float__Microsoft_Graphics_Canvas_Geometry_CanvasCachedGeometry__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					float flatteningTolerance, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl** unsafe_cachedGeometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry cachedGeometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_cachedGeometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									flatteningTolerance, 
									&(unsafe_cachedGeometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				cachedGeometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_cachedGeometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry).TypeHandle
								);
				// Return
				return cachedGeometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_cachedGeometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometryStatics.CreateStroke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasCachedGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasCachedGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry Func_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry_CanvasCachedGeometry__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl** unsafe_cachedGeometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry cachedGeometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				unsafe_cachedGeometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									strokeWidth, 
									unsafe_strokeStyle, 
									&(unsafe_cachedGeometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				cachedGeometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_cachedGeometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry).TypeHandle
								);
				// Return
				return cachedGeometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_cachedGeometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometryStatics.CreateStroke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasGeometry *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__Microsoft_Graphics_Canvas_Geometry__CanvasStrokeStyle *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasCachedGeometry__Microsoft_Graphics_Canvas_Geometry__CanvasCachedGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry Func_Microsoft_Graphics_Canvas_Geometry_CanvasGeometry__float__Microsoft_Graphics_Canvas_Geometry_CanvasStrokeStyle__float__Microsoft_Graphics_Canvas_Geometry_CanvasCachedGeometry__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometry geometry, 
					float strokeWidth, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasStrokeStyle strokeStyle, 
					float flatteningTolerance, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl** unsafe_geometry = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl** unsafe_strokeStyle = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl** unsafe_cachedGeometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry cachedGeometry__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_geometry = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									geometry, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasGeometry).TypeHandle
								);
				unsafe_strokeStyle = (global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									strokeStyle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasStrokeStyle).TypeHandle
								);
				unsafe_cachedGeometry__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_geometry, 
									strokeWidth, 
									unsafe_strokeStyle, 
									flatteningTolerance, 
									&(unsafe_cachedGeometry__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				cachedGeometry__retval = (global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_cachedGeometry__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.ICanvasCachedGeometry).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasCachedGeometry).TypeHandle
								);
				// Return
				return cachedGeometry__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_geometry)));
				global::System.GC.KeepAlive(geometry);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_strokeStyle)));
				global::System.GC.KeepAlive(strokeStyle);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_cachedGeometry__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGradientMeshFactory.Create, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__Microsoft_Graphics_Canvas_Geometry__CanvasGradientMeshPatch *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__rg_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__IntPtr__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch[] patchElements, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch* unsafe_patchElements = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch*);
			uint unsafe_patchElements_mcgLength = 0;
			global::System.IntPtr unsafe_canvasGradientMesh__retval;
			global::System.IntPtr canvasGradientMesh__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				if (patchElements == null)
					unsafe_patchElements = null;
				else
				{
					if (patchElements != null)
						unsafe_patchElements_mcgLength = (uint)patchElements.Length;
					if (patchElements != null)
						unsafe_patchElements = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_patchElements_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_patchElements_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__Microsoft_Graphics_Canvas_Geometry__CanvasGradientMeshPatch patchElements
						unsafe_patchElements[mcgIdx] = patchElements[mcgIdx];
					}
				}
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_patchElements_mcgLength, 
									unsafe_patchElements, 
									&(unsafe_canvasGradientMesh__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasGradientMesh__retval = unsafe_canvasGradientMesh__retval;
				// Return
				return canvasGradientMesh__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_patchElements);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGradientMeshStatics.CreateCoonsPatch, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2 *, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_System_Numerics_Vector4__Windows_Foundation_Numerics__Vector4 *, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatchEdge__Microsoft_Graphics_Canvas_Geometry__CanvasGradientMeshPatchEdge *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__Microsoft_Graphics_Canvas_Geometry__CanvasGradientMeshPatch, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch Func_rg_Numerics_Vector2__rg_Numerics_Vector4__rg_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatchEdge__Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector2[] points, 
					global::System.Numerics.Vector4[] colors, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatchEdge[] edges, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_points_mcgLength = 0;
			global::System.Numerics.Vector2* unsafe_points;
			uint unsafe_colors_mcgLength = 0;
			global::System.Numerics.Vector4* unsafe_colors;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatchEdge* unsafe_edges = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatchEdge*);
			uint unsafe_edges_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch unsafe_gradientMeshPatch__retval;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch gradientMeshPatch__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (points != null)
					unsafe_points_mcgLength = (uint)points.Length;
				fixed (global::System.Numerics.Vector2* pinned_points = global::McgInterop.McgCoreHelpers.GetArrayForCompat(points))
				{
					unsafe_points = (global::System.Numerics.Vector2*)pinned_points;
					if (colors != null)
						unsafe_colors_mcgLength = (uint)colors.Length;
					fixed (global::System.Numerics.Vector4* pinned_colors = global::McgInterop.McgCoreHelpers.GetArrayForCompat(colors))
					{
						unsafe_colors = (global::System.Numerics.Vector4*)pinned_colors;
						if (edges == null)
							unsafe_edges = null;
						else
						{
							if (edges != null)
								unsafe_edges_mcgLength = (uint)edges.Length;
							if (edges != null)
								unsafe_edges = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatchEdge*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_edges_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatchEdge))));
							for (uint mcgIdx = 0; (mcgIdx < unsafe_edges_mcgLength); mcgIdx++)
							{
								// [fwd] [in] [optional] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatchEdge__Microsoft_Graphics_Canvas_Geometry__CanvasGradientMeshPatchEdge edges
								unsafe_edges[mcgIdx] = edges[mcgIdx];
							}
						}
						// Call to native method
						unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
											__this, 
											__typeHnd, 
											__targetIndex, 
											unsafe_points_mcgLength, 
											unsafe_points, 
											unsafe_colors_mcgLength, 
											unsafe_colors, 
											unsafe_edges_mcgLength, 
											unsafe_edges, 
											&(unsafe_gradientMeshPatch__retval)
										);
						global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
						gradientMeshPatch__retval = unsafe_gradientMeshPatch__retval;
					}
				}
				// Return
				return gradientMeshPatch__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_edges);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Geometry.ICanvasGradientMesh.get_Patches, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__Microsoft_Graphics_Canvas_Geometry__CanvasGradientMeshPatch *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch[] Func_rg_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch* unsafe_valueElements__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch*);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch[] valueElements__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch[]);
			uint unsafe_valueElements__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_valueElements__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_valueElements__retval_mcgLength), 
									&(unsafe_valueElements__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_valueElements__retval == null)
					valueElements__retval = null;
				else
				{
					valueElements__retval = new global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch[unsafe_valueElements__retval_mcgLength];
					if (valueElements__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_valueElements__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__Microsoft_Graphics_Canvas_Geometry__CanvasGradientMeshPatch valueElements__retval
							valueElements__retval[mcgIdx] = unsafe_valueElements__retval[mcgIdx];
						}
				}
				// Return
				return valueElements__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_valueElements__retval);
			}
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.CanvasBufferPrecision>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasBufferPrecision__Microsoft_Graphics_Canvas__CanvasBufferPrecision, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasBufferPrecision Func_Microsoft_Graphics_Canvas_CanvasBufferPrecision__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.CanvasBufferPrecision unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.CanvasBufferPrecision __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasSpriteBatchStatics.IsSupported, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasDevice__Microsoft_Graphics_Canvas__CanvasDevice *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Microsoft_Graphics_Canvas_CanvasDevice__bool__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasDevice device, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl** unsafe_device = default(global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl**);
			bool value__retval;
			sbyte unsafe_value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_device = (global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									device, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasDevice).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_device, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = unsafe_value__retval != 0;
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_device)));
				global::System.GC.KeepAlive(device);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasSpriteBatch.Draw, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasBitmap__Numerics_Vector2__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap, 
					global::System.Numerics.Vector2 offset, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_bitmap = (global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									bitmap, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_bitmap, 
									offset
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap)));
				global::System.GC.KeepAlive(bitmap);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasSpriteBatch.Draw, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasBitmap__Numerics_Matrix3x2__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap, 
					global::System.Numerics.Matrix3x2 transform, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_bitmap = (global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									bitmap, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_bitmap, 
									transform
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap)));
				global::System.GC.KeepAlive(bitmap);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasSpriteBatch.Draw, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector4__Windows_Foundation_Numerics__Vector4, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasBitmap___Rect__Numerics_Vector4__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap, 
					global::Windows.Foundation.Rect destRect, 
					global::System.Numerics.Vector4 tint, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_bitmap = (global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									bitmap, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_bitmap, 
									destRect, 
									tint
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap)));
				global::System.GC.KeepAlive(bitmap);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasSpriteBatch.Draw, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector4__Windows_Foundation_Numerics__Vector4, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasBitmap__Numerics_Vector2__Numerics_Vector4__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap, 
					global::System.Numerics.Vector2 offset, 
					global::System.Numerics.Vector4 tint, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_bitmap = (global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									bitmap, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_bitmap, 
									offset, 
									tint
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap)));
				global::System.GC.KeepAlive(bitmap);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasSpriteBatch.Draw, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector4__Windows_Foundation_Numerics__Vector4, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasBitmap__Numerics_Matrix3x2__Numerics_Vector4__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap, 
					global::System.Numerics.Matrix3x2 transform, 
					global::System.Numerics.Vector4 tint, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_bitmap = (global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									bitmap, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_bitmap, 
									transform, 
									tint
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap)));
				global::System.GC.KeepAlive(bitmap);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasSpriteBatch.Draw, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector4__Windows_Foundation_Numerics__Vector4, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasSpriteFlip__Microsoft_Graphics_Canvas__CanvasSpriteFlip, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasBitmap___Rect__Numerics_Vector4__Microsoft_Graphics_Canvas_CanvasSpriteFlip__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap, 
					global::Windows.Foundation.Rect destRect, 
					global::System.Numerics.Vector4 tint, 
					global::Microsoft.Graphics.Canvas.CanvasSpriteFlip flip, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_bitmap = (global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									bitmap, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_bitmap, 
									destRect, 
									tint, 
									flip
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap)));
				global::System.GC.KeepAlive(bitmap);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasSpriteBatch.Draw, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector4__Windows_Foundation_Numerics__Vector4, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasSpriteFlip__Microsoft_Graphics_Canvas__CanvasSpriteFlip, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasBitmap__Numerics_Matrix3x2__Numerics_Vector4__Microsoft_Graphics_Canvas_CanvasSpriteFlip__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap, 
					global::System.Numerics.Matrix3x2 transform, 
					global::System.Numerics.Vector4 tint, 
					global::Microsoft.Graphics.Canvas.CanvasSpriteFlip flip, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_bitmap = (global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									bitmap, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_bitmap, 
									transform, 
									tint, 
									flip
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap)));
				global::System.GC.KeepAlive(bitmap);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasSpriteBatch.Draw, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector4__Windows_Foundation_Numerics__Vector4, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasSpriteFlip__Microsoft_Graphics_Canvas__CanvasSpriteFlip, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasBitmap__Numerics_Vector2__Numerics_Vector4__Numerics_Vector2__float__Numerics_Vector2__Microsoft_Graphics_Canvas_CanvasSpriteFlip__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap, 
					global::System.Numerics.Vector2 offset, 
					global::System.Numerics.Vector4 tint, 
					global::System.Numerics.Vector2 origin, 
					float rotation, 
					global::System.Numerics.Vector2 scale, 
					global::Microsoft.Graphics.Canvas.CanvasSpriteFlip flip, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_bitmap = (global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									bitmap, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_bitmap, 
									offset, 
									tint, 
									origin, 
									rotation, 
									scale, 
									flip
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap)));
				global::System.GC.KeepAlive(bitmap);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasSpriteBatch.DrawFromSpriteSheet, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasBitmap___Rect___Rect__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap, 
					global::Windows.Foundation.Rect destRect, 
					global::Windows.Foundation.Rect sourceRect, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_bitmap = (global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									bitmap, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_bitmap, 
									destRect, 
									sourceRect
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap)));
				global::System.GC.KeepAlive(bitmap);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasSpriteBatch.DrawFromSpriteSheet, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasBitmap__Numerics_Vector2___Rect__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap, 
					global::System.Numerics.Vector2 offset, 
					global::Windows.Foundation.Rect sourceRect, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_bitmap = (global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									bitmap, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_bitmap, 
									offset, 
									sourceRect
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap)));
				global::System.GC.KeepAlive(bitmap);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasSpriteBatch.DrawFromSpriteSheet, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasBitmap__Numerics_Matrix3x2___Rect__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap, 
					global::System.Numerics.Matrix3x2 transform, 
					global::Windows.Foundation.Rect sourceRect, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_bitmap = (global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									bitmap, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_bitmap, 
									transform, 
									sourceRect
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap)));
				global::System.GC.KeepAlive(bitmap);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasSpriteBatch.DrawFromSpriteSheet, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector4__Windows_Foundation_Numerics__Vector4, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasBitmap___Rect___Rect__Numerics_Vector4__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap, 
					global::Windows.Foundation.Rect destRect, 
					global::Windows.Foundation.Rect sourceRect, 
					global::System.Numerics.Vector4 tint, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_bitmap = (global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									bitmap, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_bitmap, 
									destRect, 
									sourceRect, 
									tint
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap)));
				global::System.GC.KeepAlive(bitmap);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasSpriteBatch.DrawFromSpriteSheet, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector4__Windows_Foundation_Numerics__Vector4, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasBitmap__Numerics_Vector2___Rect__Numerics_Vector4__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap, 
					global::System.Numerics.Vector2 offset, 
					global::Windows.Foundation.Rect sourceRect, 
					global::System.Numerics.Vector4 tint, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_bitmap = (global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									bitmap, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_bitmap, 
									offset, 
									sourceRect, 
									tint
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap)));
				global::System.GC.KeepAlive(bitmap);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasSpriteBatch.DrawFromSpriteSheet, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector4__Windows_Foundation_Numerics__Vector4, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasBitmap__Numerics_Matrix3x2___Rect__Numerics_Vector4__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap, 
					global::System.Numerics.Matrix3x2 transform, 
					global::Windows.Foundation.Rect sourceRect, 
					global::System.Numerics.Vector4 tint, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_bitmap = (global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									bitmap, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_bitmap, 
									transform, 
									sourceRect, 
									tint
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap)));
				global::System.GC.KeepAlive(bitmap);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasSpriteBatch.DrawFromSpriteSheet, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector4__Windows_Foundation_Numerics__Vector4, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasSpriteFlip__Microsoft_Graphics_Canvas__CanvasSpriteFlip, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasBitmap___Rect___Rect__Numerics_Vector4__Microsoft_Graphics_Canvas_CanvasSpriteFlip__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap, 
					global::Windows.Foundation.Rect destRect, 
					global::Windows.Foundation.Rect sourceRect, 
					global::System.Numerics.Vector4 tint, 
					global::Microsoft.Graphics.Canvas.CanvasSpriteFlip flip, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_bitmap = (global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									bitmap, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_bitmap, 
									destRect, 
									sourceRect, 
									tint, 
									flip
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap)));
				global::System.GC.KeepAlive(bitmap);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasSpriteBatch.DrawFromSpriteSheet, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector4__Windows_Foundation_Numerics__Vector4, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasSpriteFlip__Microsoft_Graphics_Canvas__CanvasSpriteFlip, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasBitmap__Numerics_Matrix3x2___Rect__Numerics_Vector4__Microsoft_Graphics_Canvas_CanvasSpriteFlip__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap, 
					global::System.Numerics.Matrix3x2 transform, 
					global::Windows.Foundation.Rect sourceRect, 
					global::System.Numerics.Vector4 tint, 
					global::Microsoft.Graphics.Canvas.CanvasSpriteFlip flip, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_bitmap = (global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									bitmap, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_bitmap, 
									transform, 
									sourceRect, 
									tint, 
									flip
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap)));
				global::System.GC.KeepAlive(bitmap);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasSpriteBatch.DrawFromSpriteSheet, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasBitmap__Microsoft_Graphics_Canvas__CanvasBitmap *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector4__Windows_Foundation_Numerics__Vector4, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasSpriteFlip__Microsoft_Graphics_Canvas__CanvasSpriteFlip, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasBitmap__Numerics_Vector2___Rect__Numerics_Vector4__Numerics_Vector2__float__Numerics_Vector2__Microsoft_Graphics_Canvas_CanvasSpriteFlip__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasBitmap bitmap, 
					global::System.Numerics.Vector2 offset, 
					global::Windows.Foundation.Rect sourceRect, 
					global::System.Numerics.Vector4 tint, 
					global::System.Numerics.Vector2 origin, 
					float rotation, 
					global::System.Numerics.Vector2 scale, 
					global::Microsoft.Graphics.Canvas.CanvasSpriteFlip flip, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl** unsafe_bitmap = default(global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_bitmap = (global::Microsoft.Graphics.Canvas.ICanvasBitmap__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									bitmap, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasBitmap).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_bitmap, 
									offset, 
									sourceRect, 
									tint, 
									origin, 
									rotation, 
									scale, 
									flip
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap)));
				global::System.GC.KeepAlive(bitmap);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasSolidColorBrushFactory.Create, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__UI_Color__IntPtr__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.UI.Color color, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::System.IntPtr unsafe_canvasSolidColorBrush__retval;
			global::System.IntPtr canvasSolidColorBrush__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									color, 
									&(unsafe_canvasSolidColorBrush__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasSolidColorBrush__retval = unsafe_canvasSolidColorBrush__retval;
				// Return
				return canvasSolidColorBrush__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasSolidColorBrushStatics.CreateHdr, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector4__Windows_Foundation_Numerics__Vector4, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasSolidColorBrush__Microsoft_Graphics_Canvas_Brushes__CanvasSolidColorBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Brushes.CanvasSolidColorBrush Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Numerics_Vector4__Microsoft_Graphics_Canvas_Brushes_CanvasSolidColorBrush__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::System.Numerics.Vector4 colorHdr, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasSolidColorBrush__Impl.Vtbl** unsafe_canvasSolidColorBrush__retval = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasSolidColorBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.CanvasSolidColorBrush canvasSolidColorBrush__retval = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasSolidColorBrush);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_canvasSolidColorBrush__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									colorHdr, 
									&(unsafe_canvasSolidColorBrush__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasSolidColorBrush__retval = (global::Microsoft.Graphics.Canvas.Brushes.CanvasSolidColorBrush)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_canvasSolidColorBrush__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasSolidColorBrush).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasSolidColorBrush).TypeHandle
								);
				// Return
				return canvasSolidColorBrush__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasSolidColorBrush__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasSolidColorBrush.get_Color, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Color Func_UI_Color__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Color unsafe_value__retval;
			global::Windows.UI.Color value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasSolidColorBrush.get_ColorHdr, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector4__Windows_Foundation_Numerics__Vector4, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Vector4 Func_Numerics_Vector4__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Vector4 unsafe_value__retval;
			global::System.Numerics.Vector4 value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasImageBrushFactory.CreateWithImage, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasImage__Microsoft_Graphics_Canvas__ICanvasImage *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas_ICanvasImage__IntPtr__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Microsoft.Graphics.Canvas.ICanvasImage image, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl** unsafe_image = default(global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**);
			global::System.IntPtr unsafe_canvasImageBrush__retval;
			global::System.IntPtr canvasImageBrush__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_image = (global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									image, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasImage).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_image, 
									&(unsafe_canvasImageBrush__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasImageBrush__retval = unsafe_canvasImageBrush__retval;
				// Return
				return canvasImageBrush__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_image)));
				global::System.GC.KeepAlive(image);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasImageBrush.get_Image, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasImage__Microsoft_Graphics_Canvas__ICanvasImage *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.ICanvasImage Func_Microsoft_Graphics_Canvas_ICanvasImage__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl** unsafe_value__retval = default(global::Microsoft.Graphics.Canvas.ICanvasImage__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasImage value__retval = default(global::Microsoft.Graphics.Canvas.ICanvasImage);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Microsoft.Graphics.Canvas.ICanvasImage)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasImage).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasImageBrush.get_ExtendX, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasEdgeBehavior__Microsoft_Graphics_Canvas__CanvasEdgeBehavior, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasEdgeBehavior Func_Microsoft_Graphics_Canvas_CanvasEdgeBehavior__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.CanvasEdgeBehavior unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.CanvasEdgeBehavior value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasImageBrush.get_SourceRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTReferenceMarshaller] System_Nullable_1_Windows_Foundation_Rect___Windows_Foundation__IReference_A_Windows_Foundation_Rect_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Nullable<global::Windows.Foundation.Rect> Func_Nullable_1__Rect___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Nullable_A_Windows_Foundation_Rect_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Nullable_A_Windows_Foundation_Rect_V___Impl.Vtbl**);
			global::System.Nullable<global::Windows.Foundation.Rect> value__retval = default(global::System.Nullable<global::Windows.Foundation.Rect>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					value__retval = (global::Windows.Foundation.Rect)global::System.Runtime.InteropServices.McgModuleManager.UnboxIfBoxed(
										global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
															((global::System.IntPtr)unsafe_value__retval), 
															typeof(global::Windows.Foundation.IReference<global::Windows.Foundation.Rect>).TypeHandle
														), 
										"Windows.Foundation.IReference`1<Windows.Foundation.Rect>"
									);
				else
					value__retval = null;
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasImageBrush.put_SourceRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTReferenceMarshaller] System_Nullable_1_Windows_Foundation_Rect___Windows_Foundation__IReference_A_Windows_Foundation_Rect_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Nullable_1__Rect___(
					global::System.__ComObject __this, 
					global::System.Nullable<global::Windows.Foundation.Rect> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Nullable_A_Windows_Foundation_Rect_V___Impl.Vtbl** unsafe_value = default(global::System.Nullable_A_Windows_Foundation_Rect_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				if (value.HasValue)
				{
					global::System.Runtime.InteropServices.WindowsRuntime.ReferenceImpl<global::Windows.Foundation.Rect> unsafe_value_Wrapper = new global::System.Runtime.InteropServices.WindowsRuntime.ReferenceImpl<global::Windows.Foundation.Rect>(value.Value, 19);
					unsafe_value = (global::System.Nullable_A_Windows_Foundation_Rect_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ManagedObjectToComInterface(
										unsafe_value_Wrapper, 
										typeof(global::Windows.Foundation.IReference<global::Windows.Foundation.Rect>).TypeHandle
									);
				}
				else
					unsafe_value = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasImageBrush.get_Interpolation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasImageInterpolation__Microsoft_Graphics_Canvas__CanvasImageInterpolation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasImageInterpolation Func_Microsoft_Graphics_Canvas_CanvasImageInterpolation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.CanvasImageInterpolation unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.CanvasImageInterpolation value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrushFactory.CreateSimple, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__UI_Color__UI_Color__IntPtr__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.UI.Color startColor, 
					global::Windows.UI.Color endColor, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::System.IntPtr unsafe_canvasLinearGradientBrush__retval;
			global::System.IntPtr canvasLinearGradientBrush__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									startColor, 
									endColor, 
									&(unsafe_canvasLinearGradientBrush__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasLinearGradientBrush__retval = unsafe_canvasLinearGradientBrush__retval;
				// Return
				return canvasLinearGradientBrush__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrushFactory.CreateWithStops, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStop *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__IntPtr__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop[] gradientStops, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop* unsafe_gradientStops = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop*);
			uint unsafe_gradientStops_mcgLength = 0;
			global::System.IntPtr unsafe_canvasLinearGradientBrush__retval;
			global::System.IntPtr canvasLinearGradientBrush__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				if (gradientStops == null)
					unsafe_gradientStops = null;
				else
				{
					if (gradientStops != null)
						unsafe_gradientStops_mcgLength = (uint)gradientStops.Length;
					if (gradientStops != null)
						unsafe_gradientStops = (global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_gradientStops_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_gradientStops_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStop gradientStops
						unsafe_gradientStops[mcgIdx] = gradientStops[mcgIdx];
					}
				}
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_gradientStops_mcgLength, 
									unsafe_gradientStops, 
									&(unsafe_canvasLinearGradientBrush__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasLinearGradientBrush__retval = unsafe_canvasLinearGradientBrush__retval;
				// Return
				return canvasLinearGradientBrush__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_gradientStops);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrushFactory.CreateWithEdgeBehaviorAndAlphaMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStop *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasEdgeBehavior__Microsoft_Graphics_Canvas__CanvasEdgeBehavior, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasAlphaMode__Microsoft_Graphics_Canvas__CanvasAlphaMode, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__intintIntPtr__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop[] gradientStops, 
					int edgeBehavior, 
					int alphaMode, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop* unsafe_gradientStops = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop*);
			uint unsafe_gradientStops_mcgLength = 0;
			global::System.IntPtr unsafe_canvasLinearGradientBrush__retval;
			global::System.IntPtr canvasLinearGradientBrush__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				if (gradientStops == null)
					unsafe_gradientStops = null;
				else
				{
					if (gradientStops != null)
						unsafe_gradientStops_mcgLength = (uint)gradientStops.Length;
					if (gradientStops != null)
						unsafe_gradientStops = (global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_gradientStops_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_gradientStops_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStop gradientStops
						unsafe_gradientStops[mcgIdx] = gradientStops[mcgIdx];
					}
				}
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_gradientStops_mcgLength, 
									unsafe_gradientStops, 
									edgeBehavior, 
									alphaMode, 
									&(unsafe_canvasLinearGradientBrush__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasLinearGradientBrush__retval = unsafe_canvasLinearGradientBrush__retval;
				// Return
				return canvasLinearGradientBrush__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_gradientStops);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrushFactory.CreateWithEdgeBehaviorAndInterpolationOptions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStop *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasEdgeBehavior__Microsoft_Graphics_Canvas__CanvasEdgeBehavior, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasAlphaMode__Microsoft_Graphics_Canvas__CanvasAlphaMode, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasColorSpace__Microsoft_Graphics_Canvas__CanvasColorSpace, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasColorSpace__Microsoft_Graphics_Canvas__CanvasColorSpace, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasBufferPrecision__Microsoft_Graphics_Canvas__CanvasBufferPrecision, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__intintintintintIntPtr__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop[] gradientStops, 
					int edgeBehavior, 
					int alphaMode, 
					int preInterpolationSpace, 
					int postInterpolationSpace, 
					int bufferPrecision, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop* unsafe_gradientStops = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop*);
			uint unsafe_gradientStops_mcgLength = 0;
			global::System.IntPtr unsafe_canvasLinearGradientBrush__retval;
			global::System.IntPtr canvasLinearGradientBrush__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				if (gradientStops == null)
					unsafe_gradientStops = null;
				else
				{
					if (gradientStops != null)
						unsafe_gradientStops_mcgLength = (uint)gradientStops.Length;
					if (gradientStops != null)
						unsafe_gradientStops = (global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_gradientStops_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_gradientStops_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStop gradientStops
						unsafe_gradientStops[mcgIdx] = gradientStops[mcgIdx];
					}
				}
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_gradientStops_mcgLength, 
									unsafe_gradientStops, 
									edgeBehavior, 
									alphaMode, 
									preInterpolationSpace, 
									postInterpolationSpace, 
									bufferPrecision, 
									&(unsafe_canvasLinearGradientBrush__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasLinearGradientBrush__retval = unsafe_canvasLinearGradientBrush__retval;
				// Return
				return canvasLinearGradientBrush__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_gradientStops);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrushStatics.CreateHdr, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector4__Windows_Foundation_Numerics__Vector4, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector4__Windows_Foundation_Numerics__Vector4, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasLinearGradientBrush__Microsoft_Graphics_Canvas_Brushes__CanvasLinearGradientBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Numerics_Vector4__Numerics_Vector4__Microsoft_Graphics_Canvas_Brushes_CanvasLinearGradientBrush__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::System.Numerics.Vector4 startColorHdr, 
					global::System.Numerics.Vector4 endColorHdr, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrush__Impl.Vtbl** unsafe_canvasLinearGradientBrush__retval = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush canvasLinearGradientBrush__retval = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_canvasLinearGradientBrush__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									startColorHdr, 
									endColorHdr, 
									&(unsafe_canvasLinearGradientBrush__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasLinearGradientBrush__retval = (global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_canvasLinearGradientBrush__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrush).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush).TypeHandle
								);
				// Return
				return canvasLinearGradientBrush__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasLinearGradientBrush__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrushStatics.CreateHdr, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasLinearGradientBrush__Microsoft_Graphics_Canvas_Brushes__CanvasLinearGradientBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes_CanvasLinearGradientBrush__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr[] gradientStopsHdr, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr* unsafe_gradientStopsHdr = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr*);
			uint unsafe_gradientStopsHdr_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrush__Impl.Vtbl** unsafe_canvasLinearGradientBrush__retval = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush canvasLinearGradientBrush__retval = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				if (gradientStopsHdr == null)
					unsafe_gradientStopsHdr = null;
				else
				{
					if (gradientStopsHdr != null)
						unsafe_gradientStopsHdr_mcgLength = (uint)gradientStopsHdr.Length;
					if (gradientStopsHdr != null)
						unsafe_gradientStopsHdr = (global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_gradientStopsHdr_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_gradientStopsHdr_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr gradientStopsHdr
						unsafe_gradientStopsHdr[mcgIdx] = gradientStopsHdr[mcgIdx];
					}
				}
				unsafe_canvasLinearGradientBrush__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_gradientStopsHdr_mcgLength, 
									unsafe_gradientStopsHdr, 
									&(unsafe_canvasLinearGradientBrush__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasLinearGradientBrush__retval = (global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_canvasLinearGradientBrush__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrush).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush).TypeHandle
								);
				// Return
				return canvasLinearGradientBrush__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_gradientStopsHdr);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasLinearGradientBrush__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrushStatics.CreateHdr, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasEdgeBehavior__Microsoft_Graphics_Canvas__CanvasEdgeBehavior, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasAlphaMode__Microsoft_Graphics_Canvas__CanvasAlphaMode, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasLinearGradientBrush__Microsoft_Graphics_Canvas_Brushes__CanvasLinearGradientBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__intintMicrosoft_Graphics_Canvas_Brushes_CanvasLinearGradientBrush__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr[] gradientStopsHdr, 
					int edgeBehavior, 
					int alphaMode, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr* unsafe_gradientStopsHdr = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr*);
			uint unsafe_gradientStopsHdr_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrush__Impl.Vtbl** unsafe_canvasLinearGradientBrush__retval = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush canvasLinearGradientBrush__retval = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				if (gradientStopsHdr == null)
					unsafe_gradientStopsHdr = null;
				else
				{
					if (gradientStopsHdr != null)
						unsafe_gradientStopsHdr_mcgLength = (uint)gradientStopsHdr.Length;
					if (gradientStopsHdr != null)
						unsafe_gradientStopsHdr = (global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_gradientStopsHdr_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_gradientStopsHdr_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr gradientStopsHdr
						unsafe_gradientStopsHdr[mcgIdx] = gradientStopsHdr[mcgIdx];
					}
				}
				unsafe_canvasLinearGradientBrush__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_gradientStopsHdr_mcgLength, 
									unsafe_gradientStopsHdr, 
									edgeBehavior, 
									alphaMode, 
									&(unsafe_canvasLinearGradientBrush__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasLinearGradientBrush__retval = (global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_canvasLinearGradientBrush__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrush).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush).TypeHandle
								);
				// Return
				return canvasLinearGradientBrush__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_gradientStopsHdr);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasLinearGradientBrush__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrushStatics.CreateHdr, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasEdgeBehavior__Microsoft_Graphics_Canvas__CanvasEdgeBehavior, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasAlphaMode__Microsoft_Graphics_Canvas__CanvasAlphaMode, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasColorSpace__Microsoft_Graphics_Canvas__CanvasColorSpace, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasColorSpace__Microsoft_Graphics_Canvas__CanvasColorSpace, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasBufferPrecision__Microsoft_Graphics_Canvas__CanvasBufferPrecision, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasLinearGradientBrush__Microsoft_Graphics_Canvas_Brushes__CanvasLinearGradientBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__intintintintintMicrosoft_Graphics_Canvas_Brushes_CanvasLinearGradientBrush__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr[] gradientStopsHdr, 
					int edgeBehavior, 
					int alphaMode, 
					int preInterpolationSpace, 
					int postInterpolationSpace, 
					int bufferPrecision, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr* unsafe_gradientStopsHdr = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr*);
			uint unsafe_gradientStopsHdr_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrush__Impl.Vtbl** unsafe_canvasLinearGradientBrush__retval = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush canvasLinearGradientBrush__retval = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				if (gradientStopsHdr == null)
					unsafe_gradientStopsHdr = null;
				else
				{
					if (gradientStopsHdr != null)
						unsafe_gradientStopsHdr_mcgLength = (uint)gradientStopsHdr.Length;
					if (gradientStopsHdr != null)
						unsafe_gradientStopsHdr = (global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_gradientStopsHdr_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_gradientStopsHdr_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr gradientStopsHdr
						unsafe_gradientStopsHdr[mcgIdx] = gradientStopsHdr[mcgIdx];
					}
				}
				unsafe_canvasLinearGradientBrush__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_gradientStopsHdr_mcgLength, 
									unsafe_gradientStopsHdr, 
									edgeBehavior, 
									alphaMode, 
									preInterpolationSpace, 
									postInterpolationSpace, 
									bufferPrecision, 
									&(unsafe_canvasLinearGradientBrush__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasLinearGradientBrush__retval = (global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_canvasLinearGradientBrush__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrush).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush).TypeHandle
								);
				// Return
				return canvasLinearGradientBrush__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_gradientStopsHdr);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasLinearGradientBrush__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrushStatics.CreateRainbow, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasLinearGradientBrush__Microsoft_Graphics_Canvas_Brushes__CanvasLinearGradientBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__float__Microsoft_Graphics_Canvas_Brushes_CanvasLinearGradientBrush__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					float eldritchness, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrush__Impl.Vtbl** unsafe_canvasLinearGradientBrush__retval = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush canvasLinearGradientBrush__retval = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_canvasLinearGradientBrush__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									eldritchness, 
									&(unsafe_canvasLinearGradientBrush__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasLinearGradientBrush__retval = (global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_canvasLinearGradientBrush__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrush).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasLinearGradientBrush).TypeHandle
								);
				// Return
				return canvasLinearGradientBrush__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasLinearGradientBrush__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrush.get_Stops, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStop *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop[] Func_rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop* unsafe_valueElements__retval = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop*);
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop[] valueElements__retval = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop[]);
			uint unsafe_valueElements__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_valueElements__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_valueElements__retval_mcgLength), 
									&(unsafe_valueElements__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_valueElements__retval == null)
					valueElements__retval = null;
				else
				{
					valueElements__retval = new global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop[unsafe_valueElements__retval_mcgLength];
					if (valueElements__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_valueElements__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStop valueElements__retval
							valueElements__retval[mcgIdx] = unsafe_valueElements__retval[mcgIdx];
						}
				}
				// Return
				return valueElements__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_valueElements__retval);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrush.get_StopsHdr, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr[] Func_rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr* unsafe_valueElements__retval = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr*);
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr[] valueElements__retval = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr[]);
			uint unsafe_valueElements__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_valueElements__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_valueElements__retval_mcgLength), 
									&(unsafe_valueElements__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_valueElements__retval == null)
					valueElements__retval = null;
				else
				{
					valueElements__retval = new global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr[unsafe_valueElements__retval_mcgLength];
					if (valueElements__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_valueElements__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr valueElements__retval
							valueElements__retval[mcgIdx] = unsafe_valueElements__retval[mcgIdx];
						}
				}
				// Return
				return valueElements__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_valueElements__retval);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasLinearGradientBrush.get_PreInterpolationSpace, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasColorSpace__Microsoft_Graphics_Canvas__CanvasColorSpace, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasColorSpace Func_Microsoft_Graphics_Canvas_CanvasColorSpace__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.CanvasColorSpace unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.CanvasColorSpace value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, System.Collections.Generic.IEnumerable<Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop___Windows_Foundation_Collections__IIterator_A_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop> Func__Collections_IIterator_1_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStop, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop Func_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStop *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__uint__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop* unsafe_items = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStop items
						items[mcgIdx] = unsafe_items[mcgIdx];
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStop, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop Func_uint__Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop___Windows_Foundation_Collections__IVectorView_A_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop> Func__IReadOnlyList_1_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStop, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value, 
								&(unsafe_index), 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval != 0;
			index = unsafe_index;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStop, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__(
					global::System.__ComObject __this, 
					uint index, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStop, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStop *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop* unsafe_items = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStop items
						items[mcgIdx] = unsafe_items[mcgIdx];
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStop *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop* unsafe_items = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop*);
			uint unsafe_items_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items == null)
					unsafe_items = null;
				else
				{
					if (items != null)
						unsafe_items_mcgLength = (uint)items.Length;
					if (items != null)
						unsafe_items = (global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStop__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStop items
						unsafe_items[mcgIdx] = items[mcgIdx];
					}
				}
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr___Windows_Foundation_Collections__IIterator_A_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr> Func__Collections_IIterator_1_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr Func_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__uint__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr* unsafe_items = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr items
						items[mcgIdx] = unsafe_items[mcgIdx];
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr Func_uint__Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr___Windows_Foundation_Collections__IVectorView_A_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr> Func__IReadOnlyList_1_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value, 
								&(unsafe_index), 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval != 0;
			index = unsafe_index;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__(
					global::System.__ComObject __this, 
					uint index, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr* unsafe_items = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr items
						items[mcgIdx] = unsafe_items[mcgIdx];
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr* unsafe_items = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr*);
			uint unsafe_items_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items == null)
					unsafe_items = null;
				else
				{
					if (items != null)
						unsafe_items_mcgLength = (uint)items.Length;
					if (items != null)
						unsafe_items = (global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr items
						unsafe_items[mcgIdx] = items[mcgIdx];
					}
				}
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasRadialGradientBrushStatics.CreateHdr, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector4__Windows_Foundation_Numerics__Vector4, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector4__Windows_Foundation_Numerics__Vector4, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasRadialGradientBrush__Microsoft_Graphics_Canvas_Brushes__CanvasRadialGradientBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Numerics_Vector4__Numerics_Vector4__Microsoft_Graphics_Canvas_Brushes_CanvasRadialGradientBrush__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::System.Numerics.Vector4 startColorHdr, 
					global::System.Numerics.Vector4 endColorHdr, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasRadialGradientBrush__Impl.Vtbl** unsafe_canvasRadialGradientBrush__retval = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasRadialGradientBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush canvasRadialGradientBrush__retval = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_canvasRadialGradientBrush__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									startColorHdr, 
									endColorHdr, 
									&(unsafe_canvasRadialGradientBrush__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasRadialGradientBrush__retval = (global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_canvasRadialGradientBrush__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasRadialGradientBrush).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush).TypeHandle
								);
				// Return
				return canvasRadialGradientBrush__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasRadialGradientBrush__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasRadialGradientBrushStatics.CreateHdr, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasRadialGradientBrush__Microsoft_Graphics_Canvas_Brushes__CanvasRadialGradientBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes_CanvasRadialGradientBrush__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr[] gradientStops, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr* unsafe_gradientStops = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr*);
			uint unsafe_gradientStops_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasRadialGradientBrush__Impl.Vtbl** unsafe_canvasRadialGradientBrush__retval = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasRadialGradientBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush canvasRadialGradientBrush__retval = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				if (gradientStops == null)
					unsafe_gradientStops = null;
				else
				{
					if (gradientStops != null)
						unsafe_gradientStops_mcgLength = (uint)gradientStops.Length;
					if (gradientStops != null)
						unsafe_gradientStops = (global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_gradientStops_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_gradientStops_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr gradientStops
						unsafe_gradientStops[mcgIdx] = gradientStops[mcgIdx];
					}
				}
				unsafe_canvasRadialGradientBrush__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_gradientStops_mcgLength, 
									unsafe_gradientStops, 
									&(unsafe_canvasRadialGradientBrush__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasRadialGradientBrush__retval = (global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_canvasRadialGradientBrush__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasRadialGradientBrush).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush).TypeHandle
								);
				// Return
				return canvasRadialGradientBrush__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_gradientStops);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasRadialGradientBrush__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasRadialGradientBrushStatics.CreateHdr, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasEdgeBehavior__Microsoft_Graphics_Canvas__CanvasEdgeBehavior, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasAlphaMode__Microsoft_Graphics_Canvas__CanvasAlphaMode, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasRadialGradientBrush__Microsoft_Graphics_Canvas_Brushes__CanvasRadialGradientBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__intintMicrosoft_Graphics_Canvas_Brushes_CanvasRadialGradientBrush__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr[] gradientStops, 
					int edgeBehavior, 
					int alphaMode, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr* unsafe_gradientStops = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr*);
			uint unsafe_gradientStops_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasRadialGradientBrush__Impl.Vtbl** unsafe_canvasRadialGradientBrush__retval = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasRadialGradientBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush canvasRadialGradientBrush__retval = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				if (gradientStops == null)
					unsafe_gradientStops = null;
				else
				{
					if (gradientStops != null)
						unsafe_gradientStops_mcgLength = (uint)gradientStops.Length;
					if (gradientStops != null)
						unsafe_gradientStops = (global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_gradientStops_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_gradientStops_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr gradientStops
						unsafe_gradientStops[mcgIdx] = gradientStops[mcgIdx];
					}
				}
				unsafe_canvasRadialGradientBrush__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_gradientStops_mcgLength, 
									unsafe_gradientStops, 
									edgeBehavior, 
									alphaMode, 
									&(unsafe_canvasRadialGradientBrush__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasRadialGradientBrush__retval = (global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_canvasRadialGradientBrush__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasRadialGradientBrush).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush).TypeHandle
								);
				// Return
				return canvasRadialGradientBrush__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_gradientStops);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasRadialGradientBrush__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasRadialGradientBrushStatics.CreateHdr, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasEdgeBehavior__Microsoft_Graphics_Canvas__CanvasEdgeBehavior, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasAlphaMode__Microsoft_Graphics_Canvas__CanvasAlphaMode, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasColorSpace__Microsoft_Graphics_Canvas__CanvasColorSpace, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasColorSpace__Microsoft_Graphics_Canvas__CanvasColorSpace, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasBufferPrecision__Microsoft_Graphics_Canvas__CanvasBufferPrecision, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasRadialGradientBrush__Microsoft_Graphics_Canvas_Brushes__CanvasRadialGradientBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__rg_Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__intintintintintMicrosoft_Graphics_Canvas_Brushes_CanvasRadialGradientBrush__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr[] gradientStops, 
					int edgeBehavior, 
					int alphaMode, 
					int preInterpolationSpace, 
					int postInterpolationSpace, 
					int bufferPrecision, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr* unsafe_gradientStops = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr*);
			uint unsafe_gradientStops_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasRadialGradientBrush__Impl.Vtbl** unsafe_canvasRadialGradientBrush__retval = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasRadialGradientBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush canvasRadialGradientBrush__retval = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				if (gradientStops == null)
					unsafe_gradientStops = null;
				else
				{
					if (gradientStops != null)
						unsafe_gradientStops_mcgLength = (uint)gradientStops.Length;
					if (gradientStops != null)
						unsafe_gradientStops = (global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_gradientStops_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_gradientStops_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasGradientStopHdr__Microsoft_Graphics_Canvas_Brushes__CanvasGradientStopHdr gradientStops
						unsafe_gradientStops[mcgIdx] = gradientStops[mcgIdx];
					}
				}
				unsafe_canvasRadialGradientBrush__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_gradientStops_mcgLength, 
									unsafe_gradientStops, 
									edgeBehavior, 
									alphaMode, 
									preInterpolationSpace, 
									postInterpolationSpace, 
									bufferPrecision, 
									&(unsafe_canvasRadialGradientBrush__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasRadialGradientBrush__retval = (global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_canvasRadialGradientBrush__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasRadialGradientBrush).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush).TypeHandle
								);
				// Return
				return canvasRadialGradientBrush__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_gradientStops);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasRadialGradientBrush__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Brushes.ICanvasRadialGradientBrushStatics.CreateRainbow, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Brushes_CanvasRadialGradientBrush__Microsoft_Graphics_Canvas_Brushes__CanvasRadialGradientBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__float__Microsoft_Graphics_Canvas_Brushes_CanvasRadialGradientBrush__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					float eldritchness, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.ICanvasRadialGradientBrush__Impl.Vtbl** unsafe_canvasRadialGradientBrush__retval = default(global::Microsoft.Graphics.Canvas.Brushes.ICanvasRadialGradientBrush__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush canvasRadialGradientBrush__retval = default(global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_canvasRadialGradientBrush__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									eldritchness, 
									&(unsafe_canvasRadialGradientBrush__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasRadialGradientBrush__retval = (global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_canvasRadialGradientBrush__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.ICanvasRadialGradientBrush).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Brushes.CanvasRadialGradientBrush).TypeHandle
								);
				// Return
				return canvasRadialGradientBrush__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasRadialGradientBrush__retval)));
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Color>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Color___Windows_Foundation_Collections__IIterator_A_Windows_UI_Color_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Color> Func__Collections_IIterator_1_UI_Color___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Color_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Color_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Color> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Color>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Color>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Color>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Color>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_UI_Color__Windows_UI__Color *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Color__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Color[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Color* unsafe_items;
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			// Marshalling
			if (items != null)
				unsafe_items_mcgLength = (uint)items.Length;
			fixed (global::Windows.UI.Color* pinned_items = global::McgInterop.McgCoreHelpers.GetArrayForCompat(items))
			{
				unsafe_items = (global::Windows.UI.Color*)pinned_items;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
			}
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Color>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Color Func_uint__UI_Color__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Color unsafe___value__retval;
			global::Windows.UI.Color __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Color>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Color___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Color_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Color> Func__IReadOnlyList_1_UI_Color___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Color_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Color_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Color> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Color>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Color>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Color>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Color>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Color__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Color value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value, 
								&(unsafe_index), 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval != 0;
			index = unsafe_index;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Color>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Color__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Color value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Color>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_UI_Color__Windows_UI__Color *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Color__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Color[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Color* unsafe_items;
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			// Marshalling
			if (items != null)
				unsafe_items_mcgLength = (uint)items.Length;
			fixed (global::Windows.UI.Color* pinned_items = global::McgInterop.McgCoreHelpers.GetArrayForCompat(items))
			{
				unsafe_items = (global::Windows.UI.Color*)pinned_items;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
			}
			// Return
			return __value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasRenderTargetFactory.CreateWithSize, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreatorWithDpi__Microsoft_Graphics_Canvas__ICanvasResourceCreatorWithDpi *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Size__Windows_Foundation__Size, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Microsoft_Graphics_Canvas_ICanvasResourceCreatorWithDpi___Size__IntPtr__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi resourceCreator, 
					global::Windows.Foundation.Size size, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi__Impl.Vtbl**);
			global::System.IntPtr unsafe_renderTarget__retval;
			global::System.IntPtr renderTarget__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									size, 
									&(unsafe_renderTarget__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				renderTarget__retval = unsafe_renderTarget__retval;
				// Return
				return renderTarget__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasRenderTargetFactory.CreateWithWidthAndHeight, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreatorWithDpi__Microsoft_Graphics_Canvas__ICanvasResourceCreatorWithDpi *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Microsoft_Graphics_Canvas_ICanvasResourceCreatorWithDpi__float__float__IntPtr__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi resourceCreator, 
					float width, 
					float height, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi__Impl.Vtbl**);
			global::System.IntPtr unsafe_renderTarget__retval;
			global::System.IntPtr renderTarget__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									width, 
									height, 
									&(unsafe_renderTarget__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				renderTarget__retval = unsafe_renderTarget__retval;
				// Return
				return renderTarget__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasRenderTargetFactory.CreateWithWidthAndHeightAndDpi, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__float__float__float__IntPtr__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					float width, 
					float height, 
					float dpi, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::System.IntPtr unsafe_renderTarget__retval;
			global::System.IntPtr renderTarget__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									width, 
									height, 
									dpi, 
									&(unsafe_renderTarget__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				renderTarget__retval = unsafe_renderTarget__retval;
				// Return
				return renderTarget__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasRenderTargetFactory.CreateWithWidthAndHeightAndDpiAndFormatAndAlpha, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Graphics_DirectX_DirectXPixelFormat__Windows_Graphics_DirectX__DirectXPixelFormat, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasAlphaMode__Microsoft_Graphics_Canvas__CanvasAlphaMode, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__float__float__float__intintIntPtr__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					float width, 
					float height, 
					float dpi, 
					int format, 
					int alpha, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::System.IntPtr unsafe_renderTarget__retval;
			global::System.IntPtr renderTarget__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									width, 
									height, 
									dpi, 
									format, 
									alpha, 
									&(unsafe_renderTarget__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				renderTarget__retval = unsafe_renderTarget__retval;
				// Return
				return renderTarget__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasRenderTargetStatics.CreateFromDirect3D11Surface, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Graphics_DirectX_Direct3D11_IDirect3DSurface__Windows_Graphics_DirectX_Direct3D11__IDirect3DSurface *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasRenderTarget__Microsoft_Graphics_Canvas__CanvasRenderTarget *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasRenderTarget Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Graphics_DirectX_Direct3D11_IDirect3DSurface__Microsoft_Graphics_Canvas_CanvasRenderTarget__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface surface, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface__Impl.Vtbl** unsafe_surface = default(global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasRenderTarget__Impl.Vtbl** unsafe_bitmap__retval = default(global::Microsoft.Graphics.Canvas.ICanvasRenderTarget__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasRenderTarget bitmap__retval = default(global::Microsoft.Graphics.Canvas.CanvasRenderTarget);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_surface = (global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									surface, 
									typeof(global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface).TypeHandle
								);
				unsafe_bitmap__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_surface, 
									&(unsafe_bitmap__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				bitmap__retval = (global::Microsoft.Graphics.Canvas.CanvasRenderTarget)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_bitmap__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasRenderTarget).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasRenderTarget).TypeHandle
								);
				// Return
				return bitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_surface)));
				global::System.GC.KeepAlive(surface);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasRenderTargetStatics.CreateFromDirect3D11Surface, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Graphics_DirectX_Direct3D11_IDirect3DSurface__Windows_Graphics_DirectX_Direct3D11__IDirect3DSurface *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasRenderTarget__Microsoft_Graphics_Canvas__CanvasRenderTarget *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasRenderTarget Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Graphics_DirectX_Direct3D11_IDirect3DSurface__float__Microsoft_Graphics_Canvas_CanvasRenderTarget__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface surface, 
					float dpi, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface__Impl.Vtbl** unsafe_surface = default(global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasRenderTarget__Impl.Vtbl** unsafe_bitmap__retval = default(global::Microsoft.Graphics.Canvas.ICanvasRenderTarget__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasRenderTarget bitmap__retval = default(global::Microsoft.Graphics.Canvas.CanvasRenderTarget);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_surface = (global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									surface, 
									typeof(global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface).TypeHandle
								);
				unsafe_bitmap__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_surface, 
									dpi, 
									&(unsafe_bitmap__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				bitmap__retval = (global::Microsoft.Graphics.Canvas.CanvasRenderTarget)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_bitmap__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasRenderTarget).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasRenderTarget).TypeHandle
								);
				// Return
				return bitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_surface)));
				global::System.GC.KeepAlive(surface);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasRenderTargetStatics.CreateFromDirect3D11Surface, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Graphics_DirectX_Direct3D11_IDirect3DSurface__Windows_Graphics_DirectX_Direct3D11__IDirect3DSurface *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasAlphaMode__Microsoft_Graphics_Canvas__CanvasAlphaMode, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasRenderTarget__Microsoft_Graphics_Canvas__CanvasRenderTarget *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasRenderTarget Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Graphics_DirectX_Direct3D11_IDirect3DSurface__float__intMicrosoft_Graphics_Canvas_CanvasRenderTarget__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface surface, 
					float dpi, 
					int alpha, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface__Impl.Vtbl** unsafe_surface = default(global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasRenderTarget__Impl.Vtbl** unsafe_bitmap__retval = default(global::Microsoft.Graphics.Canvas.ICanvasRenderTarget__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasRenderTarget bitmap__retval = default(global::Microsoft.Graphics.Canvas.CanvasRenderTarget);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_surface = (global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									surface, 
									typeof(global::Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface).TypeHandle
								);
				unsafe_bitmap__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_surface, 
									dpi, 
									alpha, 
									&(unsafe_bitmap__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				bitmap__retval = (global::Microsoft.Graphics.Canvas.CanvasRenderTarget)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_bitmap__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasRenderTarget).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasRenderTarget).TypeHandle
								);
				// Return
				return bitmap__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_surface)));
				global::System.GC.KeepAlive(surface);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bitmap__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasRenderTarget.CreateDrawingSession, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasDrawingSession__Microsoft_Graphics_Canvas__CanvasDrawingSession *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasDrawingSession Func_Microsoft_Graphics_Canvas_CanvasDrawingSession__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl** unsafe_drawingSession__retval = default(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasDrawingSession drawingSession__retval = default(global::Microsoft.Graphics.Canvas.CanvasDrawingSession);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_drawingSession__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_drawingSession__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				drawingSession__retval = (global::Microsoft.Graphics.Canvas.CanvasDrawingSession)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_drawingSession__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasDrawingSession).TypeHandle
								);
				// Return
				return drawingSession__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_drawingSession__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasVirtualBitmapStatics.LoadAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasVirtualBitmap___Windows_Foundation__IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap> Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__string___IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasVirtualBitmap___(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					string fileName, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::System.Runtime.InteropServices.HSTRING unsafe_fileName = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V___Impl.Vtbl** unsafe_value__retval = default(global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap> value__retval = default(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				fixed (char* pBuffer_fileName = fileName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_fileName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_fileName, fileName, &(hstring_header_fileName), &(unsafe_fileName));
					unsafe_value__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_resourceCreator, 
										unsafe_fileName, 
										&(unsafe_value__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					value__retval = (global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_value__retval), 
										typeof(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>).TypeHandle
									);
				}
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasVirtualBitmapStatics.LoadAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasVirtualBitmapOptions__Microsoft_Graphics_Canvas__CanvasVirtualBitmapOptions, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasVirtualBitmap___Windows_Foundation__IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap> Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__string__int_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasVirtualBitmap___(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					string fileName, 
					int options, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::System.Runtime.InteropServices.HSTRING unsafe_fileName = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V___Impl.Vtbl** unsafe_value__retval = default(global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap> value__retval = default(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				fixed (char* pBuffer_fileName = fileName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_fileName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_fileName, fileName, &(hstring_header_fileName), &(unsafe_fileName));
					unsafe_value__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_resourceCreator, 
										unsafe_fileName, 
										options, 
										&(unsafe_value__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					value__retval = (global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_value__retval), 
										typeof(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>).TypeHandle
									);
				}
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasVirtualBitmapStatics.LoadAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasVirtualBitmapOptions__Microsoft_Graphics_Canvas__CanvasVirtualBitmapOptions, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasAlphaMode__Microsoft_Graphics_Canvas__CanvasAlphaMode, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasVirtualBitmap___Windows_Foundation__IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap> Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__string__intint_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasVirtualBitmap___(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					string fileName, 
					int options, 
					int alpha, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::System.Runtime.InteropServices.HSTRING unsafe_fileName = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V___Impl.Vtbl** unsafe_value__retval = default(global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap> value__retval = default(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				fixed (char* pBuffer_fileName = fileName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_fileName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_fileName, fileName, &(hstring_header_fileName), &(unsafe_fileName));
					unsafe_value__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_resourceCreator, 
										unsafe_fileName, 
										options, 
										alpha, 
										&(unsafe_value__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					value__retval = (global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_value__retval), 
										typeof(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>).TypeHandle
									);
				}
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasVirtualBitmapStatics.LoadAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasVirtualBitmap___Windows_Foundation__IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap> Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Uri___IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasVirtualBitmap___(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::System.Uri uri, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl** unsafe_uri = default(global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V___Impl.Vtbl** unsafe_value__retval = default(global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap> value__retval = default(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				if (uri != null)
					unsafe_uri = (global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**)global::McgInterop.McgHelpers.SystemUri2WindowsFoundationUri(uri);
				else
					unsafe_uri = null;
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_uri, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_uri)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasVirtualBitmapStatics.LoadAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasVirtualBitmapOptions__Microsoft_Graphics_Canvas__CanvasVirtualBitmapOptions, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasVirtualBitmap___Windows_Foundation__IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap> Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Uri__int_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasVirtualBitmap___(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::System.Uri uri, 
					int options, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl** unsafe_uri = default(global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V___Impl.Vtbl** unsafe_value__retval = default(global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap> value__retval = default(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				if (uri != null)
					unsafe_uri = (global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**)global::McgInterop.McgHelpers.SystemUri2WindowsFoundationUri(uri);
				else
					unsafe_uri = null;
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_uri, 
									options, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_uri)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasVirtualBitmapStatics.LoadAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasVirtualBitmapOptions__Microsoft_Graphics_Canvas__CanvasVirtualBitmapOptions, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasAlphaMode__Microsoft_Graphics_Canvas__CanvasAlphaMode, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasVirtualBitmap___Windows_Foundation__IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap> Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Uri__intint_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasVirtualBitmap___(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::System.Uri uri, 
					int options, 
					int alpha, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl** unsafe_uri = default(global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V___Impl.Vtbl** unsafe_value__retval = default(global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap> value__retval = default(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				if (uri != null)
					unsafe_uri = (global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**)global::McgInterop.McgHelpers.SystemUri2WindowsFoundationUri(uri);
				else
					unsafe_uri = null;
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_uri, 
									options, 
									alpha, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_uri)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasVirtualBitmapStatics.LoadAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IRandomAccessStream__Windows_Storage_Streams__IRandomAccessStream *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasVirtualBitmap___Windows_Foundation__IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap> Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Storage_Streams_IRandomAccessStream___IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasVirtualBitmap___(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.Storage.Streams.IRandomAccessStream stream, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl** unsafe_stream = default(global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V___Impl.Vtbl** unsafe_value__retval = default(global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap> value__retval = default(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_stream = (global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									stream, 
									typeof(global::Windows.Storage.Streams.IRandomAccessStream).TypeHandle
								);
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_stream, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_stream)));
				global::System.GC.KeepAlive(stream);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasVirtualBitmapStatics.LoadAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IRandomAccessStream__Windows_Storage_Streams__IRandomAccessStream *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasVirtualBitmapOptions__Microsoft_Graphics_Canvas__CanvasVirtualBitmapOptions, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasVirtualBitmap___Windows_Foundation__IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap> Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Storage_Streams_IRandomAccessStream__int_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasVirtualBitmap___(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.Storage.Streams.IRandomAccessStream stream, 
					int options, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl** unsafe_stream = default(global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V___Impl.Vtbl** unsafe_value__retval = default(global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap> value__retval = default(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_stream = (global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									stream, 
									typeof(global::Windows.Storage.Streams.IRandomAccessStream).TypeHandle
								);
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_stream, 
									options, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_stream)));
				global::System.GC.KeepAlive(stream);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasVirtualBitmapStatics.LoadAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IRandomAccessStream__Windows_Storage_Streams__IRandomAccessStream *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasVirtualBitmapOptions__Microsoft_Graphics_Canvas__CanvasVirtualBitmapOptions, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasAlphaMode__Microsoft_Graphics_Canvas__CanvasAlphaMode, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasVirtualBitmap___Windows_Foundation__IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap> Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__Storage_Streams_IRandomAccessStream__intint_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasVirtualBitmap___(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.Storage.Streams.IRandomAccessStream stream, 
					int options, 
					int alpha, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl** unsafe_stream = default(global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V___Impl.Vtbl** unsafe_value__retval = default(global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap> value__retval = default(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_stream = (global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									stream, 
									typeof(global::Windows.Storage.Streams.IRandomAccessStream).TypeHandle
								);
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_stream, 
									options, 
									alpha, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_stream)));
				global::System.GC.KeepAlive(stream);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<Microsoft.Graphics.Canvas.CanvasVirtualBitmap>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasVirtualBitmap___Windows_Foundation__IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperation_1_Microsoft_Graphics_Canvas_CanvasVirtualBitmap___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperation_A_Microsoft_Graphics_Canvas_CanvasVirtualBitmap_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Microsoft.Graphics.Canvas.CanvasVirtualBitmap>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature___Windows_Foundation_Collections__IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature> Func__Collections_IIterator_1_Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature__Microsoft_Graphics_Canvas_Text__CanvasTypographyFeature, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature Func_Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature__Microsoft_Graphics_Canvas_Text__CanvasTypographyFeature *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature__uint__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature* unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature__Microsoft_Graphics_Canvas_Text__CanvasTypographyFeature items
						items[mcgIdx] = unsafe_items[mcgIdx];
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature__Microsoft_Graphics_Canvas_Text__CanvasTypographyFeature, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature Func_uint__Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature___Windows_Foundation_Collections__IVectorView_A_Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature> Func__IReadOnlyList_1_Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature__Microsoft_Graphics_Canvas_Text__CanvasTypographyFeature, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value, 
								&(unsafe_index), 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval != 0;
			index = unsafe_index;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature__Microsoft_Graphics_Canvas_Text__CanvasTypographyFeature, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature__(
					global::System.__ComObject __this, 
					uint index, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature__Microsoft_Graphics_Canvas_Text__CanvasTypographyFeature *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature* unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature__Microsoft_Graphics_Canvas_Text__CanvasTypographyFeature items
						items[mcgIdx] = unsafe_items[mcgIdx];
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature__Microsoft_Graphics_Canvas_Text__CanvasTypographyFeature *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature* unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature*);
			uint unsafe_items_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items == null)
					unsafe_items = null;
				else
				{
					if (items != null)
						unsafe_items_mcgLength = (uint)items.Length;
					if (items != null)
						unsafe_items = (global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTypographyFeature__Microsoft_Graphics_Canvas_Text__CanvasTypographyFeature items
						unsafe_items[mcgIdx] = items[mcgIdx];
					}
				}
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Microsoft.Graphics.Canvas.Text.CanvasLineMetrics>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Microsoft_Graphics_Canvas_Text_CanvasLineMetrics___Windows_Foundation_Collections__IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasLineMetrics_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics> Func__Collections_IIterator_1_Microsoft_Graphics_Canvas_Text_CanvasLineMetrics___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasLineMetrics_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasLineMetrics_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Text.CanvasLineMetrics>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasLineMetrics__Microsoft_Graphics_Canvas_Text__CanvasLineMetrics, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics Func_Microsoft_Graphics_Canvas_Text_CanvasLineMetrics__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType unsafe___value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType);
			global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics __value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics);
			int unsafe___return__;
			// Marshalling
			unsafe___value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.Marshal__UnsafeToSafe(
								ref unsafe___value__retval, 
								out __value__retval
							);
			// Return
			return __value__retval;
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Text.CanvasLineMetrics>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasLineMetrics__Microsoft_Graphics_Canvas_Text__CanvasLineMetrics *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Microsoft_Graphics_Canvas_Text_CanvasLineMetrics__uint__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType* unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasLineMetrics__Microsoft_Graphics_Canvas_Text__CanvasLineMetrics items
						global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.Marshal__UnsafeToSafe(
											ref unsafe_items[mcgIdx], 
											out items[mcgIdx]
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasLineMetrics>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasLineMetrics__Microsoft_Graphics_Canvas_Text__CanvasLineMetrics, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics Func_uint__Microsoft_Graphics_Canvas_Text_CanvasLineMetrics__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType unsafe___value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType);
			global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics __value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics);
			int unsafe___return__;
			// Marshalling
			unsafe___value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.Marshal__UnsafeToSafe(
								ref unsafe___value__retval, 
								out __value__retval
							);
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasLineMetrics>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Microsoft_Graphics_Canvas_Text_CanvasLineMetrics___Windows_Foundation_Collections__IVectorView_A_Microsoft_Graphics_Canvas_Text_CanvasLineMetrics_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics> Func__IReadOnlyList_1_Microsoft_Graphics_Canvas_Text_CanvasLineMetrics___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Text_CanvasLineMetrics_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Text_CanvasLineMetrics_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasLineMetrics>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasLineMetrics__Microsoft_Graphics_Canvas_Text__CanvasLineMetrics, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Microsoft_Graphics_Canvas_Text_CanvasLineMetrics__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType unsafe_value = default(global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			// Marshalling
			global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.Marshal__SafeToUnsafe(
								ref value, 
								out unsafe_value
							);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								unsafe_value, 
								&(unsafe_index), 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval != 0;
			index = unsafe_index;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasLineMetrics>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasLineMetrics__Microsoft_Graphics_Canvas_Text__CanvasLineMetrics, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Microsoft_Graphics_Canvas_Text_CanvasLineMetrics__(
					global::System.__ComObject __this, 
					uint index, 
					global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType unsafe_value = default(global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType);
			int unsafe___return__;
			// Marshalling
			global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.Marshal__SafeToUnsafe(
								ref value, 
								out unsafe_value
							);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								unsafe_value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasLineMetrics>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasLineMetrics__Microsoft_Graphics_Canvas_Text__CanvasLineMetrics, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Text_CanvasLineMetrics__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType unsafe_value = default(global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType);
			int unsafe___return__;
			// Marshalling
			global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.Marshal__SafeToUnsafe(
								ref value, 
								out unsafe_value
							);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								unsafe_value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasLineMetrics>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasLineMetrics__Microsoft_Graphics_Canvas_Text__CanvasLineMetrics *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Microsoft_Graphics_Canvas_Text_CanvasLineMetrics__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType* unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasLineMetrics__Microsoft_Graphics_Canvas_Text__CanvasLineMetrics items
						global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.Marshal__UnsafeToSafe(
											ref unsafe_items[mcgIdx], 
											out items[mcgIdx]
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasLineMetrics>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasLineMetrics__Microsoft_Graphics_Canvas_Text__CanvasLineMetrics *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Microsoft_Graphics_Canvas_Text_CanvasLineMetrics__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType* unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType*);
			uint unsafe_items_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items == null)
					unsafe_items = null;
				else
				{
					if (items != null)
						unsafe_items_mcgLength = (uint)items.Length;
					if (items != null)
						unsafe_items = (global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasLineMetrics__Microsoft_Graphics_Canvas_Text__CanvasLineMetrics items
						global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.Marshal__SafeToUnsafe(
											ref items[mcgIdx], 
											out unsafe_items[mcgIdx]
										);
					}
				}
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics___Windows_Foundation_Collections__IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics> Func__Collections_IIterator_1_Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics__Microsoft_Graphics_Canvas_Text__CanvasClusterMetrics, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics Func_Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics__Microsoft_Graphics_Canvas_Text__CanvasClusterMetrics *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics__uint__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics* unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics__Microsoft_Graphics_Canvas_Text__CanvasClusterMetrics items
						items[mcgIdx] = unsafe_items[mcgIdx];
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics__Microsoft_Graphics_Canvas_Text__CanvasClusterMetrics, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics Func_uint__Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics___Windows_Foundation_Collections__IVectorView_A_Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics> Func__IReadOnlyList_1_Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics__Microsoft_Graphics_Canvas_Text__CanvasClusterMetrics, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value, 
								&(unsafe_index), 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval != 0;
			index = unsafe_index;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics__Microsoft_Graphics_Canvas_Text__CanvasClusterMetrics, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics__(
					global::System.__ComObject __this, 
					uint index, 
					global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics__Microsoft_Graphics_Canvas_Text__CanvasClusterMetrics, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics__Microsoft_Graphics_Canvas_Text__CanvasClusterMetrics *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics* unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics__Microsoft_Graphics_Canvas_Text__CanvasClusterMetrics items
						items[mcgIdx] = unsafe_items[mcgIdx];
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics__Microsoft_Graphics_Canvas_Text__CanvasClusterMetrics *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics* unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics*);
			uint unsafe_items_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items == null)
					unsafe_items = null;
				else
				{
					if (items != null)
						unsafe_items_mcgLength = (uint)items.Length;
					if (items != null)
						unsafe_items = (global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasClusterMetrics__Microsoft_Graphics_Canvas_Text__CanvasClusterMetrics items
						unsafe_items[mcgIdx] = items[mcgIdx];
					}
				}
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion___Windows_Foundation_Collections__IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion> Func__Collections_IIterator_1_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__Microsoft_Graphics_Canvas_Text__CanvasTextLayoutRegion, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion Func_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__Microsoft_Graphics_Canvas_Text__CanvasTextLayoutRegion *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__uint__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion* unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__Microsoft_Graphics_Canvas_Text__CanvasTextLayoutRegion items
						items[mcgIdx] = unsafe_items[mcgIdx];
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__Microsoft_Graphics_Canvas_Text__CanvasTextLayoutRegion, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion Func_uint__Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion___Windows_Foundation_Collections__IVectorView_A_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion> Func__IReadOnlyList_1_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__Microsoft_Graphics_Canvas_Text__CanvasTextLayoutRegion, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value, 
								&(unsafe_index), 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval != 0;
			index = unsafe_index;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__Microsoft_Graphics_Canvas_Text__CanvasTextLayoutRegion, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__(
					global::System.__ComObject __this, 
					uint index, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__Microsoft_Graphics_Canvas_Text__CanvasTextLayoutRegion, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__Microsoft_Graphics_Canvas_Text__CanvasTextLayoutRegion *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion* unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__Microsoft_Graphics_Canvas_Text__CanvasTextLayoutRegion items
						items[mcgIdx] = unsafe_items[mcgIdx];
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__Microsoft_Graphics_Canvas_Text__CanvasTextLayoutRegion *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion* unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion*);
			uint unsafe_items_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items == null)
					unsafe_items = null;
				else
				{
					if (items != null)
						unsafe_items_mcgLength = (uint)items.Length;
					if (items != null)
						unsafe_items = (global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__Microsoft_Graphics_Canvas_Text__CanvasTextLayoutRegion items
						unsafe_items[mcgIdx] = items[mcgIdx];
					}
				}
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices___Windows_Foundation_Collections__IIterator_A_Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices> Func__Collections_IIterator_1_Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__Microsoft_Graphics_Canvas_Geometry__CanvasTriangleVertices, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices Func_Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__Microsoft_Graphics_Canvas_Geometry__CanvasTriangleVertices *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__uint__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices* unsafe_items = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__Microsoft_Graphics_Canvas_Geometry__CanvasTriangleVertices items
						items[mcgIdx] = unsafe_items[mcgIdx];
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__Microsoft_Graphics_Canvas_Geometry__CanvasTriangleVertices, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices Func_uint__Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices___Windows_Foundation_Collections__IVectorView_A_Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices> Func__IReadOnlyList_1_Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__Microsoft_Graphics_Canvas_Geometry__CanvasTriangleVertices, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value, 
								&(unsafe_index), 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval != 0;
			index = unsafe_index;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__Microsoft_Graphics_Canvas_Geometry__CanvasTriangleVertices, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__(
					global::System.__ComObject __this, 
					uint index, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__Microsoft_Graphics_Canvas_Geometry__CanvasTriangleVertices, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__Microsoft_Graphics_Canvas_Geometry__CanvasTriangleVertices *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices* unsafe_items = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__Microsoft_Graphics_Canvas_Geometry__CanvasTriangleVertices items
						items[mcgIdx] = unsafe_items[mcgIdx];
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__Microsoft_Graphics_Canvas_Geometry__CanvasTriangleVertices *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices* unsafe_items = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices*);
			uint unsafe_items_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items == null)
					unsafe_items = null;
				else
				{
					if (items != null)
						unsafe_items_mcgLength = (uint)items.Length;
					if (items != null)
						unsafe_items = (global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasTriangleVertices__Microsoft_Graphics_Canvas_Geometry__CanvasTriangleVertices items
						unsafe_items[mcgIdx] = items[mcgIdx];
					}
				}
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch___Windows_Foundation_Collections__IIterator_A_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch> Func__Collections_IIterator_1_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__Microsoft_Graphics_Canvas_Geometry__CanvasGradientMeshPatch, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch Func_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__Microsoft_Graphics_Canvas_Geometry__CanvasGradientMeshPatch *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__uint__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch* unsafe_items = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__Microsoft_Graphics_Canvas_Geometry__CanvasGradientMeshPatch items
						items[mcgIdx] = unsafe_items[mcgIdx];
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__Microsoft_Graphics_Canvas_Geometry__CanvasGradientMeshPatch, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch Func_uint__Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch___Windows_Foundation_Collections__IVectorView_A_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch> Func__IReadOnlyList_1_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__Microsoft_Graphics_Canvas_Geometry__CanvasGradientMeshPatch, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value, 
								&(unsafe_index), 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval != 0;
			index = unsafe_index;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__Microsoft_Graphics_Canvas_Geometry__CanvasGradientMeshPatch, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__(
					global::System.__ComObject __this, 
					uint index, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__Microsoft_Graphics_Canvas_Geometry__CanvasGradientMeshPatch, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__Microsoft_Graphics_Canvas_Geometry__CanvasGradientMeshPatch *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch* unsafe_items = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__Microsoft_Graphics_Canvas_Geometry__CanvasGradientMeshPatch items
						items[mcgIdx] = unsafe_items[mcgIdx];
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__Microsoft_Graphics_Canvas_Geometry__CanvasGradientMeshPatch *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch* unsafe_items = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch*);
			uint unsafe_items_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items == null)
					unsafe_items = null;
				else
				{
					if (items != null)
						unsafe_items_mcgLength = (uint)items.Length;
					if (items != null)
						unsafe_items = (global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatch__Microsoft_Graphics_Canvas_Geometry__CanvasGradientMeshPatch items
						unsafe_items[mcgIdx] = items[mcgIdx];
					}
				}
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Microsoft.Graphics.Canvas.Text.CanvasFontFace>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontFace__Microsoft_Graphics_Canvas_Text__CanvasFontFace *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasFontFace Func_uint__Microsoft_Graphics_Canvas_Text_CanvasFontFace__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl** unsafe___value__retval = default(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.CanvasFontFace __value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontFace);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Microsoft.Graphics.Canvas.Text.CanvasFontFace)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Text.CanvasFontFace).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Microsoft.Graphics.Canvas.Text.CanvasFontFace>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontFace__Microsoft_Graphics_Canvas_Text__CanvasFontFace *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Microsoft_Graphics_Canvas_Text_CanvasFontFace__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasFontFace value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl** unsafe_value = default(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Microsoft.Graphics.Canvas.Text.CanvasFontFace>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasFontFace__Microsoft_Graphics_Canvas_Text__CanvasFontFace * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Microsoft_Graphics_Canvas_Text_CanvasFontFace__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasFontFace[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl*** unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontFace__Microsoft_Graphics_Canvas_Text__CanvasFontFace * items
						items[mcgIdx] = (global::Microsoft.Graphics.Canvas.Text.CanvasFontFace)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace).TypeHandle, 
											typeof(global::Microsoft.Graphics.Canvas.Text.CanvasFontFace).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontFace__Microsoft_Graphics_Canvas_Text__CanvasFontFace * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Microsoft.Graphics.Canvas.Text.CanvasFontFace>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Microsoft_Graphics_Canvas_Text_CanvasFontFace___Windows_Foundation_Collections__IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasFontFace_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasFontFace> Func__Collections_IIterator_1_Microsoft_Graphics_Canvas_Text_CanvasFontFace___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasFontFace_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasFontFace_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasFontFace> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasFontFace>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasFontFace>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasFontFace>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Text.CanvasFontFace>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontFace__Microsoft_Graphics_Canvas_Text__CanvasFontFace *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasFontFace Func_Microsoft_Graphics_Canvas_Text_CanvasFontFace__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl** unsafe___value__retval = default(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.CanvasFontFace __value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontFace);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Microsoft.Graphics.Canvas.Text.CanvasFontFace)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Text.CanvasFontFace).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Text.CanvasFontFace>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasFontFace__Microsoft_Graphics_Canvas_Text__CanvasFontFace * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Microsoft_Graphics_Canvas_Text_CanvasFontFace__uint__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasFontFace[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl*** unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontFace__Microsoft_Graphics_Canvas_Text__CanvasFontFace * items
						items[mcgIdx] = (global::Microsoft.Graphics.Canvas.Text.CanvasFontFace)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace).TypeHandle, 
											typeof(global::Microsoft.Graphics.Canvas.Text.CanvasFontFace).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontFace__Microsoft_Graphics_Canvas_Text__CanvasFontFace * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Microsoft.Graphics.Canvas.Text.ICanvasFontFace>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Microsoft_Graphics_Canvas_Text_ICanvasFontFace___Windows_Foundation_Collections__IIterator_A_Microsoft_Graphics_Canvas_Text_ICanvasFontFace_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace> Func__Collections_IIterator_1_Microsoft_Graphics_Canvas_Text_ICanvasFontFace___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Text_ICanvasFontFace_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Text_ICanvasFontFace_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Text.ICanvasFontFace>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Text_ICanvasFontFace__Microsoft_Graphics_Canvas_Text__ICanvasFontFace *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace Func_Microsoft_Graphics_Canvas_Text_ICanvasFontFace__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl** unsafe___value__retval = default(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace __value__retval = default(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Text.ICanvasFontFace>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_ICanvasFontFace__Microsoft_Graphics_Canvas_Text__ICanvasFontFace * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Microsoft_Graphics_Canvas_Text_ICanvasFontFace__uint__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl*** unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Text_ICanvasFontFace__Microsoft_Graphics_Canvas_Text__ICanvasFontFace * items
						items[mcgIdx] = (global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Text_ICanvasFontFace__Microsoft_Graphics_Canvas_Text__ICanvasFontFace * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<System.IDisposable>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_System_IDisposable___Windows_Foundation_Collections__IIterator_A_Windows_Foundation_IClosable_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::System.IDisposable> Func__Collections_IIterator_1_IDisposable___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_System_IDisposable_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_System_IDisposable_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::System.IDisposable> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::System.IDisposable>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::System.IDisposable>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::System.IDisposable>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.IDisposable>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_IDisposable__Windows_Foundation__IClosable *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IDisposable Func_IDisposable__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IDisposable__Impl.Vtbl** unsafe___value__retval = default(global::System.IDisposable__Impl.Vtbl**);
			global::System.IDisposable __value__retval = default(global::System.IDisposable);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.IDisposable)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.IDisposable).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.IDisposable>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_IDisposable__Windows_Foundation__IClosable * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_IDisposable__uint__(
					global::System.__ComObject __this, 
					global::System.IDisposable[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.IDisposable__Impl.Vtbl*** unsafe_items = default(global::System.IDisposable__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.IDisposable__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.IDisposable__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_IDisposable__Windows_Foundation__IClosable * items
						items[mcgIdx] = (global::System.IDisposable)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::System.IDisposable).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_IDisposable__Windows_Foundation__IClosable * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Microsoft.Graphics.Canvas.Text.ICanvasFontFace>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Text_ICanvasFontFace__Microsoft_Graphics_Canvas_Text__ICanvasFontFace *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace Func_uint__Microsoft_Graphics_Canvas_Text_ICanvasFontFace__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl** unsafe___value__retval = default(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace __value__retval = default(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Microsoft.Graphics.Canvas.Text.ICanvasFontFace>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Text_ICanvasFontFace__Microsoft_Graphics_Canvas_Text__ICanvasFontFace *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Microsoft_Graphics_Canvas_Text_ICanvasFontFace__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl** unsafe_value = default(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Microsoft.Graphics.Canvas.Text.ICanvasFontFace>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_ICanvasFontFace__Microsoft_Graphics_Canvas_Text__ICanvasFontFace * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Microsoft_Graphics_Canvas_Text_ICanvasFontFace__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl*** unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Text_ICanvasFontFace__Microsoft_Graphics_Canvas_Text__ICanvasFontFace * items
						items[mcgIdx] = (global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Text_ICanvasFontFace__Microsoft_Graphics_Canvas_Text__ICanvasFontFace * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<System.IDisposable>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_IDisposable__Windows_Foundation__IClosable *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IDisposable Func_uint__IDisposable__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IDisposable__Impl.Vtbl** unsafe___value__retval = default(global::System.IDisposable__Impl.Vtbl**);
			global::System.IDisposable __value__retval = default(global::System.IDisposable);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.IDisposable)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.IDisposable).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<System.IDisposable>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] System_IDisposable__Windows_Foundation__IClosable *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_IDisposable__out_uint__bool__(
					global::System.__ComObject __this, 
					global::System.IDisposable value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IDisposable__Impl.Vtbl** unsafe_value = default(global::System.IDisposable__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::System.IDisposable__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::System.IDisposable).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<System.IDisposable>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_IDisposable__Windows_Foundation__IClosable * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_IDisposable__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::System.IDisposable[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.IDisposable__Impl.Vtbl*** unsafe_items = default(global::System.IDisposable__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.IDisposable__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.IDisposable__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_IDisposable__Windows_Foundation__IClosable * items
						items[mcgIdx] = (global::System.IDisposable)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::System.IDisposable).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_IDisposable__Windows_Foundation__IClosable * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontSetStatics.GetSystemFontSet, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontSet__Microsoft_Graphics_Canvas_Text__CanvasFontSet *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasFontSet Func_Microsoft_Graphics_Canvas_Text_CanvasFontSet__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasFontSet__Impl.Vtbl** unsafe_fontSet__retval = default(global::Microsoft.Graphics.Canvas.Text.ICanvasFontSet__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.CanvasFontSet fontSet__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontSet);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_fontSet__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_fontSet__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				fontSet__retval = (global::Microsoft.Graphics.Canvas.Text.CanvasFontSet)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_fontSet__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontSet).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Text.CanvasFontSet).TypeHandle
								);
				// Return
				return fontSet__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_fontSet__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontSet.TryFindFontFace, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontFace__Microsoft_Graphics_Canvas_Text__CanvasFontFace *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Microsoft_Graphics_Canvas_Text_CanvasFontFace__out_int__bool__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasFontFace fontFace, 
					out int index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl** unsafe_fontFace = default(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**);
			int unsafe_index;
			bool succeeded__retval;
			sbyte unsafe_succeeded__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_fontFace = (global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									fontFace, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_fontFace, 
									&(unsafe_index), 
									&(unsafe_succeeded__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				succeeded__retval = unsafe_succeeded__retval != 0;
				index = unsafe_index;
				// Return
				return succeeded__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_fontFace)));
				global::System.GC.KeepAlive(fontFace);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontSet.get_Fonts, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Microsoft_Graphics_Canvas_Text_CanvasFontFace___Windows_Foundation_Collections__IVectorView_A_Microsoft_Graphics_Canvas_Text_CanvasFontFace_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasFontFace> Func__IReadOnlyList_1_Microsoft_Graphics_Canvas_Text_CanvasFontFace___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Text_CanvasFontFace_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Text_CanvasFontFace_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasFontFace> value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasFontFace>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasFontFace>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasFontFace>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontSet.GetMatchingFonts, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasFontProperty__Microsoft_Graphics_Canvas_Text__CanvasFontProperty *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontSet__Microsoft_Graphics_Canvas_Text__CanvasFontSet *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasFontSet Func_rg_Microsoft_Graphics_Canvas_Text_CanvasFontProperty__Microsoft_Graphics_Canvas_Text_CanvasFontSet__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty[] propertyElements, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType* unsafe_propertyElements = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType*);
			uint unsafe_propertyElements_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Text.ICanvasFontSet__Impl.Vtbl** unsafe_matchingFonts__retval = default(global::Microsoft.Graphics.Canvas.Text.ICanvasFontSet__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.CanvasFontSet matchingFonts__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontSet);
			int unsafe___return__;
			try
			{
				// Marshalling
				if (propertyElements == null)
					unsafe_propertyElements = null;
				else
				{
					if (propertyElements != null)
						unsafe_propertyElements_mcgLength = (uint)propertyElements.Length;
					if (propertyElements != null)
						unsafe_propertyElements = (global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_propertyElements_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_propertyElements_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontProperty__Microsoft_Graphics_Canvas_Text__CanvasFontProperty propertyElements
						global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.Marshal__SafeToUnsafe(
											ref propertyElements[mcgIdx], 
											out unsafe_propertyElements[mcgIdx]
										);
					}
				}
				unsafe_matchingFonts__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_propertyElements_mcgLength, 
									unsafe_propertyElements, 
									&(unsafe_matchingFonts__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				matchingFonts__retval = (global::Microsoft.Graphics.Canvas.Text.CanvasFontSet)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_matchingFonts__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontSet).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Text.CanvasFontSet).TypeHandle
								);
				// Return
				return matchingFonts__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_propertyElements);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_matchingFonts__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontSet.GetMatchingFonts, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Windows_UI_Text_FontWeight__Windows_UI_Text__FontWeight, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Text_FontStretch__Windows_UI_Text__FontStretch, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Text_FontStyle__Windows_UI_Text__FontStyle, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontSet__Microsoft_Graphics_Canvas_Text__CanvasFontSet *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasFontSet Func_string__UI_Text_FontWeight__intintMicrosoft_Graphics_Canvas_Text_CanvasFontSet__(
					global::System.__ComObject __this, 
					string familyName, 
					global::Windows.UI.Text.FontWeight weight, 
					int stretch, 
					int style, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_familyName = default(global::System.Runtime.InteropServices.HSTRING);
			global::Microsoft.Graphics.Canvas.Text.ICanvasFontSet__Impl.Vtbl** unsafe_matchingFonts__retval = default(global::Microsoft.Graphics.Canvas.Text.ICanvasFontSet__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.CanvasFontSet matchingFonts__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontSet);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_familyName = familyName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_familyName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_familyName, familyName, &(hstring_header_familyName), &(unsafe_familyName));
					unsafe_matchingFonts__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_familyName, 
										weight, 
										stretch, 
										style, 
										&(unsafe_matchingFonts__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					matchingFonts__retval = (global::Microsoft.Graphics.Canvas.Text.CanvasFontSet)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_matchingFonts__retval), 
										typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontSet).TypeHandle, 
										typeof(global::Microsoft.Graphics.Canvas.Text.CanvasFontSet).TypeHandle
									);
				}
				// Return
				return matchingFonts__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_matchingFonts__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontSet.CountFontsMatchingProperty, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontProperty__Microsoft_Graphics_Canvas_Text__CanvasFontProperty, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_Microsoft_Graphics_Canvas_Text_CanvasFontProperty__uint__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty property, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType unsafe_property = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType);
			uint unsafe_count__retval;
			uint count__retval;
			int unsafe___return__;
			// Marshalling
			global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.Marshal__SafeToUnsafe(
								ref property, 
								out unsafe_property
							);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								unsafe_property, 
								&(unsafe_count__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			count__retval = unsafe_count__retval;
			// Return
			return count__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontSet.GetPropertyValues, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontPropertyIdentifier__Microsoft_Graphics_Canvas_Text__CanvasFontPropertyIdentifier, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyDictionary_2_string__string___Windows_Foundation_Collections__IMapView_A_string_j_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyDictionary<string, string> Func_uint__int_IReadOnlyDictionary_2_string__string___(
					global::System.__ComObject __this, 
					uint fontIndex, 
					int propertyIdentifier, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyDictionary_A_string_j_string_V___Impl.Vtbl** unsafe_values__retval = default(global::System.Collections.Generic.IReadOnlyDictionary_A_string_j_string_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyDictionary<string, string> values__retval = default(global::System.Collections.Generic.IReadOnlyDictionary<string, string>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_values__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									fontIndex, 
									propertyIdentifier, 
									&(unsafe_values__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				values__retval = (global::System.Collections.Generic.IReadOnlyDictionary<string, string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_values__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyDictionary<string, string>).TypeHandle
								);
				// Return
				return values__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_values__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontSet.GetPropertyValues, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontPropertyIdentifier__Microsoft_Graphics_Canvas_Text__CanvasFontPropertyIdentifier, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasFontProperty__Microsoft_Graphics_Canvas_Text__CanvasFontProperty *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty[] Func_intstring__rg_Microsoft_Graphics_Canvas_Text_CanvasFontProperty__(
					global::System.__ComObject __this, 
					int propertyIdentifier, 
					string preferredLocaleNames, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_preferredLocaleNames = default(global::System.Runtime.InteropServices.HSTRING);
			global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType* unsafe_valueElements__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType*);
			global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty[] valueElements__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty[]);
			uint unsafe_valueElements__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_preferredLocaleNames = preferredLocaleNames)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_preferredLocaleNames;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_preferredLocaleNames, preferredLocaleNames, &(hstring_header_preferredLocaleNames), &(unsafe_preferredLocaleNames));
					unsafe_valueElements__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										propertyIdentifier, 
										unsafe_preferredLocaleNames, 
										&(unsafe_valueElements__retval_mcgLength), 
										&(unsafe_valueElements__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					if (unsafe_valueElements__retval == null)
						valueElements__retval = null;
					else
					{
						valueElements__retval = new global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty[unsafe_valueElements__retval_mcgLength];
						if (valueElements__retval != null)
							for (uint mcgIdx = 0; (mcgIdx < unsafe_valueElements__retval_mcgLength); mcgIdx++)
							{
								// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontProperty__Microsoft_Graphics_Canvas_Text__CanvasFontProperty valueElements__retval
								global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.Marshal__UnsafeToSafe(
													ref unsafe_valueElements__retval[mcgIdx], 
													out valueElements__retval[mcgIdx]
												);
							}
					}
				}
				// Return
				return valueElements__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_valueElements__retval);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasFontSet.GetPropertyValues, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontPropertyIdentifier__Microsoft_Graphics_Canvas_Text__CanvasFontPropertyIdentifier, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasFontProperty__Microsoft_Graphics_Canvas_Text__CanvasFontProperty *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty[] Func_intrg_Microsoft_Graphics_Canvas_Text_CanvasFontProperty__(
					global::System.__ComObject __this, 
					int propertyIdentifier, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType* unsafe_valueElements__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType*);
			global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty[] valueElements__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty[]);
			uint unsafe_valueElements__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_valueElements__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									propertyIdentifier, 
									&(unsafe_valueElements__retval_mcgLength), 
									&(unsafe_valueElements__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_valueElements__retval == null)
					valueElements__retval = null;
				else
				{
					valueElements__retval = new global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty[unsafe_valueElements__retval_mcgLength];
					if (valueElements__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_valueElements__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontProperty__Microsoft_Graphics_Canvas_Text__CanvasFontProperty valueElements__retval
							global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.Marshal__UnsafeToSafe(
												ref unsafe_valueElements__retval[mcgIdx], 
												out valueElements__retval[mcgIdx]
											);
						}
				}
				// Return
				return valueElements__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_valueElements__retval);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Microsoft.Graphics.Canvas.Text.CanvasFontProperty>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Microsoft_Graphics_Canvas_Text_CanvasFontProperty___Windows_Foundation_Collections__IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasFontProperty_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty> Func__Collections_IIterator_1_Microsoft_Graphics_Canvas_Text_CanvasFontProperty___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasFontProperty_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasFontProperty_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Text.CanvasFontProperty>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontProperty__Microsoft_Graphics_Canvas_Text__CanvasFontProperty, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty Func_Microsoft_Graphics_Canvas_Text_CanvasFontProperty__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType unsafe___value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType);
			global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty __value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty);
			int unsafe___return__;
			// Marshalling
			unsafe___value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.Marshal__UnsafeToSafe(
								ref unsafe___value__retval, 
								out __value__retval
							);
			// Return
			return __value__retval;
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Text.CanvasFontProperty>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasFontProperty__Microsoft_Graphics_Canvas_Text__CanvasFontProperty *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Microsoft_Graphics_Canvas_Text_CanvasFontProperty__uint__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType* unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontProperty__Microsoft_Graphics_Canvas_Text__CanvasFontProperty items
						global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.Marshal__UnsafeToSafe(
											ref unsafe_items[mcgIdx], 
											out items[mcgIdx]
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasFontProperty>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontProperty__Microsoft_Graphics_Canvas_Text__CanvasFontProperty, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty Func_uint__Microsoft_Graphics_Canvas_Text_CanvasFontProperty__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType unsafe___value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType);
			global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty __value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty);
			int unsafe___return__;
			// Marshalling
			unsafe___value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.Marshal__UnsafeToSafe(
								ref unsafe___value__retval, 
								out __value__retval
							);
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasFontProperty>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Microsoft_Graphics_Canvas_Text_CanvasFontProperty___Windows_Foundation_Collections__IVectorView_A_Microsoft_Graphics_Canvas_Text_CanvasFontProperty_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty> Func__IReadOnlyList_1_Microsoft_Graphics_Canvas_Text_CanvasFontProperty___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Text_CanvasFontProperty_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Text_CanvasFontProperty_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasFontProperty>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontProperty__Microsoft_Graphics_Canvas_Text__CanvasFontProperty, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Microsoft_Graphics_Canvas_Text_CanvasFontProperty__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType unsafe_value = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			// Marshalling
			global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.Marshal__SafeToUnsafe(
								ref value, 
								out unsafe_value
							);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								unsafe_value, 
								&(unsafe_index), 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval != 0;
			index = unsafe_index;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasFontProperty>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontProperty__Microsoft_Graphics_Canvas_Text__CanvasFontProperty, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Microsoft_Graphics_Canvas_Text_CanvasFontProperty__(
					global::System.__ComObject __this, 
					uint index, 
					global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType unsafe_value = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType);
			int unsafe___return__;
			// Marshalling
			global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.Marshal__SafeToUnsafe(
								ref value, 
								out unsafe_value
							);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								unsafe_value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasFontProperty>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontProperty__Microsoft_Graphics_Canvas_Text__CanvasFontProperty, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Text_CanvasFontProperty__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType unsafe_value = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType);
			int unsafe___return__;
			// Marshalling
			global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.Marshal__SafeToUnsafe(
								ref value, 
								out unsafe_value
							);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								unsafe_value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasFontProperty>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasFontProperty__Microsoft_Graphics_Canvas_Text__CanvasFontProperty *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Microsoft_Graphics_Canvas_Text_CanvasFontProperty__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType* unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontProperty__Microsoft_Graphics_Canvas_Text__CanvasFontProperty items
						global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.Marshal__UnsafeToSafe(
											ref unsafe_items[mcgIdx], 
											out items[mcgIdx]
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasFontProperty>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasFontProperty__Microsoft_Graphics_Canvas_Text__CanvasFontProperty *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Microsoft_Graphics_Canvas_Text_CanvasFontProperty__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType* unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType*);
			uint unsafe_items_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items == null)
					unsafe_items = null;
				else
				{
					if (items != null)
						unsafe_items_mcgLength = (uint)items.Length;
					if (items != null)
						unsafe_items = (global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontProperty__Microsoft_Graphics_Canvas_Text__CanvasFontProperty items
						global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.Marshal__SafeToUnsafe(
											ref items[mcgIdx], 
											out unsafe_items[mcgIdx]
										);
					}
				}
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasNumberSubstitutionFactory.Create, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasNumberSubstitutionMethod__Microsoft_Graphics_Canvas_Text__CanvasNumberSubstitutionMethod, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_intIntPtr__(
					global::System.__ComObject __this, 
					int method, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_canvasNumberSubstitution__retval;
			global::System.IntPtr canvasNumberSubstitution__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								method, 
								&(unsafe_canvasNumberSubstitution__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			canvasNumberSubstitution__retval = unsafe_canvasNumberSubstitution__retval;
			// Return
			return canvasNumberSubstitution__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasNumberSubstitutionFactory.CreateWithLocaleAndIgnoreOverrides, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasNumberSubstitutionMethod__Microsoft_Graphics_Canvas_Text__CanvasNumberSubstitutionMethod, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_intstring__bool__IntPtr__(
					global::System.__ComObject __this, 
					int method, 
					string localeName, 
					bool ignoreEnvironmentOverrides, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_localeName = default(global::System.Runtime.InteropServices.HSTRING);
			sbyte unsafe_ignoreEnvironmentOverrides;
			global::System.IntPtr unsafe_canvasNumberSubstitution__retval;
			global::System.IntPtr canvasNumberSubstitution__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_localeName = localeName)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_localeName;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_localeName, localeName, &(hstring_header_localeName), &(unsafe_localeName));
				unsafe_ignoreEnvironmentOverrides = (ignoreEnvironmentOverrides ? ((sbyte)1) : ((sbyte)0));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									method, 
									unsafe_localeName, 
									unsafe_ignoreEnvironmentOverrides, 
									&(unsafe_canvasNumberSubstitution__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasNumberSubstitution__retval = unsafe_canvasNumberSubstitution__retval;
			}
			// Return
			return canvasNumberSubstitution__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextAnalyzerFactory.Create, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextDirection__Microsoft_Graphics_Canvas_Text__CanvasTextDirection, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_string__intIntPtr__(
					global::System.__ComObject __this, 
					string text, 
					int textDirection, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_text = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.IntPtr unsafe_canvasTextAnalyzer__retval;
			global::System.IntPtr canvasTextAnalyzer__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_text = text)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_text;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_text, text, &(hstring_header_text), &(unsafe_text));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_text, 
									textDirection, 
									&(unsafe_canvasTextAnalyzer__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasTextAnalyzer__retval = unsafe_canvasTextAnalyzer__retval;
			}
			// Return
			return canvasTextAnalyzer__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextAnalyzerFactory.CreateWithNumberSubstitutionAndVerticalGlyphOrientationAndBidiLevel, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextDirection__Microsoft_Graphics_Canvas_Text__CanvasTextDirection, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasNumberSubstitution__Microsoft_Graphics_Canvas_Text__CanvasNumberSubstitution *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasVerticalGlyphOrientation__Microsoft_Graphics_Canvas_Text__CanvasVerticalGlyphOrientation, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_string__intMicrosoft_Graphics_Canvas_Text_CanvasNumberSubstitution__intuint__IntPtr__(
					global::System.__ComObject __this, 
					string text, 
					int textDirection, 
					global::Microsoft.Graphics.Canvas.Text.CanvasNumberSubstitution numberSubstitution, 
					int verticalGlyphOrientation, 
					uint bidiLevel, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_text = default(global::System.Runtime.InteropServices.HSTRING);
			global::Microsoft.Graphics.Canvas.Text.ICanvasNumberSubstitution__Impl.Vtbl** unsafe_numberSubstitution = default(global::Microsoft.Graphics.Canvas.Text.ICanvasNumberSubstitution__Impl.Vtbl**);
			global::System.IntPtr unsafe_canvasTextAnalyzer__retval;
			global::System.IntPtr canvasTextAnalyzer__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_text = text)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_text;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_text, text, &(hstring_header_text), &(unsafe_text));
					unsafe_numberSubstitution = (global::Microsoft.Graphics.Canvas.Text.ICanvasNumberSubstitution__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										numberSubstitution, 
										typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasNumberSubstitution).TypeHandle
									);
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_text, 
										textDirection, 
										unsafe_numberSubstitution, 
										verticalGlyphOrientation, 
										bidiLevel, 
										&(unsafe_canvasTextAnalyzer__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					canvasTextAnalyzer__retval = unsafe_canvasTextAnalyzer__retval;
				}
				// Return
				return canvasTextAnalyzer__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_numberSubstitution)));
				global::System.GC.KeepAlive(numberSubstitution);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextAnalyzerFactory.CreateWithOptions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextDirection__Microsoft_Graphics_Canvas_Text__CanvasTextDirection, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Text_ICanvasTextAnalyzerOptions__Microsoft_Graphics_Canvas_Text__ICanvasTextAnalyzerOptions *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_string__intMicrosoft_Graphics_Canvas_Text_ICanvasTextAnalyzerOptions__IntPtr__(
					global::System.__ComObject __this, 
					string text, 
					int textDirection, 
					global::Microsoft.Graphics.Canvas.Text.ICanvasTextAnalyzerOptions options, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_text = default(global::System.Runtime.InteropServices.HSTRING);
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextAnalyzerOptions__Impl.Vtbl** unsafe_options = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextAnalyzerOptions__Impl.Vtbl**);
			global::System.IntPtr unsafe_canvasTextAnalyzer__retval;
			global::System.IntPtr canvasTextAnalyzer__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_text = text)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_text;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_text, text, &(hstring_header_text), &(unsafe_text));
					unsafe_options = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextAnalyzerOptions__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										options, 
										typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextAnalyzerOptions).TypeHandle
									);
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_text, 
										textDirection, 
										unsafe_options, 
										&(unsafe_canvasTextAnalyzer__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					canvasTextAnalyzer__retval = unsafe_canvasTextAnalyzer__retval;
				}
				// Return
				return canvasTextAnalyzer__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_options)));
				global::System.GC.KeepAlive(options);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextAnalyzer.ChooseFonts, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextFormat__Microsoft_Graphics_Canvas_Text__CanvasTextFormat *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasScaledFont____Windows_Foundation_Collections__IVectorView_A_Windows_Foundation_Collections_IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>> Func_Microsoft_Graphics_Canvas_Text_CanvasTextFormat___IReadOnlyList_1__KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasScaledFont__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextFormat textFormat, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl** unsafe_textFormat = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList_A_System_Collections_Generic_KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V__V___Impl.Vtbl** unsafe_values__retval = default(global::System.Collections.Generic.IReadOnlyList_A_System_Collections_Generic_KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V__V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>> values__retval = default(global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_textFormat = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									textFormat, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat).TypeHandle
								);
				unsafe_values__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_textFormat, 
									&(unsafe_values__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				values__retval = (global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_values__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>>).TypeHandle
								);
				// Return
				return values__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_textFormat)));
				global::System.GC.KeepAlive(textFormat);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_values__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextAnalyzer.ChooseFonts, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextFormat__Microsoft_Graphics_Canvas_Text__CanvasTextFormat *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontSet__Microsoft_Graphics_Canvas_Text__CanvasFontSet *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasScaledFont____Windows_Foundation_Collections__IVectorView_A_Windows_Foundation_Collections_IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>> Func_Microsoft_Graphics_Canvas_Text_CanvasTextFormat__Microsoft_Graphics_Canvas_Text_CanvasFontSet___IReadOnlyList_1__KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasScaledFont__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextFormat textFormat, 
					global::Microsoft.Graphics.Canvas.Text.CanvasFontSet fontSet, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl** unsafe_textFormat = default(global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.ICanvasFontSet__Impl.Vtbl** unsafe_fontSet = default(global::Microsoft.Graphics.Canvas.Text.ICanvasFontSet__Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList_A_System_Collections_Generic_KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V__V___Impl.Vtbl** unsafe_values__retval = default(global::System.Collections.Generic.IReadOnlyList_A_System_Collections_Generic_KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V__V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>> values__retval = default(global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_textFormat = (global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									textFormat, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasTextFormat).TypeHandle
								);
				unsafe_fontSet = (global::Microsoft.Graphics.Canvas.Text.ICanvasFontSet__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									fontSet, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontSet).TypeHandle
								);
				unsafe_values__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_textFormat, 
									unsafe_fontSet, 
									&(unsafe_values__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				values__retval = (global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_values__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>>).TypeHandle
								);
				// Return
				return values__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_textFormat)));
				global::System.GC.KeepAlive(textFormat);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_fontSet)));
				global::System.GC.KeepAlive(fontSet);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_values__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextAnalyzer.AnalyzeScript, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript____Windows_Foundation_Collections__IVectorView_A_Windows_Foundation_Collections_IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>> Func__IReadOnlyList_1__KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_System_Collections_Generic_KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V__V___Impl.Vtbl** unsafe_values__retval = default(global::System.Collections.Generic.IReadOnlyList_A_System_Collections_Generic_KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V__V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>> values__retval = default(global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_values__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_values__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				values__retval = (global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_values__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>>).TypeHandle
								);
				// Return
				return values__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_values__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextAnalyzer.AnalyzeScript, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript____Windows_Foundation_Collections__IVectorView_A_Windows_Foundation_Collections_IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>> Func_string___IReadOnlyList_1__KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript__(
					global::System.__ComObject __this, 
					string locale, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_locale = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Collections.Generic.IReadOnlyList_A_System_Collections_Generic_KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V__V___Impl.Vtbl** unsafe_values__retval = default(global::System.Collections.Generic.IReadOnlyList_A_System_Collections_Generic_KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V__V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>> values__retval = default(global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_locale = locale)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_locale;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_locale, locale, &(hstring_header_locale), &(unsafe_locale));
					unsafe_values__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_locale, 
										&(unsafe_values__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					values__retval = (global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_values__retval), 
										typeof(global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>>).TypeHandle
									);
				}
				// Return
				return values__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_values__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextAnalyzer.GetScriptProperties, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript__Microsoft_Graphics_Canvas_Text__CanvasAnalyzedScript, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasScriptProperties__Microsoft_Graphics_Canvas_Text__CanvasScriptProperties, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasScriptProperties Func_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript__Microsoft_Graphics_Canvas_Text_CanvasScriptProperties__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript analyzedScript, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasScriptProperties__Impl.UnsafeType unsafe_scriptProperties__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasScriptProperties__Impl.UnsafeType);
			global::Microsoft.Graphics.Canvas.Text.CanvasScriptProperties scriptProperties__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasScriptProperties);
			int unsafe___return__;
			// Marshalling
			unsafe_scriptProperties__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasScriptProperties__Impl.UnsafeType);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								analyzedScript, 
								&(unsafe_scriptProperties__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::Microsoft.Graphics.Canvas.Text.CanvasScriptProperties__Impl.Marshal__UnsafeToSafe(
								ref unsafe_scriptProperties__retval, 
								out scriptProperties__retval
							);
			// Return
			return scriptProperties__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextAnalyzer.GetGlyphs, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text__CanvasCharacterRange, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontFace__Microsoft_Graphics_Canvas_Text__CanvasFontFace *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript__Microsoft_Graphics_Canvas_Text__CanvasAnalyzedScript, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasGlyph[] Func_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasFontFace__float__bool__bool__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript__rg_Microsoft_Graphics_Canvas_Text_CanvasGlyph__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange characterRange, 
					global::Microsoft.Graphics.Canvas.Text.CanvasFontFace fontFace, 
					float fontSize, 
					bool isSideways, 
					bool isRightToLeft, 
					global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript script, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl** unsafe_fontFace = default(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**);
			sbyte unsafe_isSideways;
			sbyte unsafe_isRightToLeft;
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyph* unsafe_valueElements__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyph*);
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyph[] valueElements__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyph[]);
			uint unsafe_valueElements__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_fontFace = (global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									fontFace, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace).TypeHandle
								);
				unsafe_isSideways = (isSideways ? ((sbyte)1) : ((sbyte)0));
				unsafe_isRightToLeft = (isRightToLeft ? ((sbyte)1) : ((sbyte)0));
				unsafe_valueElements__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									characterRange, 
									unsafe_fontFace, 
									fontSize, 
									unsafe_isSideways, 
									unsafe_isRightToLeft, 
									script, 
									&(unsafe_valueElements__retval_mcgLength), 
									&(unsafe_valueElements__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_valueElements__retval == null)
					valueElements__retval = null;
				else
				{
					valueElements__retval = new global::Microsoft.Graphics.Canvas.Text.CanvasGlyph[unsafe_valueElements__retval_mcgLength];
					if (valueElements__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_valueElements__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph valueElements__retval
							valueElements__retval[mcgIdx] = unsafe_valueElements__retval[mcgIdx];
						}
				}
				// Return
				return valueElements__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_fontFace)));
				global::System.GC.KeepAlive(fontFace);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_valueElements__retval);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Text.ICanvasTextAnalyzer.GetGlyphs, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text__CanvasCharacterRange, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontFace__Microsoft_Graphics_Canvas_Text__CanvasFontFace *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript__Microsoft_Graphics_Canvas_Text__CanvasAnalyzedScript, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasNumberSubstitution__Microsoft_Graphics_Canvas_Text__CanvasNumberSubstitution *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasTypography____Windows_Foundation_Collections__IVectorView_A_Windows_Foundation_Collections_IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasTypography_V__V_ *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_int__int *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_bool__bool *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasGlyphShaping__Microsoft_Graphics_Canvas_Text__CanvasGlyphShaping *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasGlyph[] Func_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasFontFace__float__bool__bool__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript__string__Microsoft_Graphics_Canvas_Text_CanvasNumberSubstitution___IReadOnlyList_1__KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasTypography__out_rg_int__out_rg_bool__out_rg_Microsoft_Graphics_Canvas_Text_CanvasGlyphShaping__rg_Microsoft_Graphics_Canvas_Text_CanvasGlyph__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange characterRange, 
					global::Microsoft.Graphics.Canvas.Text.CanvasFontFace fontFace, 
					float fontSize, 
					bool isSideways, 
					bool isRightToLeft, 
					global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript script, 
					string locale, 
					global::Microsoft.Graphics.Canvas.Text.CanvasNumberSubstitution numberSubstitution, 
					global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasTypography>> typographyRanges, 
					out int[] clusterMapIndicesElements, 
					out bool[] isShapedAloneGlyphsElements, 
					out global::Microsoft.Graphics.Canvas.Text.CanvasGlyphShaping[] glyphShapingResultsElements, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl** unsafe_fontFace = default(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**);
			sbyte unsafe_isSideways;
			sbyte unsafe_isRightToLeft;
			global::System.Runtime.InteropServices.HSTRING unsafe_locale = default(global::System.Runtime.InteropServices.HSTRING);
			global::Microsoft.Graphics.Canvas.Text.ICanvasNumberSubstitution__Impl.Vtbl** unsafe_numberSubstitution = default(global::Microsoft.Graphics.Canvas.Text.ICanvasNumberSubstitution__Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList_A_System_Collections_Generic_KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasTypography_V__V___Impl.Vtbl** unsafe_typographyRanges = default(global::System.Collections.Generic.IReadOnlyList_A_System_Collections_Generic_KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasTypography_V__V___Impl.Vtbl**);
			int* unsafe_clusterMapIndicesElements = default(int*);
			uint unsafe_clusterMapIndicesElements_mcgLength = 0;
			sbyte* unsafe_isShapedAloneGlyphsElements = default(sbyte*);
			uint unsafe_isShapedAloneGlyphsElements_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyphShaping__Impl.UnsafeType* unsafe_glyphShapingResultsElements = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyphShaping__Impl.UnsafeType*);
			uint unsafe_glyphShapingResultsElements_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyph* unsafe_valueElements__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyph*);
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyph[] valueElements__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyph[]);
			uint unsafe_valueElements__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_fontFace = (global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									fontFace, 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasFontFace).TypeHandle
								);
				unsafe_isSideways = (isSideways ? ((sbyte)1) : ((sbyte)0));
				unsafe_isRightToLeft = (isRightToLeft ? ((sbyte)1) : ((sbyte)0));
				fixed (char* pBuffer_locale = locale)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_locale;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_locale, locale, &(hstring_header_locale), &(unsafe_locale));
					unsafe_numberSubstitution = (global::Microsoft.Graphics.Canvas.Text.ICanvasNumberSubstitution__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										numberSubstitution, 
										typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasNumberSubstitution).TypeHandle
									);
					unsafe_typographyRanges = (global::System.Collections.Generic.IReadOnlyList_A_System_Collections_Generic_KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasTypography_V__V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										typographyRanges, 
										typeof(global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasTypography>>).TypeHandle
									);
					unsafe_clusterMapIndicesElements = null;
					unsafe_isShapedAloneGlyphsElements = null;
					unsafe_glyphShapingResultsElements = null;
					unsafe_valueElements__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										characterRange, 
										unsafe_fontFace, 
										fontSize, 
										unsafe_isSideways, 
										unsafe_isRightToLeft, 
										script, 
										unsafe_locale, 
										unsafe_numberSubstitution, 
										unsafe_typographyRanges, 
										&(unsafe_clusterMapIndicesElements_mcgLength), 
										&(unsafe_clusterMapIndicesElements), 
										&(unsafe_isShapedAloneGlyphsElements_mcgLength), 
										&(unsafe_isShapedAloneGlyphsElements), 
										&(unsafe_glyphShapingResultsElements_mcgLength), 
										&(unsafe_glyphShapingResultsElements), 
										&(unsafe_valueElements__retval_mcgLength), 
										&(unsafe_valueElements__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					if (unsafe_valueElements__retval == null)
						valueElements__retval = null;
					else
					{
						valueElements__retval = new global::Microsoft.Graphics.Canvas.Text.CanvasGlyph[unsafe_valueElements__retval_mcgLength];
						if (valueElements__retval != null)
							for (uint mcgIdx_5 = 0; (mcgIdx_5 < unsafe_valueElements__retval_mcgLength); mcgIdx_5++)
							{
								// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph valueElements__retval
								valueElements__retval[mcgIdx_5] = unsafe_valueElements__retval[mcgIdx_5];
							}
					}
					if (unsafe_glyphShapingResultsElements == null)
						glyphShapingResultsElements = null;
					else
					{
						glyphShapingResultsElements = new global::Microsoft.Graphics.Canvas.Text.CanvasGlyphShaping[unsafe_glyphShapingResultsElements_mcgLength];
						if (glyphShapingResultsElements != null)
							for (uint mcgIdx_3 = 0; (mcgIdx_3 < unsafe_glyphShapingResultsElements_mcgLength); mcgIdx_3++)
							{
								// [fwd] [out] [managedbyref] [nativebyref] [optional] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyphShaping__Microsoft_Graphics_Canvas_Text__CanvasGlyphShaping glyphShapingResultsElements
								global::Microsoft.Graphics.Canvas.Text.CanvasGlyphShaping__Impl.Marshal__UnsafeToSafe(
													ref unsafe_glyphShapingResultsElements[mcgIdx_3], 
													out glyphShapingResultsElements[mcgIdx_3]
												);
							}
					}
					if (unsafe_isShapedAloneGlyphsElements == null)
						isShapedAloneGlyphsElements = null;
					else
					{
						isShapedAloneGlyphsElements = new bool[unsafe_isShapedAloneGlyphsElements_mcgLength];
						if (isShapedAloneGlyphsElements != null)
							for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_isShapedAloneGlyphsElements_mcgLength); mcgIdx_1++)
							{
								// [fwd] [out] [managedbyref] [nativebyref] [optional] [Mcg.CodeGen.CBoolMarshaller] bool__bool isShapedAloneGlyphsElements
								isShapedAloneGlyphsElements[mcgIdx_1] = unsafe_isShapedAloneGlyphsElements[mcgIdx_1] != 0;
							}
					}
					if (unsafe_clusterMapIndicesElements == null)
						clusterMapIndicesElements = null;
					else
					{
						clusterMapIndicesElements = new int[unsafe_clusterMapIndicesElements_mcgLength];
						if (clusterMapIndicesElements != null)
							for (uint mcgIdx = 0; (mcgIdx < unsafe_clusterMapIndicesElements_mcgLength); mcgIdx++)
							{
								// [fwd] [out] [managedbyref] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] int__int clusterMapIndicesElements
								clusterMapIndicesElements[mcgIdx] = unsafe_clusterMapIndicesElements[mcgIdx];
							}
					}
				}
				// Return
				return valueElements__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_fontFace)));
				global::System.GC.KeepAlive(fontFace);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_numberSubstitution)));
				global::System.GC.KeepAlive(numberSubstitution);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_typographyRanges)));
				global::System.GC.KeepAlive(typographyRanges);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_clusterMapIndicesElements);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_isShapedAloneGlyphsElements);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_glyphShapingResultsElements);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_valueElements__retval);
			}
		}

		// Signature, System.Collections.Generic.KeyValuePair<Microsoft.Graphics.Canvas.Text.CanvasCharacterRange,Microsoft.Graphics.Canvas.Text.CanvasScaledFont>.get_Key, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text__CanvasCharacterRange, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange Func_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.KeyValuePair<Microsoft.Graphics.Canvas.Text.CanvasCharacterRange,Microsoft.Graphics.Canvas.Text.CanvasScaledFont>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Text_CanvasScaledFont__Microsoft_Graphics_Canvas_Text__CanvasScaledFont *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont Func_Microsoft_Graphics_Canvas_Text_CanvasScaledFont__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.ICanvasScaledFont__Impl.Vtbl** unsafe___value__retval = default(global::Microsoft.Graphics.Canvas.Text.ICanvasScaledFont__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont __value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Text.ICanvasScaledFont).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<System.Collections.Generic.KeyValuePair<Microsoft.Graphics.Canvas.Text.CanvasCharacterRange,Microsoft.Graphics.Canvas.Text.CanvasScaledFont>>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasScaledFont___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont> Func_uint___KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasScaledFont___(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V___Impl.Vtbl**);
			global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont> __value__retval = default(global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>).TypeHandle
								));
				__value__retval = new global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<System.Collections.Generic.KeyValuePair<Microsoft.Graphics.Canvas.Text.CanvasCharacterRange,Microsoft.Graphics.Canvas.Text.CanvasScaledFont>>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasScaledFont___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V_ *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func__KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasScaledFont___out_uint__bool__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont> value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V___Impl.Vtbl** unsafe_value = default(global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V___Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				global::System.Runtime.InteropServices.WindowsRuntime.CLRIKeyValuePairImpl<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont> pair_unsafe_value = new global::System.Runtime.InteropServices.WindowsRuntime.CLRIKeyValuePairImpl<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>(ref value);
				unsafe_value = (global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ManagedObjectToComInterface(
									pair_unsafe_value, 
									typeof(global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<System.Collections.Generic.KeyValuePair<Microsoft.Graphics.Canvas.Text.CanvasCharacterRange,Microsoft.Graphics.Canvas.Text.CanvasScaledFont>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasScaledFont___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg__KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasScaledFont___uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasScaledFont___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V_ * items
						global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont> pair_items = ((global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>).TypeHandle
										));
						items[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>(pair_items.get_Key(), pair_items.get_Value());
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasScaledFont___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<Microsoft.Graphics.Canvas.Text.CanvasCharacterRange,Microsoft.Graphics.Canvas.Text.CanvasScaledFont>>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasScaledFont____Windows_Foundation_Collections__IIterator_A_Windows_Foundation_Collections_IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>> Func__Collections_IIterator_1__KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasScaledFont__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V__V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V__V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<Microsoft.Graphics.Canvas.Text.CanvasCharacterRange,Microsoft.Graphics.Canvas.Text.CanvasScaledFont>>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasScaledFont___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont> Func__KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasScaledFont___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V___Impl.Vtbl**);
			global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont> __value__retval = default(global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>).TypeHandle
								));
				__value__retval = new global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<Microsoft.Graphics.Canvas.Text.CanvasCharacterRange,Microsoft.Graphics.Canvas.Text.CanvasScaledFont>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasScaledFont___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasScaledFont___uint__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasScaledFont___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V_ * items
						global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont> pair_items = ((global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>).TypeHandle
										));
						items[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>(pair_items.get_Key(), pair_items.get_Value());
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasScaledFont___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.KeyValuePair<Microsoft.Graphics.Canvas.Text.CanvasCharacterRange,Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript__Microsoft_Graphics_Canvas_Text__CanvasAnalyzedScript, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript Func_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IReadOnlyList<System.Collections.Generic.KeyValuePair<Microsoft.Graphics.Canvas.Text.CanvasCharacterRange,Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript> Func_uint___KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript___(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V___Impl.Vtbl**);
			global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript> __value__retval = default(global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>).TypeHandle
								));
				__value__retval = new global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<System.Collections.Generic.KeyValuePair<Microsoft.Graphics.Canvas.Text.CanvasCharacterRange,Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V_ *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func__KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript___out_uint__bool__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript> value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V___Impl.Vtbl** unsafe_value = default(global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V___Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				global::System.Runtime.InteropServices.WindowsRuntime.CLRIKeyValuePairImpl<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript> pair_unsafe_value = new global::System.Runtime.InteropServices.WindowsRuntime.CLRIKeyValuePairImpl<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>(ref value);
				unsafe_value = (global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ManagedObjectToComInterface(
									pair_unsafe_value, 
									typeof(global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<System.Collections.Generic.KeyValuePair<Microsoft.Graphics.Canvas.Text.CanvasCharacterRange,Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg__KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript___uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V_ * items
						global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript> pair_items = ((global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>).TypeHandle
										));
						items[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>(pair_items.get_Key(), pair_items.get_Value());
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<Microsoft.Graphics.Canvas.Text.CanvasCharacterRange,Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript____Windows_Foundation_Collections__IIterator_A_Windows_Foundation_Collections_IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>> Func__Collections_IIterator_1__KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V__V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V__V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<Microsoft.Graphics.Canvas.Text.CanvasCharacterRange,Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript> Func__KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V___Impl.Vtbl**);
			global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript> __value__retval = default(global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>).TypeHandle
								));
				__value__retval = new global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<Microsoft.Graphics.Canvas.Text.CanvasCharacterRange,Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript___uint__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V_ * items
						global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript> pair_items = ((global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>).TypeHandle
										));
						items[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>(pair_items.get_Key(), pair_items.get_Value());
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<Microsoft.Graphics.Canvas.Text.CanvasCharacterRange,Microsoft.Graphics.Canvas.Text.CanvasTypography>>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasTypography___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasTypography_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasTypography> Func__KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasTypography___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasTypography_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasTypography_V___Impl.Vtbl**);
			global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasTypography> __value__retval = default(global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasTypography>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasTypography> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasTypography>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasTypography>).TypeHandle
								));
				__value__retval = new global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasTypography>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<Microsoft.Graphics.Canvas.Text.CanvasCharacterRange,Microsoft.Graphics.Canvas.Text.CanvasTypography>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasTypography___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasTypography_V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasTypography___uint__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasTypography>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasTypography_V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasTypography_V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasTypography_V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasTypography_V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasTypography___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasTypography_V_ * items
						global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasTypography> pair_items = ((global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasTypography>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasTypography>).TypeHandle
										));
						items[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasTypography>(pair_items.get_Key(), pair_items.get_Value());
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasTypography___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasTypography_V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Microsoft.Graphics.Canvas.Text.CanvasGlyph>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Microsoft_Graphics_Canvas_Text_CanvasGlyph___Windows_Foundation_Collections__IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasGlyph_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasGlyph> Func__Collections_IIterator_1_Microsoft_Graphics_Canvas_Text_CanvasGlyph___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasGlyph_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasGlyph_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasGlyph> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasGlyph>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasGlyph>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasGlyph>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Text.CanvasGlyph>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasGlyph Func_Microsoft_Graphics_Canvas_Text_CanvasGlyph__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyph unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyph __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Text.CanvasGlyph>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Microsoft_Graphics_Canvas_Text_CanvasGlyph__uint__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasGlyph[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyph* unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyph*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Text.CanvasGlyph*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasGlyph))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph items
						items[mcgIdx] = unsafe_items[mcgIdx];
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasGlyph>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasGlyph Func_uint__Microsoft_Graphics_Canvas_Text_CanvasGlyph__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyph unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyph __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasGlyph>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Microsoft_Graphics_Canvas_Text_CanvasGlyph___Windows_Foundation_Collections__IVectorView_A_Microsoft_Graphics_Canvas_Text_CanvasGlyph_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasGlyph> Func__IReadOnlyList_1_Microsoft_Graphics_Canvas_Text_CanvasGlyph___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Text_CanvasGlyph_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Text_CanvasGlyph_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasGlyph> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasGlyph>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasGlyph>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasGlyph>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasGlyph>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Microsoft_Graphics_Canvas_Text_CanvasGlyph__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasGlyph value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value, 
								&(unsafe_index), 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval != 0;
			index = unsafe_index;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasGlyph>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Microsoft_Graphics_Canvas_Text_CanvasGlyph__(
					global::System.__ComObject __this, 
					uint index, 
					global::Microsoft.Graphics.Canvas.Text.CanvasGlyph value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasGlyph>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Text_CanvasGlyph__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasGlyph value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasGlyph>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Microsoft_Graphics_Canvas_Text_CanvasGlyph__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasGlyph[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyph* unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyph*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Text.CanvasGlyph*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasGlyph))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph items
						items[mcgIdx] = unsafe_items[mcgIdx];
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasGlyph>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Microsoft_Graphics_Canvas_Text_CanvasGlyph__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasGlyph[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyph* unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyph*);
			uint unsafe_items_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items == null)
					unsafe_items = null;
				else
				{
					if (items != null)
						unsafe_items_mcgLength = (uint)items.Length;
					if (items != null)
						unsafe_items = (global::Microsoft.Graphics.Canvas.Text.CanvasGlyph*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasGlyph))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph items
						unsafe_items[mcgIdx] = items[mcgIdx];
					}
				}
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasImageSourceFactory.CreateWithWidthAndHeightAndDpiAndAlphaMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasAlphaMode__Microsoft_Graphics_Canvas__CanvasAlphaMode, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__float__float__float__intIntPtr__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					float width, 
					float height, 
					float dpi, 
					int alphaMode, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::System.IntPtr unsafe_imageSource__retval;
			global::System.IntPtr imageSource__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									width, 
									height, 
									dpi, 
									alphaMode, 
									&(unsafe_imageSource__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				imageSource__retval = unsafe_imageSource__retval;
				// Return
				return imageSource__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasImageSource.CreateDrawingSession, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasDrawingSession__Microsoft_Graphics_Canvas__CanvasDrawingSession *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasDrawingSession Func_UI_Color__Microsoft_Graphics_Canvas_CanvasDrawingSession__(
					global::System.__ComObject __this, 
					global::Windows.UI.Color clearColor, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl** unsafe_drawingSession__retval = default(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasDrawingSession drawingSession__retval = default(global::Microsoft.Graphics.Canvas.CanvasDrawingSession);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_drawingSession__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									clearColor, 
									&(unsafe_drawingSession__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				drawingSession__retval = (global::Microsoft.Graphics.Canvas.CanvasDrawingSession)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_drawingSession__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasDrawingSession).TypeHandle
								);
				// Return
				return drawingSession__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_drawingSession__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasImageSource.CreateDrawingSession, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasDrawingSession__Microsoft_Graphics_Canvas__CanvasDrawingSession *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasDrawingSession Func_UI_Color___Rect__Microsoft_Graphics_Canvas_CanvasDrawingSession__(
					global::System.__ComObject __this, 
					global::Windows.UI.Color clearColor, 
					global::Windows.Foundation.Rect updateRectangle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl** unsafe_drawingSession__retval = default(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasDrawingSession drawingSession__retval = default(global::Microsoft.Graphics.Canvas.CanvasDrawingSession);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_drawingSession__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									clearColor, 
									updateRectangle, 
									&(unsafe_drawingSession__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				drawingSession__retval = (global::Microsoft.Graphics.Canvas.CanvasDrawingSession)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_drawingSession__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasDrawingSession).TypeHandle
								);
				// Return
				return drawingSession__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_drawingSession__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasImageSource.Recreate, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_ICanvasResourceCreator__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_value = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasSwapChainFactory.CreateWithAllOptions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Graphics_DirectX_DirectXPixelFormat__Windows_Graphics_DirectX__DirectXPixelFormat, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasAlphaMode__Microsoft_Graphics_Canvas__CanvasAlphaMode, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__float__float__float__intint__intIntPtr__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					float width, 
					float height, 
					float dpi, 
					int format, 
					int bufferCount, 
					int alphaMode, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::System.IntPtr unsafe_swapChain__retval;
			global::System.IntPtr swapChain__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									width, 
									height, 
									dpi, 
									format, 
									bufferCount, 
									alphaMode, 
									&(unsafe_swapChain__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				swapChain__retval = unsafe_swapChain__retval;
				// Return
				return swapChain__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasSwapChainStatics.CreateForCoreWindow, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_CoreWindow__Windows_UI_Core__CoreWindow *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasSwapChain__Microsoft_Graphics_Canvas__CanvasSwapChain *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasSwapChain Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__UI_Core_CoreWindow__float__Microsoft_Graphics_Canvas_CanvasSwapChain__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.UI.Core.CoreWindow coreWindow, 
					float dpi, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.UI.Core.ICoreWindow__Impl.Vtbl** unsafe_coreWindow = default(global::Windows.UI.Core.ICoreWindow__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasSwapChain__Impl.Vtbl** unsafe_swapChain__retval = default(global::Microsoft.Graphics.Canvas.ICanvasSwapChain__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasSwapChain swapChain__retval = default(global::Microsoft.Graphics.Canvas.CanvasSwapChain);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_coreWindow = (global::Windows.UI.Core.ICoreWindow__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									coreWindow, 
									typeof(global::Windows.UI.Core.ICoreWindow).TypeHandle
								);
				unsafe_swapChain__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_coreWindow, 
									dpi, 
									&(unsafe_swapChain__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				swapChain__retval = (global::Microsoft.Graphics.Canvas.CanvasSwapChain)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_swapChain__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasSwapChain).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasSwapChain).TypeHandle
								);
				// Return
				return swapChain__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_coreWindow)));
				global::System.GC.KeepAlive(coreWindow);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_swapChain__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasSwapChainStatics.CreateForCoreWindow, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreator__Microsoft_Graphics_Canvas__ICanvasResourceCreator *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_CoreWindow__Windows_UI_Core__CoreWindow *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Graphics_DirectX_DirectXPixelFormat__Windows_Graphics_DirectX__DirectXPixelFormat, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasSwapChain__Microsoft_Graphics_Canvas__CanvasSwapChain *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasSwapChain Func_Microsoft_Graphics_Canvas_ICanvasResourceCreator__UI_Core_CoreWindow__float__float__float__intint__Microsoft_Graphics_Canvas_CanvasSwapChain__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreator resourceCreator, 
					global::Windows.UI.Core.CoreWindow coreWindow, 
					float width, 
					float height, 
					float dpi, 
					int format, 
					int bufferCount, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**);
			global::Windows.UI.Core.ICoreWindow__Impl.Vtbl** unsafe_coreWindow = default(global::Windows.UI.Core.ICoreWindow__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasSwapChain__Impl.Vtbl** unsafe_swapChain__retval = default(global::Microsoft.Graphics.Canvas.ICanvasSwapChain__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasSwapChain swapChain__retval = default(global::Microsoft.Graphics.Canvas.CanvasSwapChain);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreator).TypeHandle
								);
				unsafe_coreWindow = (global::Windows.UI.Core.ICoreWindow__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									coreWindow, 
									typeof(global::Windows.UI.Core.ICoreWindow).TypeHandle
								);
				unsafe_swapChain__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									unsafe_coreWindow, 
									width, 
									height, 
									dpi, 
									format, 
									bufferCount, 
									&(unsafe_swapChain__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				swapChain__retval = (global::Microsoft.Graphics.Canvas.CanvasSwapChain)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_swapChain__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasSwapChain).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasSwapChain).TypeHandle
								);
				// Return
				return swapChain__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_coreWindow)));
				global::System.GC.KeepAlive(coreWindow);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_swapChain__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasSwapChain.ResizeBuffers, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__float__float__(
					global::System.__ComObject __this, 
					float newWidth, 
					float newHeight, 
					float newDpi, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								newWidth, 
								newHeight, 
								newDpi
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasSwapChain.ResizeBuffers, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Graphics_DirectX_DirectXPixelFormat__Windows_Graphics_DirectX__DirectXPixelFormat, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__float__float__intint__(
					global::System.__ComObject __this, 
					float newWidth, 
					float newHeight, 
					float newDpi, 
					int newFormat, 
					int bufferCount, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								newWidth, 
								newHeight, 
								newDpi, 
								newFormat, 
								bufferCount
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.ICanvasSwapChain.get_Rotation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasSwapChainRotation__Microsoft_Graphics_Canvas__CanvasSwapChainRotation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasSwapChainRotation Func_Microsoft_Graphics_Canvas_CanvasSwapChainRotation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.CanvasSwapChainRotation unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.CanvasSwapChainRotation value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocumentFactory.CreateWithDevice, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasDevice__Microsoft_Graphics_Canvas__CanvasDevice *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Microsoft_Graphics_Canvas_CanvasDevice__IntPtr__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasDevice device, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl** unsafe_device = default(global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl**);
			global::System.IntPtr unsafe_value__retval;
			global::System.IntPtr value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_device = (global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									device, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasDevice).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_device, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = unsafe_value__retval;
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_device)));
				global::System.GC.KeepAlive(device);
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument,Microsoft.Graphics.Canvas.Printing.CanvasPrintTaskOptionsChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument__Microsoft_Graphics_Canvas_Printing__CanvasPrintDocument *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Printing_CanvasPrintTaskOptionsChangedEventArgs__Microsoft_Graphics_Canvas_Printing__CanvasPrintTaskOptionsChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument__Microsoft_Graphics_Canvas_Printing_CanvasPrintTaskOptionsChangedEventArgs__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument sender, 
					global::Microsoft.Graphics.Canvas.Printing.CanvasPrintTaskOptionsChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument__Impl.Vtbl** unsafe_sender = default(global::Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Printing.ICanvasPrintTaskOptionsChangedEventArgs__Impl.Vtbl** unsafe_args = default(global::Microsoft.Graphics.Canvas.Printing.ICanvasPrintTaskOptionsChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument).TypeHandle
								);
				unsafe_args = (global::Microsoft.Graphics.Canvas.Printing.ICanvasPrintTaskOptionsChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Microsoft.Graphics.Canvas.Printing.ICanvasPrintTaskOptionsChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument.add_PrintTaskOptionsChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument__Microsoft_Graphics_Canvas_Printing_CanvasPrintTaskOptionsChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPrintTaskOptionsChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument__Microsoft_Graphics_Canvas_Printing_CanvasPrintTaskOptionsChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument, global::Microsoft.Graphics.Canvas.Printing.CanvasPrintTaskOptionsChangedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPrintTaskOptionsChangedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPrintTaskOptionsChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPrintTaskOptionsChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument, global::Microsoft.Graphics.Canvas.Printing.CanvasPrintTaskOptionsChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget27>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPrintTaskOptionsChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument,Microsoft.Graphics.Canvas.Printing.CanvasPreviewEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument__Microsoft_Graphics_Canvas_Printing__CanvasPrintDocument *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Printing_CanvasPreviewEventArgs__Microsoft_Graphics_Canvas_Printing__CanvasPreviewEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument__Microsoft_Graphics_Canvas_Printing_CanvasPreviewEventArgs__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument sender, 
					global::Microsoft.Graphics.Canvas.Printing.CanvasPreviewEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument__Impl.Vtbl** unsafe_sender = default(global::Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Printing.ICanvasPreviewEventArgs__Impl.Vtbl** unsafe_args = default(global::Microsoft.Graphics.Canvas.Printing.ICanvasPreviewEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument).TypeHandle
								);
				unsafe_args = (global::Microsoft.Graphics.Canvas.Printing.ICanvasPreviewEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Microsoft.Graphics.Canvas.Printing.ICanvasPreviewEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument.add_Preview, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument__Microsoft_Graphics_Canvas_Printing_CanvasPreviewEventArgs___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPreviewEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument__Microsoft_Graphics_Canvas_Printing_CanvasPreviewEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument, global::Microsoft.Graphics.Canvas.Printing.CanvasPreviewEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPreviewEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPreviewEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPreviewEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument, global::Microsoft.Graphics.Canvas.Printing.CanvasPreviewEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget28>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPreviewEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument,Microsoft.Graphics.Canvas.Printing.CanvasPrintEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument__Microsoft_Graphics_Canvas_Printing__CanvasPrintDocument *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Printing_CanvasPrintEventArgs__Microsoft_Graphics_Canvas_Printing__CanvasPrintEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument__Microsoft_Graphics_Canvas_Printing_CanvasPrintEventArgs__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument sender, 
					global::Microsoft.Graphics.Canvas.Printing.CanvasPrintEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument__Impl.Vtbl** unsafe_sender = default(global::Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Printing.ICanvasPrintEventArgs__Impl.Vtbl** unsafe_args = default(global::Microsoft.Graphics.Canvas.Printing.ICanvasPrintEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument).TypeHandle
								);
				unsafe_args = (global::Microsoft.Graphics.Canvas.Printing.ICanvasPrintEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Microsoft.Graphics.Canvas.Printing.ICanvasPrintEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument.add_Print, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument__Microsoft_Graphics_Canvas_Printing_CanvasPrintEventArgs___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPrintEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument__Microsoft_Graphics_Canvas_Printing_CanvasPrintEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument, global::Microsoft.Graphics.Canvas.Printing.CanvasPrintEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPrintEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPrintEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPrintEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument, global::Microsoft.Graphics.Canvas.Printing.CanvasPrintEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget29>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPrintEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Printing.ICanvasPrintTaskOptionsChangedEventArgs.GetDeferral, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_Printing_CanvasPrintDeferral__Microsoft_Graphics_Canvas_Printing__CanvasPrintDeferral *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDeferral Func_Microsoft_Graphics_Canvas_Printing_CanvasPrintDeferral__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Printing.ICanvasPrintDeferral__Impl.Vtbl** unsafe_value__retval = default(global::Microsoft.Graphics.Canvas.Printing.ICanvasPrintDeferral__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDeferral value__retval = default(global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDeferral);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDeferral)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Microsoft.Graphics.Canvas.Printing.ICanvasPrintDeferral).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDeferral).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Printing.ICanvasPrintTaskOptionsChangedEventArgs.get_PrintTaskOptions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Graphics_Printing_PrintTaskOptions__Windows_Graphics_Printing__PrintTaskOptions *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Graphics.Printing.PrintTaskOptions Func_Graphics_Printing_PrintTaskOptions__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Graphics.Printing.IPrintTaskOptionsCore__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Graphics.Printing.IPrintTaskOptionsCore__Impl.Vtbl**);
			global::Windows.Graphics.Printing.PrintTaskOptions value__retval = default(global::Windows.Graphics.Printing.PrintTaskOptions);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Graphics.Printing.PrintTaskOptions)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Graphics.Printing.IPrintTaskOptionsCore).TypeHandle, 
									typeof(global::Windows.Graphics.Printing.PrintTaskOptions).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedUpdateEventArgsFactory.Create, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_UI_CanvasTimingInformation__Microsoft_Graphics_Canvas_UI__CanvasTimingInformation, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Microsoft_Graphics_Canvas_UI_CanvasTimingInformation__IntPtr__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.UI.CanvasTimingInformation timingInformation, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.UI.CanvasTimingInformation__Impl.UnsafeType unsafe_timingInformation = default(global::Microsoft.Graphics.Canvas.UI.CanvasTimingInformation__Impl.UnsafeType);
			global::System.IntPtr unsafe_updateEventArgs__retval;
			global::System.IntPtr updateEventArgs__retval;
			int unsafe___return__;
			// Marshalling
			global::Microsoft.Graphics.Canvas.UI.CanvasTimingInformation__Impl.Marshal__SafeToUnsafe(
								ref timingInformation, 
								out unsafe_timingInformation
							);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								unsafe_timingInformation, 
								&(unsafe_updateEventArgs__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			updateEventArgs__retval = unsafe_updateEventArgs__retval;
			// Return
			return updateEventArgs__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedUpdateEventArgs.get_Timing, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_UI_CanvasTimingInformation__Microsoft_Graphics_Canvas_UI__CanvasTimingInformation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.UI.CanvasTimingInformation Func_Microsoft_Graphics_Canvas_UI_CanvasTimingInformation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.UI.CanvasTimingInformation__Impl.UnsafeType unsafe_value__retval = default(global::Microsoft.Graphics.Canvas.UI.CanvasTimingInformation__Impl.UnsafeType);
			global::Microsoft.Graphics.Canvas.UI.CanvasTimingInformation value__retval = default(global::Microsoft.Graphics.Canvas.UI.CanvasTimingInformation);
			int unsafe___return__;
			// Marshalling
			unsafe_value__retval = default(global::Microsoft.Graphics.Canvas.UI.CanvasTimingInformation__Impl.UnsafeType);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::Microsoft.Graphics.Canvas.UI.CanvasTimingInformation__Impl.Marshal__UnsafeToSafe(
								ref unsafe_value__retval, 
								out value__retval
							);
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedDrawEventArgsFactory.Create, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasDrawingSession__Microsoft_Graphics_Canvas__CanvasDrawingSession *, [fwd] [in] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_UI_CanvasTimingInformation__Microsoft_Graphics_Canvas_UI__CanvasTimingInformation, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Microsoft_Graphics_Canvas_CanvasDrawingSession__Microsoft_Graphics_Canvas_UI_CanvasTimingInformation__IntPtr__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasDrawingSession canvasDrawingSession, 
					global::Microsoft.Graphics.Canvas.UI.CanvasTimingInformation timingInformation, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl** unsafe_canvasDrawingSession = default(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.UI.CanvasTimingInformation__Impl.UnsafeType unsafe_timingInformation = default(global::Microsoft.Graphics.Canvas.UI.CanvasTimingInformation__Impl.UnsafeType);
			global::System.IntPtr unsafe_animatedControlDrawEventArgs__retval;
			global::System.IntPtr animatedControlDrawEventArgs__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_canvasDrawingSession = (global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									canvasDrawingSession, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession).TypeHandle
								);
				global::Microsoft.Graphics.Canvas.UI.CanvasTimingInformation__Impl.Marshal__SafeToUnsafe(
									ref timingInformation, 
									out unsafe_timingInformation
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_canvasDrawingSession, 
									unsafe_timingInformation, 
									&(unsafe_animatedControlDrawEventArgs__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				animatedControlDrawEventArgs__retval = unsafe_animatedControlDrawEventArgs__retval;
				// Return
				return animatedControlDrawEventArgs__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasDrawingSession)));
				global::System.GC.KeepAlive(canvasDrawingSession);
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedControl,Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl__Microsoft_Graphics_Canvas_UI_Xaml__CanvasAnimatedControl *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs__Microsoft_Graphics_Canvas_UI__CanvasCreateResourcesEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl__Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedControl sender, 
					global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl__Impl.Vtbl** unsafe_sender = default(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.UI.ICanvasCreateResourcesEventArgs__Impl.Vtbl** unsafe_args = default(global::Microsoft.Graphics.Canvas.UI.ICanvasCreateResourcesEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl).TypeHandle
								);
				unsafe_args = (global::Microsoft.Graphics.Canvas.UI.ICanvasCreateResourcesEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Microsoft.Graphics.Canvas.UI.ICanvasCreateResourcesEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl.add_CreateResources, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl__Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl__Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedControl, global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedControl, global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget30>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl,Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedUpdateEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl__Microsoft_Graphics_Canvas_UI_Xaml__ICanvasAnimatedControl *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedUpdateEventArgs__Microsoft_Graphics_Canvas_UI_Xaml__CanvasAnimatedUpdateEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl__Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedUpdateEventArgs__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl sender, 
					global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedUpdateEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl__Impl.Vtbl** unsafe_sender = default(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedUpdateEventArgs__Impl.Vtbl** unsafe_args = default(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedUpdateEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl).TypeHandle
								);
				unsafe_args = (global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedUpdateEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedUpdateEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl.add_Update, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl__Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedUpdateEventArgs___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedUpdateEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl__Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedUpdateEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedUpdateEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedUpdateEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedUpdateEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedUpdateEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedUpdateEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget31>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedUpdateEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl,Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedDrawEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl__Microsoft_Graphics_Canvas_UI_Xaml__ICanvasAnimatedControl *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedDrawEventArgs__Microsoft_Graphics_Canvas_UI_Xaml__CanvasAnimatedDrawEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl__Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedDrawEventArgs__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl sender, 
					global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedDrawEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl__Impl.Vtbl** unsafe_sender = default(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedDrawEventArgs__Impl.Vtbl** unsafe_args = default(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedDrawEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl).TypeHandle
								);
				unsafe_args = (global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedDrawEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedDrawEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl.add_Draw, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl__Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedDrawEventArgs___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedDrawEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl__Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedDrawEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedDrawEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedDrawEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedDrawEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedDrawEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedDrawEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget32>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedDrawEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl,System.Object>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl__Microsoft_Graphics_Canvas_UI_Xaml__ICanvasAnimatedControl *, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl__object__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl sender, 
					object args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl__Impl.Vtbl** unsafe_sender = default(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl__Impl.Vtbl**);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_args = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl).TypeHandle
								);
				unsafe_args = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(args);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl.add_GameLoopStarting, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl__object___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_object_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl__object__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl, object> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_System_Object_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_System_Object_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_System_Object_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl, object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget33>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_System_Object_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl.put_TargetElapsedTime, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_TimeSpan__Windows_Foundation__TimeSpan, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_TimeSpan__(
					global::System.__ComObject __this, 
					global::System.TimeSpan value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl.get_TargetElapsedTime, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_TimeSpan__Windows_Foundation__TimeSpan, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.TimeSpan Func_TimeSpan__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.TimeSpan unsafe_value__retval;
			global::System.TimeSpan value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl.CreateCoreIndependentInputSource, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Core_CoreInputDeviceTypes__Windows_UI_Core__CoreInputDeviceTypes, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_CoreIndependentInputSource__Windows_UI_Core__CoreIndependentInputSource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Core.CoreIndependentInputSource Func_UI_Core_CoreInputDeviceTypes__UI_Core_CoreIndependentInputSource__(
					global::System.__ComObject __this, 
					global::Windows.UI.Core.CoreInputDeviceTypes deviceTypes, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Core.ICoreInputSourceBase__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Core.ICoreInputSourceBase__Impl.Vtbl**);
			global::Windows.UI.Core.CoreIndependentInputSource returnValue__retval = default(global::Windows.UI.Core.CoreIndependentInputSource);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									deviceTypes, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.UI.Core.CoreIndependentInputSource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.UI.Core.ICoreInputSourceBase).TypeHandle, 
									typeof(global::Windows.UI.Core.CoreIndependentInputSource).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl.RunOnGameLoopThreadAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Core_DispatchedHandler__Windows_UI_Core__DispatchedHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncAction__Windows_Foundation__IAsyncAction *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncAction Func_UI_Core_DispatchedHandler___IAsyncAction__(
					global::System.__ComObject __this, 
					global::Windows.UI.Core.DispatchedHandler agileCallback, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Core.DispatchedHandler__Impl.Vtbl** unsafe_agileCallback = default(global::Windows.UI.Core.DispatchedHandler__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction__Impl.Vtbl** unsafe_asyncAction__retval = default(global::Windows.Foundation.IAsyncAction__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction asyncAction__retval = default(global::Windows.Foundation.IAsyncAction);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_agileCallback = (global::Windows.UI.Core.DispatchedHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									agileCallback, 
									typeof(global::Windows.UI.Core.DispatchedHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget24>(global::Windows.UI.Core.DispatchedHandler__Impl.Invoke)
								);
				unsafe_asyncAction__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_agileCallback, 
									&(unsafe_asyncAction__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				asyncAction__retval = (global::Windows.Foundation.IAsyncAction)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_asyncAction__retval), 
									typeof(global::Windows.Foundation.IAsyncAction).TypeHandle
								);
				// Return
				return asyncAction__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_agileCallback)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncAction__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl.put_CustomDevice, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasDevice__Microsoft_Graphics_Canvas__CanvasDevice *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasDevice__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasDevice value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl** unsafe_value = default(global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasDevice).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.ICanvasCreateResourcesEventArgs.get_Reason, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesReason__Microsoft_Graphics_Canvas_UI__CanvasCreateResourcesReason, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesReason Func_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesReason__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesReason unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesReason value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.UI.ICanvasCreateResourcesEventArgs.TrackAsyncAction, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncAction__Windows_Foundation__IAsyncAction *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncAction__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncAction action, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncAction__Impl.Vtbl** unsafe_action = default(global::Windows.Foundation.IAsyncAction__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_action = (global::Windows.Foundation.IAsyncAction__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									action, 
									typeof(global::Windows.Foundation.IAsyncAction).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_action
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_action)));
				global::System.GC.KeepAlive(action);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.ICanvasCreateResourcesEventArgs.GetTrackedAction, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncAction__Windows_Foundation__IAsyncAction *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncAction Func__IAsyncAction__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncAction__Impl.Vtbl** unsafe_action__retval = default(global::Windows.Foundation.IAsyncAction__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction action__retval = default(global::Windows.Foundation.IAsyncAction);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_action__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_action__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				action__retval = (global::Windows.Foundation.IAsyncAction)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_action__retval), 
									typeof(global::Windows.Foundation.IAsyncAction).TypeHandle
								);
				// Return
				return action__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_action__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasDrawEventArgsFactory.Create, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasDrawingSession__Microsoft_Graphics_Canvas__CanvasDrawingSession *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Microsoft_Graphics_Canvas_CanvasDrawingSession__IntPtr__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasDrawingSession canvasDrawingSession, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl** unsafe_canvasDrawingSession = default(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl**);
			global::System.IntPtr unsafe_drawEventArgs__retval;
			global::System.IntPtr drawEventArgs__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_canvasDrawingSession = (global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									canvasDrawingSession, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_canvasDrawingSession, 
									&(unsafe_drawEventArgs__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				drawEventArgs__retval = unsafe_drawEventArgs__retval;
				// Return
				return drawEventArgs__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasDrawingSession)));
				global::System.GC.KeepAlive(canvasDrawingSession);
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl,Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl__Microsoft_Graphics_Canvas_UI_Xaml__CanvasControl *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs__Microsoft_Graphics_Canvas_UI__CanvasCreateResourcesEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl__Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl sender, 
					global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasControl__Impl.Vtbl** unsafe_sender = default(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasControl__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.UI.ICanvasCreateResourcesEventArgs__Impl.Vtbl** unsafe_args = default(global::Microsoft.Graphics.Canvas.UI.ICanvasCreateResourcesEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasControl__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasControl).TypeHandle
								);
				unsafe_args = (global::Microsoft.Graphics.Canvas.UI.ICanvasCreateResourcesEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Microsoft.Graphics.Canvas.UI.ICanvasCreateResourcesEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasControl.add_CreateResources, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl__Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl__Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl, global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl, global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget34>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl,Microsoft.Graphics.Canvas.UI.Xaml.CanvasDrawEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl__Microsoft_Graphics_Canvas_UI_Xaml__CanvasControl *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_UI_Xaml_CanvasDrawEventArgs__Microsoft_Graphics_Canvas_UI_Xaml__CanvasDrawEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl__Microsoft_Graphics_Canvas_UI_Xaml_CanvasDrawEventArgs__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl sender, 
					global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasDrawEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasControl__Impl.Vtbl** unsafe_sender = default(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasControl__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasDrawEventArgs__Impl.Vtbl** unsafe_args = default(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasDrawEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasControl__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasControl).TypeHandle
								);
				unsafe_args = (global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasDrawEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasDrawEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasControl.add_Draw, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl__Microsoft_Graphics_Canvas_UI_Xaml_CanvasDrawEventArgs___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasDrawEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl__Microsoft_Graphics_Canvas_UI_Xaml_CanvasDrawEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasDrawEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasDrawEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasDrawEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasDrawEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasDrawEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget35>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasDrawEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SwapChainPanel,System.Object>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_SwapChainPanel__Windows_UI_Xaml_Controls__SwapChainPanel *, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_SwapChainPanel__object__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.SwapChainPanel sender, 
					object args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ISwapChainPanel__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.ISwapChainPanel__Impl.Vtbl**);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_args = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.ISwapChainPanel__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.ISwapChainPanel).TypeHandle
								);
				unsafe_args = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(args);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ISwapChainPanel.add_CompositionScaleChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_SwapChainPanel__object___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_SwapChainPanel_j_object_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_SwapChainPanel__object__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SwapChainPanel, object> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SwapChainPanel_j_System_Object_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SwapChainPanel_j_System_Object_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SwapChainPanel_j_System_Object_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SwapChainPanel, object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget36>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SwapChainPanel_j_System_Object_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasSwapChainPanel.put_SwapChain, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasSwapChain__Microsoft_Graphics_Canvas__CanvasSwapChain *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasSwapChain__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasSwapChain value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasSwapChain__Impl.Vtbl** unsafe_value = default(global::Microsoft.Graphics.Canvas.ICanvasSwapChain__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Microsoft.Graphics.Canvas.ICanvasSwapChain__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasSwapChain).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasSwapChainPanel.get_SwapChain, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasSwapChain__Microsoft_Graphics_Canvas__CanvasSwapChain *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasSwapChain Func_Microsoft_Graphics_Canvas_CanvasSwapChain__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasSwapChain__Impl.Vtbl** unsafe_value__retval = default(global::Microsoft.Graphics.Canvas.ICanvasSwapChain__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasSwapChain value__retval = default(global::Microsoft.Graphics.Canvas.CanvasSwapChain);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Microsoft.Graphics.Canvas.CanvasSwapChain)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasSwapChain).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasSwapChain).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasVirtualImageSource.get_Source, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Imaging_VirtualSurfaceImageSource__Windows_UI_Xaml_Media_Imaging__VirtualSurfaceImageSource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Imaging.VirtualSurfaceImageSource Func_UI_Xaml_Media_Imaging_VirtualSurfaceImageSource__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Imaging.IVirtualSurfaceImageSource__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Media.Imaging.IVirtualSurfaceImageSource__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Imaging.VirtualSurfaceImageSource value__retval = default(global::Windows.UI.Xaml.Media.Imaging.VirtualSurfaceImageSource);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Media.Imaging.VirtualSurfaceImageSource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Media.Imaging.IVirtualSurfaceImageSource).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.Imaging.VirtualSurfaceImageSource).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasVirtualImageSource.SuspendDrawingSession, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasDrawingSession__Microsoft_Graphics_Canvas__CanvasDrawingSession *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_CanvasDrawingSession__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.CanvasDrawingSession drawingSession, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl** unsafe_drawingSession = default(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_drawingSession = (global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									drawingSession, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_drawingSession
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_drawingSession)));
				global::System.GC.KeepAlive(drawingSession);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasVirtualImageSource.Invalidate, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Rect__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Rect region, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								region
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualImageSource,Microsoft.Graphics.Canvas.UI.Xaml.CanvasRegionsInvalidatedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualImageSource__Microsoft_Graphics_Canvas_UI_Xaml__CanvasVirtualImageSource *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs__Microsoft_Graphics_Canvas_UI_Xaml__CanvasRegionsInvalidatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualImageSource__Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualImageSource sender, 
					global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasRegionsInvalidatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasVirtualImageSource__Impl.Vtbl** unsafe_sender = default(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasVirtualImageSource__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasRegionsInvalidatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasRegionsInvalidatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasVirtualImageSource__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasVirtualImageSource).TypeHandle
								);
				unsafe_args = (global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasRegionsInvalidatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasRegionsInvalidatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasVirtualImageSource.add_RegionsInvalidated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualImageSource__Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualImageSource_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualImageSource__Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualImageSource, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasRegionsInvalidatedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualImageSource_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualImageSource_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualImageSource_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualImageSource, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasRegionsInvalidatedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget37>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualImageSource_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasRegionsInvalidatedEventArgs.get_InvalidatedRegions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_Foundation_Rect__Windows_Foundation__Rect *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Rect[] Func_rg__Rect__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Rect* unsafe_value__retval = default(global::Windows.Foundation.Rect*);
			global::Windows.Foundation.Rect[] value__retval = default(global::Windows.Foundation.Rect[]);
			uint unsafe_value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval_mcgLength), 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval == null)
					value__retval = null;
				else
				{
					value__retval = new global::Windows.Foundation.Rect[unsafe_value__retval_mcgLength];
					if (value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect value__retval
							value__retval[mcgIdx] = unsafe_value__retval[mcgIdx];
						}
				}
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_value__retval);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Foundation.Rect>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Foundation_Rect___Windows_Foundation_Collections__IIterator_A_Windows_Foundation_Rect_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.Rect> Func__Collections_IIterator_1__Rect___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Foundation_Rect_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Foundation_Rect_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.Rect> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.Rect>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.Rect>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.Rect>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Foundation.Rect>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_Foundation_Rect__Windows_Foundation__Rect *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__Rect__uint__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Rect[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Foundation.Rect* unsafe_items;
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			// Marshalling
			if (items != null)
				unsafe_items_mcgLength = (uint)items.Length;
			fixed (global::Windows.Foundation.Rect* pinned_items = global::McgInterop.McgCoreHelpers.GetArrayForCompat(items))
			{
				unsafe_items = (global::Windows.Foundation.Rect*)pinned_items;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
			}
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Windows.Foundation.Rect>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Rect Func_uint___Rect__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Rect unsafe___value__retval;
			global::Windows.Foundation.Rect __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Windows.Foundation.Rect>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_Foundation_Rect___Windows_Foundation_Collections__IVectorView_A_Windows_Foundation_Rect_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.Foundation.Rect> Func__IReadOnlyList_1__Rect___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_Foundation_Rect_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_Foundation_Rect_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.Foundation.Rect> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.Foundation.Rect>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.Foundation.Rect>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.Foundation.Rect>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.Foundation.Rect>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func__Rect__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Rect value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value, 
								&(unsafe_index), 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval != 0;
			index = unsafe_index;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Windows.Foundation.Rect>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint___Rect__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.Foundation.Rect value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Windows.Foundation.Rect>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_Foundation_Rect__Windows_Foundation__Rect *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg__Rect__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Foundation.Rect[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Foundation.Rect* unsafe_items;
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			// Marshalling
			if (items != null)
				unsafe_items_mcgLength = (uint)items.Length;
			fixed (global::Windows.Foundation.Rect* pinned_items = global::McgInterop.McgCoreHelpers.GetArrayForCompat(items))
			{
				unsafe_items = (global::Windows.Foundation.Rect*)pinned_items;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
			}
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Windows.Foundation.Rect>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_Foundation_Rect__Windows_Foundation__Rect *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg__Rect__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Rect[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Foundation.Rect* unsafe_items;
			int unsafe___return__;
			// Marshalling
			if (items != null)
				unsafe_items_mcgLength = (uint)items.Length;
			fixed (global::Windows.Foundation.Rect* pinned_items = global::McgInterop.McgCoreHelpers.GetArrayForCompat(items))
			{
				unsafe_items = (global::Windows.Foundation.Rect*)pinned_items;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			// Return
		}

		// Signature, Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualControl,Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl__Microsoft_Graphics_Canvas_UI_Xaml__CanvasVirtualControl *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs__Microsoft_Graphics_Canvas_UI__CanvasCreateResourcesEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl__Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualControl sender, 
					global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasVirtualControl__Impl.Vtbl** unsafe_sender = default(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasVirtualControl__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.UI.ICanvasCreateResourcesEventArgs__Impl.Vtbl** unsafe_args = default(global::Microsoft.Graphics.Canvas.UI.ICanvasCreateResourcesEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasVirtualControl__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasVirtualControl).TypeHandle
								);
				unsafe_args = (global::Microsoft.Graphics.Canvas.UI.ICanvasCreateResourcesEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Microsoft.Graphics.Canvas.UI.ICanvasCreateResourcesEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasVirtualControl.add_CreateResources, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl__Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl__Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualControl, global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualControl, global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget38>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualControl,Microsoft.Graphics.Canvas.UI.Xaml.CanvasRegionsInvalidatedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl__Microsoft_Graphics_Canvas_UI_Xaml__CanvasVirtualControl *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs__Microsoft_Graphics_Canvas_UI_Xaml__CanvasRegionsInvalidatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl__Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualControl sender, 
					global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasRegionsInvalidatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasVirtualControl__Impl.Vtbl** unsafe_sender = default(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasVirtualControl__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasRegionsInvalidatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasRegionsInvalidatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasVirtualControl__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasVirtualControl).TypeHandle
								);
				unsafe_args = (global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasRegionsInvalidatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasRegionsInvalidatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasVirtualControl.add_RegionsInvalidated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl__Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl__Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasRegionsInvalidatedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasRegionsInvalidatedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget39>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Xaml.ICanvasVirtualControl.CreateDrawingSession, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasDrawingSession__Microsoft_Graphics_Canvas__CanvasDrawingSession *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasDrawingSession Func__Rect__Microsoft_Graphics_Canvas_CanvasDrawingSession__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Rect updateRectangle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl** unsafe_drawingSession__retval = default(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasDrawingSession drawingSession__retval = default(global::Microsoft.Graphics.Canvas.CanvasDrawingSession);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_drawingSession__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									updateRectangle, 
									&(unsafe_drawingSession__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				drawingSession__retval = (global::Microsoft.Graphics.Canvas.CanvasDrawingSession)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_drawingSession__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasDrawingSession).TypeHandle
								);
				// Return
				return drawingSession__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_drawingSession__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Composition.ICanvasCompositionStatics.CreateCompositionGraphicsDevice, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Composition_Compositor__Windows_UI_Composition__Compositor *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasDevice__Microsoft_Graphics_Canvas__CanvasDevice *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Composition_CompositionGraphicsDevice__Windows_UI_Composition__CompositionGraphicsDevice *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Composition.CompositionGraphicsDevice Func_UI_Composition_Compositor__Microsoft_Graphics_Canvas_CanvasDevice__UI_Composition_CompositionGraphicsDevice__(
					global::System.__ComObject __this, 
					global::Windows.UI.Composition.Compositor compositor, 
					global::Microsoft.Graphics.Canvas.CanvasDevice canvasDevice, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Composition.ICompositor__Impl.Vtbl** unsafe_compositor = default(global::Windows.UI.Composition.ICompositor__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl** unsafe_canvasDevice = default(global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl**);
			global::Windows.UI.Composition.ICompositionGraphicsDevice__Impl.Vtbl** unsafe_graphicsDevice__retval = default(global::Windows.UI.Composition.ICompositionGraphicsDevice__Impl.Vtbl**);
			global::Windows.UI.Composition.CompositionGraphicsDevice graphicsDevice__retval = default(global::Windows.UI.Composition.CompositionGraphicsDevice);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_compositor = (global::Windows.UI.Composition.ICompositor__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									compositor, 
									typeof(global::Windows.UI.Composition.ICompositor).TypeHandle
								);
				unsafe_canvasDevice = (global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									canvasDevice, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasDevice).TypeHandle
								);
				unsafe_graphicsDevice__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_compositor, 
									unsafe_canvasDevice, 
									&(unsafe_graphicsDevice__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				graphicsDevice__retval = (global::Windows.UI.Composition.CompositionGraphicsDevice)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_graphicsDevice__retval), 
									typeof(global::Windows.UI.Composition.ICompositionGraphicsDevice).TypeHandle, 
									typeof(global::Windows.UI.Composition.CompositionGraphicsDevice).TypeHandle
								);
				// Return
				return graphicsDevice__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_compositor)));
				global::System.GC.KeepAlive(compositor);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasDevice)));
				global::System.GC.KeepAlive(canvasDevice);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_graphicsDevice__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Composition.ICanvasCompositionStatics.CreateCompositionSurfaceForSwapChain, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Composition_Compositor__Windows_UI_Composition__Compositor *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasSwapChain__Microsoft_Graphics_Canvas__CanvasSwapChain *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Composition_ICompositionSurface__Windows_UI_Composition__ICompositionSurface *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Composition.ICompositionSurface Func_UI_Composition_Compositor__Microsoft_Graphics_Canvas_CanvasSwapChain__UI_Composition_ICompositionSurface__(
					global::System.__ComObject __this, 
					global::Windows.UI.Composition.Compositor compositor, 
					global::Microsoft.Graphics.Canvas.CanvasSwapChain swapChain, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Composition.ICompositor__Impl.Vtbl** unsafe_compositor = default(global::Windows.UI.Composition.ICompositor__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasSwapChain__Impl.Vtbl** unsafe_swapChain = default(global::Microsoft.Graphics.Canvas.ICanvasSwapChain__Impl.Vtbl**);
			global::Windows.UI.Composition.ICompositionSurface__Impl.Vtbl** unsafe_compositionSurface__retval = default(global::Windows.UI.Composition.ICompositionSurface__Impl.Vtbl**);
			global::Windows.UI.Composition.ICompositionSurface compositionSurface__retval = default(global::Windows.UI.Composition.ICompositionSurface);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_compositor = (global::Windows.UI.Composition.ICompositor__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									compositor, 
									typeof(global::Windows.UI.Composition.ICompositor).TypeHandle
								);
				unsafe_swapChain = (global::Microsoft.Graphics.Canvas.ICanvasSwapChain__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									swapChain, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasSwapChain).TypeHandle
								);
				unsafe_compositionSurface__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_compositor, 
									unsafe_swapChain, 
									&(unsafe_compositionSurface__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				compositionSurface__retval = (global::Windows.UI.Composition.ICompositionSurface)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_compositionSurface__retval), 
									typeof(global::Windows.UI.Composition.ICompositionSurface).TypeHandle
								);
				// Return
				return compositionSurface__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_compositor)));
				global::System.GC.KeepAlive(compositor);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_swapChain)));
				global::System.GC.KeepAlive(swapChain);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_compositionSurface__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Composition.ICanvasCompositionStatics.GetCanvasDevice, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Composition_CompositionGraphicsDevice__Windows_UI_Composition__CompositionGraphicsDevice *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasDevice__Microsoft_Graphics_Canvas__CanvasDevice *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasDevice Func_UI_Composition_CompositionGraphicsDevice__Microsoft_Graphics_Canvas_CanvasDevice__(
					global::System.__ComObject __this, 
					global::Windows.UI.Composition.CompositionGraphicsDevice graphicsDevice, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Composition.ICompositionGraphicsDevice__Impl.Vtbl** unsafe_graphicsDevice = default(global::Windows.UI.Composition.ICompositionGraphicsDevice__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl** unsafe_canvasDevice__retval = default(global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasDevice canvasDevice__retval = default(global::Microsoft.Graphics.Canvas.CanvasDevice);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_graphicsDevice = (global::Windows.UI.Composition.ICompositionGraphicsDevice__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									graphicsDevice, 
									typeof(global::Windows.UI.Composition.ICompositionGraphicsDevice).TypeHandle
								);
				unsafe_canvasDevice__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_graphicsDevice, 
									&(unsafe_canvasDevice__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				canvasDevice__retval = (global::Microsoft.Graphics.Canvas.CanvasDevice)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_canvasDevice__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasDevice).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasDevice).TypeHandle
								);
				// Return
				return canvasDevice__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_graphicsDevice)));
				global::System.GC.KeepAlive(graphicsDevice);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasDevice__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Composition.ICanvasCompositionStatics.SetCanvasDevice, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Composition_CompositionGraphicsDevice__Windows_UI_Composition__CompositionGraphicsDevice *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasDevice__Microsoft_Graphics_Canvas__CanvasDevice *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Composition_CompositionGraphicsDevice__Microsoft_Graphics_Canvas_CanvasDevice__(
					global::System.__ComObject __this, 
					global::Windows.UI.Composition.CompositionGraphicsDevice graphicsDevice, 
					global::Microsoft.Graphics.Canvas.CanvasDevice canvasDevice, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Composition.ICompositionGraphicsDevice__Impl.Vtbl** unsafe_graphicsDevice = default(global::Windows.UI.Composition.ICompositionGraphicsDevice__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl** unsafe_canvasDevice = default(global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_graphicsDevice = (global::Windows.UI.Composition.ICompositionGraphicsDevice__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									graphicsDevice, 
									typeof(global::Windows.UI.Composition.ICompositionGraphicsDevice).TypeHandle
								);
				unsafe_canvasDevice = (global::Microsoft.Graphics.Canvas.ICanvasDevice__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									canvasDevice, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasDevice).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_graphicsDevice, 
									unsafe_canvasDevice
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_graphicsDevice)));
				global::System.GC.KeepAlive(graphicsDevice);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_canvasDevice)));
				global::System.GC.KeepAlive(canvasDevice);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Composition.ICanvasCompositionStatics.CreateDrawingSession, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Composition_CompositionDrawingSurface__Windows_UI_Composition__CompositionDrawingSurface *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasDrawingSession__Microsoft_Graphics_Canvas__CanvasDrawingSession *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasDrawingSession Func_UI_Composition_CompositionDrawingSurface__Microsoft_Graphics_Canvas_CanvasDrawingSession__(
					global::System.__ComObject __this, 
					global::Windows.UI.Composition.CompositionDrawingSurface drawingSurface, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Composition.ICompositionDrawingSurface__Impl.Vtbl** unsafe_drawingSurface = default(global::Windows.UI.Composition.ICompositionDrawingSurface__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl** unsafe_drawingSession__retval = default(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasDrawingSession drawingSession__retval = default(global::Microsoft.Graphics.Canvas.CanvasDrawingSession);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_drawingSurface = (global::Windows.UI.Composition.ICompositionDrawingSurface__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									drawingSurface, 
									typeof(global::Windows.UI.Composition.ICompositionDrawingSurface).TypeHandle
								);
				unsafe_drawingSession__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_drawingSurface, 
									&(unsafe_drawingSession__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				drawingSession__retval = (global::Microsoft.Graphics.Canvas.CanvasDrawingSession)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_drawingSession__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasDrawingSession).TypeHandle
								);
				// Return
				return drawingSession__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_drawingSurface)));
				global::System.GC.KeepAlive(drawingSurface);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_drawingSession__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Composition.ICanvasCompositionStatics.CreateDrawingSession, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Composition_CompositionDrawingSurface__Windows_UI_Composition__CompositionDrawingSurface *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Microsoft_Graphics_Canvas_CanvasDrawingSession__Microsoft_Graphics_Canvas__CanvasDrawingSession *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasDrawingSession Func_UI_Composition_CompositionDrawingSurface___Rect__Microsoft_Graphics_Canvas_CanvasDrawingSession__(
					global::System.__ComObject __this, 
					global::Windows.UI.Composition.CompositionDrawingSurface drawingSurface, 
					global::Windows.Foundation.Rect updateRect, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Composition.ICompositionDrawingSurface__Impl.Vtbl** unsafe_drawingSurface = default(global::Windows.UI.Composition.ICompositionDrawingSurface__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl** unsafe_drawingSession__retval = default(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.CanvasDrawingSession drawingSession__retval = default(global::Microsoft.Graphics.Canvas.CanvasDrawingSession);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_drawingSurface = (global::Windows.UI.Composition.ICompositionDrawingSurface__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									drawingSurface, 
									typeof(global::Windows.UI.Composition.ICompositionDrawingSurface).TypeHandle
								);
				unsafe_drawingSession__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_drawingSurface, 
									updateRect, 
									&(unsafe_drawingSession__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				drawingSession__retval = (global::Microsoft.Graphics.Canvas.CanvasDrawingSession)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_drawingSession__retval), 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasDrawingSession).TypeHandle, 
									typeof(global::Microsoft.Graphics.Canvas.CanvasDrawingSession).TypeHandle
								);
				// Return
				return drawingSession__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_drawingSurface)));
				global::System.GC.KeepAlive(drawingSurface);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_drawingSession__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.UI.Composition.ICanvasCompositionStatics.Resize, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Composition_CompositionDrawingSurface__Windows_UI_Composition__CompositionDrawingSurface *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Size__Windows_Foundation__Size, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Composition_CompositionDrawingSurface___Size__(
					global::System.__ComObject __this, 
					global::Windows.UI.Composition.CompositionDrawingSurface drawingSurface, 
					global::Windows.Foundation.Size sizeInPixels, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Composition.ICompositionDrawingSurface__Impl.Vtbl** unsafe_drawingSurface = default(global::Windows.UI.Composition.ICompositionDrawingSurface__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_drawingSurface = (global::Windows.UI.Composition.ICompositionDrawingSurface__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									drawingSurface, 
									typeof(global::Windows.UI.Composition.ICompositionDrawingSurface).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_drawingSurface, 
									sizeInPixels
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_drawingSurface)));
				global::System.GC.KeepAlive(drawingSurface);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.IPixelShaderEffectFactory.Create, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_rg_byte__IntPtr__(
					global::System.__ComObject __this, 
					byte[] shaderCode, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_shaderCode_mcgLength = 0;
			byte* unsafe_shaderCode;
			global::System.IntPtr unsafe_effect__retval;
			global::System.IntPtr effect__retval;
			int unsafe___return__;
			// Marshalling
			if (shaderCode != null)
				unsafe_shaderCode_mcgLength = (uint)shaderCode.Length;
			fixed (byte* pinned_shaderCode = global::McgInterop.McgCoreHelpers.GetArrayForCompat(shaderCode))
			{
				unsafe_shaderCode = (byte*)pinned_shaderCode;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_shaderCode_mcgLength, 
									unsafe_shaderCode, 
									&(unsafe_effect__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				effect__retval = unsafe_effect__retval;
			}
			// Return
			return effect__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.IPixelShaderEffect.get_Properties, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IDictionary_2_string__object___Windows_Foundation_Collections__IMap_A_string_j_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IDictionary<string, object> Func__IDictionary_2_string__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IDictionary_A_string_j_System_Object_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IDictionary_A_string_j_System_Object_V___Impl.Vtbl**);
			global::System.Collections.Generic.IDictionary<string, object> value__retval = default(global::System.Collections.Generic.IDictionary<string, object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IDictionary<string, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IDictionary<string, object>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.IPixelShaderEffect.get_Source1, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Graphics_Effects_IGraphicsEffectSource__Windows_Graphics_Effects__IGraphicsEffectSource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Graphics.Effects.IGraphicsEffectSource Func_Graphics_Effects_IGraphicsEffectSource__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Graphics.Effects.IGraphicsEffectSource__Impl.Vtbl** unsafe_source__retval = default(global::Windows.Graphics.Effects.IGraphicsEffectSource__Impl.Vtbl**);
			global::Windows.Graphics.Effects.IGraphicsEffectSource source__retval = default(global::Windows.Graphics.Effects.IGraphicsEffectSource);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_source__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_source__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				source__retval = (global::Windows.Graphics.Effects.IGraphicsEffectSource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_source__retval), 
									typeof(global::Windows.Graphics.Effects.IGraphicsEffectSource).TypeHandle
								);
				// Return
				return source__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_source__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.IPixelShaderEffect.put_Source1, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Graphics_Effects_IGraphicsEffectSource__Windows_Graphics_Effects__IGraphicsEffectSource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Graphics_Effects_IGraphicsEffectSource__(
					global::System.__ComObject __this, 
					global::Windows.Graphics.Effects.IGraphicsEffectSource source, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Graphics.Effects.IGraphicsEffectSource__Impl.Vtbl** unsafe_source = default(global::Windows.Graphics.Effects.IGraphicsEffectSource__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_source = (global::Windows.Graphics.Effects.IGraphicsEffectSource__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									source, 
									typeof(global::Windows.Graphics.Effects.IGraphicsEffectSource).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_source
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_source)));
				global::System.GC.KeepAlive(source);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.IPixelShaderEffect.get_Source1Mapping, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Effects_SamplerCoordinateMapping__Microsoft_Graphics_Canvas_Effects__SamplerCoordinateMapping, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Effects.SamplerCoordinateMapping Func_Microsoft_Graphics_Canvas_Effects_SamplerCoordinateMapping__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Effects.SamplerCoordinateMapping unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Effects.SamplerCoordinateMapping value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.IPixelShaderEffect.get_Source1BorderMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Effects_EffectBorderMode__Microsoft_Graphics_Canvas_Effects__EffectBorderMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Effects.EffectBorderMode Func_Microsoft_Graphics_Canvas_Effects_EffectBorderMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Effects.EffectBorderMode unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Effects.EffectBorderMode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.ICanvasEffect.InvalidateSourceRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreatorWithDpi__Microsoft_Graphics_Canvas__ICanvasResourceCreatorWithDpi *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_ICanvasResourceCreatorWithDpi__uint___Rect__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi resourceCreator, 
					uint sourceIndex, 
					global::Windows.Foundation.Rect invalidRectangle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									sourceIndex, 
									invalidRectangle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.ICanvasEffect.GetInvalidRectangles, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreatorWithDpi__Microsoft_Graphics_Canvas__ICanvasResourceCreatorWithDpi *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_Foundation_Rect__Windows_Foundation__Rect *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Rect[] Func_Microsoft_Graphics_Canvas_ICanvasResourceCreatorWithDpi__rg__Rect__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi resourceCreator, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi__Impl.Vtbl**);
			global::Windows.Foundation.Rect* unsafe_valueElements__retval = default(global::Windows.Foundation.Rect*);
			global::Windows.Foundation.Rect[] valueElements__retval = default(global::Windows.Foundation.Rect[]);
			uint unsafe_valueElements__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi).TypeHandle
								);
				unsafe_valueElements__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									&(unsafe_valueElements__retval_mcgLength), 
									&(unsafe_valueElements__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_valueElements__retval == null)
					valueElements__retval = null;
				else
				{
					valueElements__retval = new global::Windows.Foundation.Rect[unsafe_valueElements__retval_mcgLength];
					if (valueElements__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_valueElements__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect valueElements__retval
							valueElements__retval[mcgIdx] = unsafe_valueElements__retval[mcgIdx];
						}
				}
				// Return
				return valueElements__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_valueElements__retval);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.ICanvasEffect.GetRequiredSourceRectangle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreatorWithDpi__Microsoft_Graphics_Canvas__ICanvasResourceCreatorWithDpi *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Effects_ICanvasEffect__Microsoft_Graphics_Canvas_Effects__ICanvasEffect *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Rect Func_Microsoft_Graphics_Canvas_ICanvasResourceCreatorWithDpi___Rect__Microsoft_Graphics_Canvas_Effects_ICanvasEffect__uint___Rect___Rect__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi resourceCreator, 
					global::Windows.Foundation.Rect outputRectangle, 
					global::Microsoft.Graphics.Canvas.Effects.ICanvasEffect sourceEffect, 
					uint sourceIndex, 
					global::Windows.Foundation.Rect sourceBounds, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi__Impl.Vtbl**);
			global::Microsoft.Graphics.Canvas.Effects.ICanvasEffect__Impl.Vtbl** unsafe_sourceEffect = default(global::Microsoft.Graphics.Canvas.Effects.ICanvasEffect__Impl.Vtbl**);
			global::Windows.Foundation.Rect unsafe_value__retval;
			global::Windows.Foundation.Rect value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi).TypeHandle
								);
				unsafe_sourceEffect = (global::Microsoft.Graphics.Canvas.Effects.ICanvasEffect__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sourceEffect, 
									typeof(global::Microsoft.Graphics.Canvas.Effects.ICanvasEffect).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_resourceCreator, 
									outputRectangle, 
									unsafe_sourceEffect, 
									sourceIndex, 
									sourceBounds, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = unsafe_value__retval;
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sourceEffect)));
				global::System.GC.KeepAlive(sourceEffect);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.ICanvasEffect.GetRequiredSourceRectangles, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_ICanvasResourceCreatorWithDpi__Microsoft_Graphics_Canvas__ICanvasResourceCreatorWithDpi *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Effects_ICanvasEffect__Microsoft_Graphics_Canvas_Effects__ICanvasEffect * *, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_uint__unsigned int *, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_Foundation_Rect__Windows_Foundation__Rect *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_Foundation_Rect__Windows_Foundation__Rect *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Rect[] Func_Microsoft_Graphics_Canvas_ICanvasResourceCreatorWithDpi___Rect__rg_Microsoft_Graphics_Canvas_Effects_ICanvasEffect__rg_uint__rg__Rect__rg__Rect__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi resourceCreator, 
					global::Windows.Foundation.Rect outputRectangle, 
					global::Microsoft.Graphics.Canvas.Effects.ICanvasEffect[] sourceEffects, 
					uint[] sourceIndices, 
					global::Windows.Foundation.Rect[] sourceBounds, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi__Impl.Vtbl** unsafe_resourceCreator = default(global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi__Impl.Vtbl**);
			uint unsafe_sourceEffects_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Effects.ICanvasEffect__Impl.Vtbl*** unsafe_sourceEffects = default(global::Microsoft.Graphics.Canvas.Effects.ICanvasEffect__Impl.Vtbl***);
			uint unsafe_sourceIndices_mcgLength = 0;
			uint* unsafe_sourceIndices;
			uint unsafe_sourceBounds_mcgLength = 0;
			global::Windows.Foundation.Rect* unsafe_sourceBounds;
			global::Windows.Foundation.Rect* unsafe_valueElements__retval = default(global::Windows.Foundation.Rect*);
			global::Windows.Foundation.Rect[] valueElements__retval = default(global::Windows.Foundation.Rect[]);
			uint unsafe_valueElements__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_resourceCreator = (global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									resourceCreator, 
									typeof(global::Microsoft.Graphics.Canvas.ICanvasResourceCreatorWithDpi).TypeHandle
								);
				unsafe_sourceEffects = (global::Microsoft.Graphics.Canvas.Effects.ICanvasEffect__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									sourceEffects, 
									typeof(global::Microsoft.Graphics.Canvas.Effects.ICanvasEffect).TypeHandle, 
									out unsafe_sourceEffects_mcgLength
								);
				if (sourceIndices != null)
					unsafe_sourceIndices_mcgLength = (uint)sourceIndices.Length;
				fixed (uint* pinned_sourceIndices = global::McgInterop.McgCoreHelpers.GetArrayForCompat(sourceIndices))
				{
					unsafe_sourceIndices = (uint*)pinned_sourceIndices;
					if (sourceBounds != null)
						unsafe_sourceBounds_mcgLength = (uint)sourceBounds.Length;
					fixed (global::Windows.Foundation.Rect* pinned_sourceBounds = global::McgInterop.McgCoreHelpers.GetArrayForCompat(sourceBounds))
					{
						unsafe_sourceBounds = (global::Windows.Foundation.Rect*)pinned_sourceBounds;
						unsafe_valueElements__retval = null;
						// Call to native method
						unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
											__this, 
											__typeHnd, 
											__targetIndex, 
											unsafe_resourceCreator, 
											outputRectangle, 
											unsafe_sourceEffects_mcgLength, 
											unsafe_sourceEffects, 
											unsafe_sourceIndices_mcgLength, 
											unsafe_sourceIndices, 
											unsafe_sourceBounds_mcgLength, 
											unsafe_sourceBounds, 
											&(unsafe_valueElements__retval_mcgLength), 
											&(unsafe_valueElements__retval)
										);
						global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
						if (unsafe_valueElements__retval == null)
							valueElements__retval = null;
						else
						{
							valueElements__retval = new global::Windows.Foundation.Rect[unsafe_valueElements__retval_mcgLength];
							if (valueElements__retval != null)
								for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_valueElements__retval_mcgLength); mcgIdx_1++)
								{
									// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect valueElements__retval
									valueElements__retval[mcgIdx_1] = unsafe_valueElements__retval[mcgIdx_1];
								}
						}
					}
				}
				// Return
				return valueElements__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceCreator)));
				global::System.GC.KeepAlive(resourceCreator);
				if (unsafe_sourceEffects != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_sourceEffects_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Microsoft_Graphics_Canvas_Effects_ICanvasEffect__Microsoft_Graphics_Canvas_Effects__ICanvasEffect * sourceEffects
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sourceEffects[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_sourceEffects);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_valueElements__retval);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.IBlendEffect.get_Mode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Effects_BlendEffectMode__Microsoft_Graphics_Canvas_Effects__BlendEffectMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Effects.BlendEffectMode Func_Microsoft_Graphics_Canvas_Effects_BlendEffectMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Effects.BlendEffectMode unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Effects.BlendEffectMode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.IColorMatrixEffect.get_ColorMatrix, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Effects_Matrix5x4__Microsoft_Graphics_Canvas_Effects__Matrix5x4, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Effects.Matrix5x4 Func_Microsoft_Graphics_Canvas_Effects_Matrix5x4__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Effects.Matrix5x4 unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Effects.Matrix5x4 value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.IColorMatrixEffect.put_ColorMatrix, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Effects_Matrix5x4__Microsoft_Graphics_Canvas_Effects__Matrix5x4, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Effects_Matrix5x4__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Effects.Matrix5x4 value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Windows.Graphics.Effects.IGraphicsEffectSource>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Graphics_Effects_IGraphicsEffectSource__Windows_Graphics_Effects__IGraphicsEffectSource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Graphics.Effects.IGraphicsEffectSource Func_uint__Graphics_Effects_IGraphicsEffectSource__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Graphics.Effects.IGraphicsEffectSource__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Graphics.Effects.IGraphicsEffectSource__Impl.Vtbl**);
			global::Windows.Graphics.Effects.IGraphicsEffectSource __value__retval = default(global::Windows.Graphics.Effects.IGraphicsEffectSource);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Graphics.Effects.IGraphicsEffectSource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Graphics.Effects.IGraphicsEffectSource).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.Graphics.Effects.IGraphicsEffectSource>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_Graphics_Effects_IGraphicsEffectSource___Windows_Foundation_Collections__IVectorView_A_Windows_Graphics_Effects_IGraphicsEffectSource_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.Graphics.Effects.IGraphicsEffectSource> Func__IReadOnlyList_1_Graphics_Effects_IGraphicsEffectSource___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_Graphics_Effects_IGraphicsEffectSource_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_Graphics_Effects_IGraphicsEffectSource_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.Graphics.Effects.IGraphicsEffectSource> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.Graphics.Effects.IGraphicsEffectSource>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.Graphics.Effects.IGraphicsEffectSource>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.Graphics.Effects.IGraphicsEffectSource>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.Graphics.Effects.IGraphicsEffectSource>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Graphics_Effects_IGraphicsEffectSource__Windows_Graphics_Effects__IGraphicsEffectSource *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Graphics_Effects_IGraphicsEffectSource__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.Graphics.Effects.IGraphicsEffectSource value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Graphics.Effects.IGraphicsEffectSource__Impl.Vtbl** unsafe_value = default(global::Windows.Graphics.Effects.IGraphicsEffectSource__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Graphics.Effects.IGraphicsEffectSource__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Graphics.Effects.IGraphicsEffectSource).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.Graphics.Effects.IGraphicsEffectSource>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Graphics_Effects_IGraphicsEffectSource__Windows_Graphics_Effects__IGraphicsEffectSource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Graphics_Effects_IGraphicsEffectSource__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.Graphics.Effects.IGraphicsEffectSource value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Graphics.Effects.IGraphicsEffectSource__Impl.Vtbl** unsafe_value = default(global::Windows.Graphics.Effects.IGraphicsEffectSource__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Graphics.Effects.IGraphicsEffectSource__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Graphics.Effects.IGraphicsEffectSource).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.Graphics.Effects.IGraphicsEffectSource>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Graphics_Effects_IGraphicsEffectSource__Windows_Graphics_Effects__IGraphicsEffectSource * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Graphics_Effects_IGraphicsEffectSource__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Graphics.Effects.IGraphicsEffectSource[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Graphics.Effects.IGraphicsEffectSource__Impl.Vtbl*** unsafe_items = default(global::Windows.Graphics.Effects.IGraphicsEffectSource__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Graphics.Effects.IGraphicsEffectSource__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Graphics.Effects.IGraphicsEffectSource__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Graphics_Effects_IGraphicsEffectSource__Windows_Graphics_Effects__IGraphicsEffectSource * items
						items[mcgIdx] = (global::Windows.Graphics.Effects.IGraphicsEffectSource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Graphics.Effects.IGraphicsEffectSource).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Graphics_Effects_IGraphicsEffectSource__Windows_Graphics_Effects__IGraphicsEffectSource * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.Graphics.Effects.IGraphicsEffectSource>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Graphics_Effects_IGraphicsEffectSource__Windows_Graphics_Effects__IGraphicsEffectSource * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Graphics_Effects_IGraphicsEffectSource__(
					global::System.__ComObject __this, 
					global::Windows.Graphics.Effects.IGraphicsEffectSource[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Graphics.Effects.IGraphicsEffectSource__Impl.Vtbl*** unsafe_items = default(global::Windows.Graphics.Effects.IGraphicsEffectSource__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.Graphics.Effects.IGraphicsEffectSource__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.Graphics.Effects.IGraphicsEffectSource).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Graphics_Effects_IGraphicsEffectSource__Windows_Graphics_Effects__IGraphicsEffectSource * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Graphics.Effects.IGraphicsEffectSource>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Graphics_Effects_IGraphicsEffectSource___Windows_Foundation_Collections__IIterator_A_Windows_Graphics_Effects_IGraphicsEffectSource_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Graphics.Effects.IGraphicsEffectSource> Func__Collections_IIterator_1_Graphics_Effects_IGraphicsEffectSource___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Graphics_Effects_IGraphicsEffectSource_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Graphics_Effects_IGraphicsEffectSource_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Graphics.Effects.IGraphicsEffectSource> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Graphics.Effects.IGraphicsEffectSource>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Graphics.Effects.IGraphicsEffectSource>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Graphics.Effects.IGraphicsEffectSource>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Graphics.Effects.IGraphicsEffectSource>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Graphics_Effects_IGraphicsEffectSource__Windows_Graphics_Effects__IGraphicsEffectSource * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Graphics_Effects_IGraphicsEffectSource__uint__(
					global::System.__ComObject __this, 
					global::Windows.Graphics.Effects.IGraphicsEffectSource[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Graphics.Effects.IGraphicsEffectSource__Impl.Vtbl*** unsafe_items = default(global::Windows.Graphics.Effects.IGraphicsEffectSource__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Graphics.Effects.IGraphicsEffectSource__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Graphics.Effects.IGraphicsEffectSource__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Graphics_Effects_IGraphicsEffectSource__Windows_Graphics_Effects__IGraphicsEffectSource * items
						items[mcgIdx] = (global::Windows.Graphics.Effects.IGraphicsEffectSource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Graphics.Effects.IGraphicsEffectSource).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Graphics_Effects_IGraphicsEffectSource__Windows_Graphics_Effects__IGraphicsEffectSource * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.ICompositeEffect.get_Mode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasComposite__Microsoft_Graphics_Canvas__CanvasComposite, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasComposite Func_Microsoft_Graphics_Canvas_CanvasComposite__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.CanvasComposite unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.CanvasComposite value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.ICompositeEffect.get_Sources, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IList_1_Windows_Graphics_Effects_IGraphicsEffectSource___Windows_Foundation_Collections__IVector_A_Windows_Graphics_Effects_IGraphicsEffectSource_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IList<global::Windows.Graphics.Effects.IGraphicsEffectSource> Func__IList_1_Graphics_Effects_IGraphicsEffectSource___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_Graphics_Effects_IGraphicsEffectSource_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_Windows_Graphics_Effects_IGraphicsEffectSource_V___Impl.Vtbl**);
			global::System.Collections.Generic.IList<global::Windows.Graphics.Effects.IGraphicsEffectSource> value__retval = default(global::System.Collections.Generic.IList<global::Windows.Graphics.Effects.IGraphicsEffectSource>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IList<global::Windows.Graphics.Effects.IGraphicsEffectSource>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.Graphics.Effects.IGraphicsEffectSource>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.IDirectionalBlurEffect.get_Optimization, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Effects_EffectOptimization__Microsoft_Graphics_Canvas_Effects__EffectOptimization, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Effects.EffectOptimization Func_Microsoft_Graphics_Canvas_Effects_EffectOptimization__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Effects.EffectOptimization unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Effects.EffectOptimization value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.IDisplacementMapEffect.get_XChannelSelect, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Effects_EffectChannelSelect__Microsoft_Graphics_Canvas_Effects__EffectChannelSelect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Effects.EffectChannelSelect Func_Microsoft_Graphics_Canvas_Effects_EffectChannelSelect__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Effects.EffectChannelSelect unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Effects.EffectChannelSelect value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.IEdgeDetectionEffect.get_Mode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Effects_EdgeDetectionEffectMode__Microsoft_Graphics_Canvas_Effects__EdgeDetectionEffectMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Effects.EdgeDetectionEffectMode Func_Microsoft_Graphics_Canvas_Effects_EdgeDetectionEffectMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Effects.EdgeDetectionEffectMode unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Effects.EdgeDetectionEffectMode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.IHueToRgbEffect.get_SourceColorSpace, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Effects_EffectHueColorSpace__Microsoft_Graphics_Canvas_Effects__EffectHueColorSpace, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Effects.EffectHueColorSpace Func_Microsoft_Graphics_Canvas_Effects_EffectHueColorSpace__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Effects.EffectHueColorSpace unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Effects.EffectHueColorSpace value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.IMorphologyEffect.get_Mode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Effects_MorphologyEffectMode__Microsoft_Graphics_Canvas_Effects__MorphologyEffectMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Effects.MorphologyEffectMode Func_Microsoft_Graphics_Canvas_Effects_MorphologyEffectMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Effects.MorphologyEffectMode unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Effects.MorphologyEffectMode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.IPointDiffuseEffect.get_LightPosition, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector3__Windows_Foundation_Numerics__Vector3, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Vector3 Func_Numerics_Vector3__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Vector3 unsafe_value__retval;
			global::System.Numerics.Vector3 value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.IPointDiffuseEffect.put_LightPosition, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector3__Windows_Foundation_Numerics__Vector3, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Vector3__(
					global::System.__ComObject __this, 
					global::System.Numerics.Vector3 value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.ITransform3DEffect.get_TransformMatrix, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix4x4__Windows_Foundation_Numerics__Matrix4x4, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Matrix4x4 Func_Numerics_Matrix4x4__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Matrix4x4 unsafe_value__retval;
			global::System.Numerics.Matrix4x4 value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.ITransform3DEffect.put_TransformMatrix, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix4x4__Windows_Foundation_Numerics__Matrix4x4, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Numerics_Matrix4x4__(
					global::System.__ComObject __this, 
					global::System.Numerics.Matrix4x4 value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Microsoft.Graphics.Canvas.Effects.ITurbulenceEffect.get_Noise, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Effects_TurbulenceEffectNoise__Microsoft_Graphics_Canvas_Effects__TurbulenceEffectNoise, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Effects.TurbulenceEffectNoise Func_Microsoft_Graphics_Canvas_Effects_TurbulenceEffectNoise__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Effects.TurbulenceEffectNoise unsafe_value__retval;
			global::Microsoft.Graphics.Canvas.Effects.TurbulenceEffectNoise value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, System.Collections.Generic.IEnumerable<Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange___Windows_Foundation_Collections__IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange> Func__Collections_IIterator_1_Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange__Microsoft_Graphics_Canvas_Text__CanvasUnicodeRange, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange Func_Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange__Microsoft_Graphics_Canvas_Text__CanvasUnicodeRange *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange__uint__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange* unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange__Microsoft_Graphics_Canvas_Text__CanvasUnicodeRange items
						items[mcgIdx] = unsafe_items[mcgIdx];
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange__Microsoft_Graphics_Canvas_Text__CanvasUnicodeRange, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange Func_uint__Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange___Windows_Foundation_Collections__IVectorView_A_Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange> Func__IReadOnlyList_1_Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange__Microsoft_Graphics_Canvas_Text__CanvasUnicodeRange, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value, 
								&(unsafe_index), 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval != 0;
			index = unsafe_index;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange__Microsoft_Graphics_Canvas_Text__CanvasUnicodeRange, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange__(
					global::System.__ComObject __this, 
					uint index, 
					global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange__Microsoft_Graphics_Canvas_Text__CanvasUnicodeRange, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange__Microsoft_Graphics_Canvas_Text__CanvasUnicodeRange *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange* unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange__Microsoft_Graphics_Canvas_Text__CanvasUnicodeRange items
						items[mcgIdx] = unsafe_items[mcgIdx];
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange__Microsoft_Graphics_Canvas_Text__CanvasUnicodeRange *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange* unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange*);
			uint unsafe_items_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items == null)
					unsafe_items = null;
				else
				{
					if (items != null)
						unsafe_items_mcgLength = (uint)items.Length;
					if (items != null)
						unsafe_items = (global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasUnicodeRange__Microsoft_Graphics_Canvas_Text__CanvasUnicodeRange items
						unsafe_items[mcgIdx] = items[mcgIdx];
					}
				}
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics___Windows_Foundation_Collections__IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics> Func__Collections_IIterator_1_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__Microsoft_Graphics_Canvas_Text__CanvasGlyphMetrics, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics Func_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Foundation.Collections.IIterator<Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__Microsoft_Graphics_Canvas_Text__CanvasGlyphMetrics *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__uint__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics* unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__Microsoft_Graphics_Canvas_Text__CanvasGlyphMetrics items
						items[mcgIdx] = unsafe_items[mcgIdx];
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__Microsoft_Graphics_Canvas_Text__CanvasGlyphMetrics, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics Func_uint__Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics___Windows_Foundation_Collections__IVectorView_A_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics> Func__IReadOnlyList_1_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__Microsoft_Graphics_Canvas_Text__CanvasGlyphMetrics, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value, 
								&(unsafe_index), 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval != 0;
			index = unsafe_index;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__Microsoft_Graphics_Canvas_Text__CanvasGlyphMetrics, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__(
					global::System.__ComObject __this, 
					uint index, 
					global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__Microsoft_Graphics_Canvas_Text__CanvasGlyphMetrics, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__Microsoft_Graphics_Canvas_Text__CanvasGlyphMetrics *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics* unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__Microsoft_Graphics_Canvas_Text__CanvasGlyphMetrics items
						items[mcgIdx] = unsafe_items[mcgIdx];
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__Microsoft_Graphics_Canvas_Text__CanvasGlyphMetrics *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__(
					global::System.__ComObject __this, 
					global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics* unsafe_items = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics*);
			uint unsafe_items_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items == null)
					unsafe_items = null;
				else
				{
					if (items != null)
						unsafe_items_mcgLength = (uint)items.Length;
					if (items != null)
						unsafe_items = (global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__Microsoft_Graphics_Canvas_Text__CanvasGlyphMetrics items
						unsafe_items[mcgIdx] = items[mcgIdx];
					}
				}
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Nullable<System.AttributeTargets>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_AttributeTargets__Windows_Foundation_Metadata__AttributeTargets, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.AttributeTargets Func_AttributeTargets__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.AttributeTargets unsafe___value__retval;
			global::System.AttributeTargets __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.CornerRadius>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_CornerRadius__Windows_UI_Xaml__CornerRadius, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.CornerRadius Func_UI_Xaml_CornerRadius__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.CornerRadius unsafe___value__retval;
			global::Windows.UI.Xaml.CornerRadius __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Duration>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Duration__Windows_UI_Xaml__Duration, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Duration Func_UI_Xaml_Duration__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Duration unsafe___value__retval;
			global::Windows.UI.Xaml.Duration __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.DurationType>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_DurationType__Windows_UI_Xaml__DurationType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DurationType Func_UI_Xaml_DurationType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.DurationType unsafe___value__retval;
			global::Windows.UI.Xaml.DurationType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.GridLength>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_GridLength__Windows_UI_Xaml__GridLength, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.GridLength Func_UI_Xaml_GridLength__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.GridLength unsafe___value__retval;
			global::Windows.UI.Xaml.GridLength __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.GridUnitType>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_GridUnitType__Windows_UI_Xaml__GridUnitType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.GridUnitType Func_UI_Xaml_GridUnitType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.GridUnitType unsafe___value__retval;
			global::Windows.UI.Xaml.GridUnitType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Thickness>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Thickness__Windows_UI_Xaml__Thickness, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Thickness Func_UI_Xaml_Thickness__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Thickness unsafe___value__retval;
			global::Windows.UI.Xaml.Thickness __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Controls.Primitives.GeneratorPosition>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Controls_Primitives_GeneratorPosition__Windows_UI_Xaml_Controls_Primitives__GeneratorPosition, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Primitives.GeneratorPosition Func_UI_Xaml_Controls_Primitives_GeneratorPosition__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Primitives.GeneratorPosition unsafe___value__retval;
			global::Windows.UI.Xaml.Controls.Primitives.GeneratorPosition __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Media.Matrix>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Media_Matrix__Windows_UI_Xaml_Media__Matrix, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Matrix Func_UI_Xaml_Media_Matrix__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Matrix unsafe___value__retval;
			global::Windows.UI.Xaml.Media.Matrix __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Media.Animation.KeyTime>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Media_Animation_KeyTime__Windows_UI_Xaml_Media_Animation__KeyTime, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.KeyTime Func_UI_Xaml_Media_Animation_KeyTime__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.KeyTime unsafe___value__retval;
			global::Windows.UI.Xaml.Media.Animation.KeyTime __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Media.Animation.RepeatBehavior>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Media_Animation_RepeatBehavior__Windows_UI_Xaml_Media_Animation__RepeatBehavior, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.RepeatBehavior Func_UI_Xaml_Media_Animation_RepeatBehavior__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.RepeatBehavior unsafe___value__retval;
			global::Windows.UI.Xaml.Media.Animation.RepeatBehavior __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Media.Animation.RepeatBehaviorType>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Media_Animation_RepeatBehaviorType__Windows_UI_Xaml_Media_Animation__RepeatBehaviorType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.RepeatBehaviorType Func_UI_Xaml_Media_Animation_RepeatBehaviorType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.RepeatBehaviorType unsafe___value__retval;
			global::Windows.UI.Xaml.Media.Animation.RepeatBehaviorType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Media.Media3D.Matrix3D>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Media_Media3D_Matrix3D__Windows_UI_Xaml_Media_Media3D__Matrix3D, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Media3D.Matrix3D Func_UI_Xaml_Media_Media3D_Matrix3D__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Media3D.Matrix3D unsafe___value__retval;
			global::Windows.UI.Xaml.Media.Media3D.Matrix3D __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<System.Numerics.Plane>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Plane__Windows_Foundation_Numerics__Plane, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Plane Func_Numerics_Plane__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Plane unsafe___value__retval;
			global::System.Numerics.Plane __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<System.Numerics.Quaternion>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Quaternion__Windows_Foundation_Numerics__Quaternion, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Quaternion Func_Numerics_Quaternion__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Quaternion unsafe___value__retval;
			global::System.Numerics.Quaternion __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.CanvasLayerOptions>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasLayerOptions__Microsoft_Graphics_Canvas__CanvasLayerOptions, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasLayerOptions Func_Microsoft_Graphics_Canvas_CanvasLayerOptions__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.CanvasLayerOptions unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.CanvasLayerOptions __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.Geometry.CanvasArcSize>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasArcSize__Microsoft_Graphics_Canvas_Geometry__CanvasArcSize, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasArcSize Func_Microsoft_Graphics_Canvas_Geometry_CanvasArcSize__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.CanvasArcSize unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasArcSize __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.Geometry.CanvasFigureFill>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasFigureFill__Microsoft_Graphics_Canvas_Geometry__CanvasFigureFill, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasFigureFill Func_Microsoft_Graphics_Canvas_Geometry_CanvasFigureFill__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.CanvasFigureFill unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasFigureFill __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.Geometry.CanvasFigureLoop>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasFigureLoop__Microsoft_Graphics_Canvas_Geometry__CanvasFigureLoop, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasFigureLoop Func_Microsoft_Graphics_Canvas_Geometry_CanvasFigureLoop__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.CanvasFigureLoop unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasFigureLoop __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.Geometry.CanvasFigureSegmentOptions>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasFigureSegmentOptions__Microsoft_Graphics_Canvas_Geometry__CanvasFigureSegmentOptions, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasFigureSegmentOptions Func_Microsoft_Graphics_Canvas_Geometry_CanvasFigureSegmentOptions__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.CanvasFigureSegmentOptions unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasFigureSegmentOptions __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.Geometry.CanvasFilledRegionDetermination>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasFilledRegionDetermination__Microsoft_Graphics_Canvas_Geometry__CanvasFilledRegionDetermination, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasFilledRegionDetermination Func_Microsoft_Graphics_Canvas_Geometry_CanvasFilledRegionDetermination__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.CanvasFilledRegionDetermination unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasFilledRegionDetermination __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.Geometry.CanvasGeometryCombine>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometryCombine__Microsoft_Graphics_Canvas_Geometry__CanvasGeometryCombine, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometryCombine Func_Microsoft_Graphics_Canvas_Geometry_CanvasGeometryCombine__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometryCombine unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometryCombine __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.Geometry.CanvasGeometryRelation>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometryRelation__Microsoft_Graphics_Canvas_Geometry__CanvasGeometryRelation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometryRelation Func_Microsoft_Graphics_Canvas_Geometry_CanvasGeometryRelation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometryRelation unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometryRelation __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.Geometry.CanvasGeometrySimplification>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGeometrySimplification__Microsoft_Graphics_Canvas_Geometry__CanvasGeometrySimplification, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometrySimplification Func_Microsoft_Graphics_Canvas_Geometry_CanvasGeometrySimplification__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometrySimplification unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGeometrySimplification __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.Geometry.CanvasSweepDirection>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasSweepDirection__Microsoft_Graphics_Canvas_Geometry__CanvasSweepDirection, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasSweepDirection Func_Microsoft_Graphics_Canvas_Geometry_CanvasSweepDirection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.CanvasSweepDirection unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasSweepDirection __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.CanvasDpiRounding>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasDpiRounding__Microsoft_Graphics_Canvas__CanvasDpiRounding, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasDpiRounding Func_Microsoft_Graphics_Canvas_CanvasDpiRounding__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.CanvasDpiRounding unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.CanvasDpiRounding __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.CanvasBitmapFileFormat>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasBitmapFileFormat__Microsoft_Graphics_Canvas__CanvasBitmapFileFormat, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasBitmapFileFormat Func_Microsoft_Graphics_Canvas_CanvasBitmapFileFormat__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.CanvasBitmapFileFormat unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.CanvasBitmapFileFormat __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.CanvasVirtualBitmapOptions>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasVirtualBitmapOptions__Microsoft_Graphics_Canvas__CanvasVirtualBitmapOptions, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasVirtualBitmapOptions Func_Microsoft_Graphics_Canvas_CanvasVirtualBitmapOptions__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.CanvasVirtualBitmapOptions unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.CanvasVirtualBitmapOptions __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.Text.CanvasTextMeasuringMode>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextMeasuringMode__Microsoft_Graphics_Canvas_Text__CanvasTextMeasuringMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasTextMeasuringMode Func_Microsoft_Graphics_Canvas_Text_CanvasTextMeasuringMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasTextMeasuringMode unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasTextMeasuringMode __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.Text.CanvasGlyphOrientation>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyphOrientation__Microsoft_Graphics_Canvas_Text__CanvasGlyphOrientation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasGlyphOrientation Func_Microsoft_Graphics_Canvas_Text_CanvasGlyphOrientation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyphOrientation unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyphOrientation __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.Text.CanvasTypographyFeatureName>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTypographyFeatureName__Microsoft_Graphics_Canvas_Text__CanvasTypographyFeatureName, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeatureName Func_Microsoft_Graphics_Canvas_Text_CanvasTypographyFeatureName__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeatureName unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeatureName __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.Text.CanvasClusterProperties>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasClusterProperties__Microsoft_Graphics_Canvas_Text__CanvasClusterProperties, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasClusterProperties Func_Microsoft_Graphics_Canvas_Text_CanvasClusterProperties__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasClusterProperties unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasClusterProperties __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatchEdge>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatchEdge__Microsoft_Graphics_Canvas_Geometry__CanvasGradientMeshPatchEdge, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatchEdge Func_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatchEdge__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatchEdge unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatchEdge __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.Text.CanvasFontInformation>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontInformation__Microsoft_Graphics_Canvas_Text__CanvasFontInformation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasFontInformation Func_Microsoft_Graphics_Canvas_Text_CanvasFontInformation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasFontInformation unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasFontInformation __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.Text.CanvasFontPropertyIdentifier>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontPropertyIdentifier__Microsoft_Graphics_Canvas_Text__CanvasFontPropertyIdentifier, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasFontPropertyIdentifier Func_Microsoft_Graphics_Canvas_Text_CanvasFontPropertyIdentifier__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasFontPropertyIdentifier unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasFontPropertyIdentifier __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.Text.CanvasNumberSubstitutionMethod>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasNumberSubstitutionMethod__Microsoft_Graphics_Canvas_Text__CanvasNumberSubstitutionMethod, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasNumberSubstitutionMethod Func_Microsoft_Graphics_Canvas_Text_CanvasNumberSubstitutionMethod__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasNumberSubstitutionMethod unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasNumberSubstitutionMethod __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.Text.CanvasScriptShape>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasScriptShape__Microsoft_Graphics_Canvas_Text__CanvasScriptShape, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasScriptShape Func_Microsoft_Graphics_Canvas_Text_CanvasScriptShape__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasScriptShape unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasScriptShape __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.Text.CanvasScriptProperties>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasScriptProperties__Microsoft_Graphics_Canvas_Text__CanvasScriptProperties, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasScriptProperties Func_Microsoft_Graphics_Canvas_Text_CanvasScriptProperties__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasScriptProperties__Impl.UnsafeType unsafe___value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasScriptProperties__Impl.UnsafeType);
			global::Microsoft.Graphics.Canvas.Text.CanvasScriptProperties __value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasScriptProperties);
			int unsafe___return__;
			// Marshalling
			unsafe___value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasScriptProperties__Impl.UnsafeType);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::Microsoft.Graphics.Canvas.Text.CanvasScriptProperties__Impl.Marshal__UnsafeToSafe(
								ref unsafe___value__retval, 
								out __value__retval
							);
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.Text.CanvasGlyphJustification>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyphJustification__Microsoft_Graphics_Canvas_Text__CanvasGlyphJustification, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasGlyphJustification Func_Microsoft_Graphics_Canvas_Text_CanvasGlyphJustification__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyphJustification unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyphJustification __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.Text.CanvasGlyphShaping>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyphShaping__Microsoft_Graphics_Canvas_Text__CanvasGlyphShaping, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasGlyphShaping Func_Microsoft_Graphics_Canvas_Text_CanvasGlyphShaping__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyphShaping__Impl.UnsafeType unsafe___value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyphShaping__Impl.UnsafeType);
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyphShaping __value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyphShaping);
			int unsafe___return__;
			// Marshalling
			unsafe___value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyphShaping__Impl.UnsafeType);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyphShaping__Impl.Marshal__UnsafeToSafe(
								ref unsafe___value__retval, 
								out __value__retval
							);
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.CanvasSpriteSortMode>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasSpriteSortMode__Microsoft_Graphics_Canvas__CanvasSpriteSortMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasSpriteSortMode Func_Microsoft_Graphics_Canvas_CanvasSpriteSortMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.CanvasSpriteSortMode unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.CanvasSpriteSortMode __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.CanvasSpriteOptions>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasSpriteOptions__Microsoft_Graphics_Canvas__CanvasSpriteOptions, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasSpriteOptions Func_Microsoft_Graphics_Canvas_CanvasSpriteOptions__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.CanvasSpriteOptions unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.CanvasSpriteOptions __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Microsoft.Graphics.Canvas.CanvasSpriteFlip>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_CanvasSpriteFlip__Microsoft_Graphics_Canvas__CanvasSpriteFlip, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.CanvasSpriteFlip Func_Microsoft_Graphics_Canvas_CanvasSpriteFlip__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.CanvasSpriteFlip unsafe___value__retval;
			global::Microsoft.Graphics.Canvas.CanvasSpriteFlip __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.Foundation.Point>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_Foundation_Point__Windows_Foundation__Point *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Point[] Func_rg__Point__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Point* unsafe___value__retval = default(global::Windows.Foundation.Point*);
			global::Windows.Foundation.Point[] __value__retval = default(global::Windows.Foundation.Point[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.Foundation.Point[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.Foundation.Size>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_Foundation_Size__Windows_Foundation__Size *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Size[] Func_rg__Size__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Size* unsafe___value__retval = default(global::Windows.Foundation.Size*);
			global::Windows.Foundation.Size[] __value__retval = default(global::Windows.Foundation.Size[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.Foundation.Size[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Size__Windows_Foundation__Size __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.RoutedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_RoutedEventHandler__Windows_UI_Xaml__RoutedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.RoutedEventHandler Func_UI_Xaml_RoutedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.RoutedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.RoutedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.RoutedEventHandler __value__retval = default(global::Windows.UI.Xaml.RoutedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.RoutedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.RoutedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget5>(global::Windows.UI.Xaml.RoutedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<string>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_string___Windows_Foundation__IAsyncOperation_A_string_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperation_1_string___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperation<string> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_string_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperation_A_string_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperation_A_string_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperation<string>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<string>.put_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_string___Windows_Foundation__AsyncOperationCompletedHandler_A_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationCompletedHandler_1_string___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationCompletedHandler<string> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_string_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_string_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationCompletedHandler_A_string_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<string>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget40>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_string_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<string>.get_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_string___Windows_Foundation__AsyncOperationCompletedHandler_A_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationCompletedHandler<string> Func__AsyncOperationCompletedHandler_1_string___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_string_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_string_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationCompletedHandler<string> __value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler<string>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationCompletedHandler<string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<string>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget40>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_string_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.EventHandler<string>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__string__(
					global::System.__ComObject __this, 
					object sender, 
					string args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Runtime.InteropServices.HSTRING unsafe_args = default(global::System.Runtime.InteropServices.HSTRING);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				fixed (char* pBuffer_args = args)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_args;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_args, args, &(hstring_header_args), &(unsafe_args));
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_sender, 
										unsafe_args
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<string>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_string___Windows_Foundation__EventHandler_A_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<string> Func_EventHandler_1_string___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_string_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_string_V___Impl.Vtbl**);
			global::System.EventHandler<string> __value__retval = default(global::System.EventHandler<string>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<string>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget41>(global::System.EventHandler_A_string_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Markup.XmlnsDefinition>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.StructMarshaller] Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Markup.XmlnsDefinition Func_UI_Xaml_Markup_XmlnsDefinition__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType unsafe___value__retval = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType);
			global::Windows.UI.Xaml.Markup.XmlnsDefinition __value__retval = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition);
			int unsafe___return__;
			// Marshalling
			unsafe___value__retval = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.Marshal__UnsafeToSafe(
								ref unsafe___value__retval, 
								out __value__retval
							);
			// Return
			return __value__retval;
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.UI.Xaml.Markup.XmlnsDefinition>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Markup.XmlnsDefinition[] Func_rg_UI_Xaml_Markup_XmlnsDefinition__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType* unsafe___value__retval = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType*);
			global::Windows.UI.Xaml.Markup.XmlnsDefinition[] __value__retval = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.UI.Xaml.Markup.XmlnsDefinition[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.StructMarshaller] Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition __value__retval
							global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.Marshal__UnsafeToSafe(
												ref unsafe___value__retval[mcgIdx], 
												out __value__retval[mcgIdx]
											);
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.UI.Xaml.Navigation.NavigatedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Navigation_NavigationEventArgs__Windows_UI_Xaml_Navigation__NavigationEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Navigation_NavigationEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Navigation.NavigationEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Navigation.INavigationEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Navigation.INavigationEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Navigation.INavigationEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Navigation.INavigationEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IFrame.add_Navigated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Navigation_NavigatedEventHandler__Windows_UI_Xaml_Navigation__NavigatedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Navigation_NavigatedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Navigation.NavigatedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigatedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Navigation.NavigatedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget42>(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Navigation_NavigatingCancelEventArgs__Windows_UI_Xaml_Navigation__NavigatingCancelEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Navigation_NavigatingCancelEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IFrame.add_Navigating, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Navigation_NavigatingCancelEventHandler__Windows_UI_Xaml_Navigation__NavigatingCancelEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Navigation_NavigatingCancelEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget43>(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Navigation.NavigationFailedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Navigation_NavigationFailedEventArgs__Windows_UI_Xaml_Navigation__NavigationFailedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Navigation_NavigationFailedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Navigation.NavigationFailedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Navigation.INavigationFailedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Navigation.INavigationFailedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Navigation.INavigationFailedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Navigation.INavigationFailedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IFrame.add_NavigationFailed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Navigation_NavigationFailedEventHandler__Windows_UI_Xaml_Navigation__NavigationFailedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Navigation_NavigationFailedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget44>(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IFrame.add_NavigationStopped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Navigation_NavigationStoppedEventHandler__Windows_UI_Xaml_Navigation__NavigationStoppedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Navigation_NavigationStoppedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget42>(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IFrame.Navigate, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Type__object__bool__(
					global::System.__ComObject __this, 
					global::System.Type sourcePageType, 
					object parameter, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Type__Impl.UnsafeType unsafe_sourcePageType;
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_parameter = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			bool returnValue__retval;
			sbyte unsafe_returnValue__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				global::System.Runtime.InteropServices.HSTRING unsafe_sourcePageType__HSTRING__Name;
				int unsafe_sourcePageType__int__Kind;
				global::System.Runtime.InteropServices.McgMarshal.TypeToTypeName(
									sourcePageType, 
									out unsafe_sourcePageType__HSTRING__Name, 
									out unsafe_sourcePageType__int__Kind
								);
				unsafe_sourcePageType.Name = unsafe_sourcePageType__HSTRING__Name;
				unsafe_sourcePageType.Kind = (global::Windows.UI.Xaml.Interop.TypeKind)unsafe_sourcePageType__int__Kind;
				unsafe_parameter = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(parameter);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sourcePageType, 
									unsafe_parameter, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = unsafe_returnValue__retval != 0;
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_parameter)));
			}
		}

		// Signature, Windows.Devices.Enumeration.Pnp.IPnpObjectStatics.FindAllAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Devices_Enumeration_Pnp_PnpObjectType__Windows_Devices_Enumeration_Pnp__PnpObjectType, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_string___Windows_Foundation_Collections__IIterable_A_string_V_ *, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Windows_Devices_Enumeration_Pnp_PnpObjectCollection___Windows_Foundation__IAsyncOperation_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection> Func_int_IEnumerable_1_string___string___IAsyncOperation_1_Devices_Enumeration_Pnp_PnpObjectCollection___(
					global::System.__ComObject __this, 
					int type, 
					global::System.Collections.Generic.IEnumerable<string> requestedProperties, 
					string aqsFilter, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IEnumerable_A_string_V___Impl.Vtbl** unsafe_requestedProperties = default(global::System.Collections.Generic.IEnumerable_A_string_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.HSTRING unsafe_aqsFilter = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl** unsafe_asyncOp__retval = default(global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection> asyncOp__retval = default(global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_requestedProperties = (global::System.Collections.Generic.IEnumerable_A_string_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									requestedProperties, 
									typeof(global::System.Collections.Generic.IEnumerable<string>).TypeHandle
								);
				fixed (char* pBuffer_aqsFilter = aqsFilter)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_aqsFilter;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_aqsFilter, aqsFilter, &(hstring_header_aqsFilter), &(unsafe_aqsFilter));
					unsafe_asyncOp__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										type, 
										unsafe_requestedProperties, 
										unsafe_aqsFilter, 
										&(unsafe_asyncOp__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					asyncOp__retval = (global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_asyncOp__retval), 
										typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection>).TypeHandle
									);
				}
				// Return
				return asyncOp__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_requestedProperties)));
				global::System.GC.KeepAlive(requestedProperties);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncOp__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Devices.Enumeration.Pnp.PnpObject>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Enumeration.Pnp.PnpObject Func_uint__Devices_Enumeration_Pnp_PnpObject__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl**);
			global::Windows.Devices.Enumeration.Pnp.PnpObject __value__retval = default(global::Windows.Devices.Enumeration.Pnp.PnpObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Devices.Enumeration.Pnp.PnpObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Devices.Enumeration.Pnp.IPnpObject).TypeHandle, 
									typeof(global::Windows.Devices.Enumeration.Pnp.PnpObject).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Devices.Enumeration.Pnp.PnpObject>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Devices_Enumeration_Pnp_PnpObject__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.Devices.Enumeration.Pnp.PnpObject value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl** unsafe_value = default(global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Devices.Enumeration.Pnp.IPnpObject).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Devices.Enumeration.Pnp.PnpObject>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Devices_Enumeration_Pnp_PnpObject__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Devices.Enumeration.Pnp.PnpObject[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl*** unsafe_items = default(global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject * items
						items[mcgIdx] = (global::Windows.Devices.Enumeration.Pnp.PnpObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Devices.Enumeration.Pnp.IPnpObject).TypeHandle, 
											typeof(global::Windows.Devices.Enumeration.Pnp.PnpObject).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Devices.Enumeration.Pnp.PnpObject>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Devices_Enumeration_Pnp_PnpObject___Windows_Foundation_Collections__IIterator_A_Windows_Devices_Enumeration_Pnp_PnpObject_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Devices.Enumeration.Pnp.PnpObject> Func__Collections_IIterator_1_Devices_Enumeration_Pnp_PnpObject___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Devices_Enumeration_Pnp_PnpObject_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Devices_Enumeration_Pnp_PnpObject_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Devices.Enumeration.Pnp.PnpObject> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Devices.Enumeration.Pnp.PnpObject>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Devices.Enumeration.Pnp.PnpObject>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Devices.Enumeration.Pnp.PnpObject>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Devices.Enumeration.Pnp.PnpObject>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Enumeration.Pnp.PnpObject Func_Devices_Enumeration_Pnp_PnpObject__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl**);
			global::Windows.Devices.Enumeration.Pnp.PnpObject __value__retval = default(global::Windows.Devices.Enumeration.Pnp.PnpObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Devices.Enumeration.Pnp.PnpObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Devices.Enumeration.Pnp.IPnpObject).TypeHandle, 
									typeof(global::Windows.Devices.Enumeration.Pnp.PnpObject).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Devices.Enumeration.Pnp.PnpObject>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Devices_Enumeration_Pnp_PnpObject__uint__(
					global::System.__ComObject __this, 
					global::Windows.Devices.Enumeration.Pnp.PnpObject[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl*** unsafe_items = default(global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject * items
						items[mcgIdx] = (global::Windows.Devices.Enumeration.Pnp.PnpObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Devices.Enumeration.Pnp.IPnpObject).TypeHandle, 
											typeof(global::Windows.Devices.Enumeration.Pnp.PnpObject).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<Windows.Devices.Enumeration.Pnp.PnpObjectCollection>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Windows_Devices_Enumeration_Pnp_PnpObjectCollection___Windows_Foundation__IAsyncOperation_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperation_1_Devices_Enumeration_Pnp_PnpObjectCollection___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<Windows.Devices.Enumeration.Pnp.PnpObjectCollection>.put_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_Devices_Enumeration_Pnp_PnpObjectCollection___Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationCompletedHandler_1_Devices_Enumeration_Pnp_PnpObjectCollection___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget45>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<Windows.Devices.Enumeration.Pnp.PnpObjectCollection>.GetResults, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Enumeration_Pnp_PnpObjectCollection__Windows_Devices_Enumeration_Pnp__PnpObjectCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection Func_Devices_Enumeration_Pnp_PnpObjectCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_Devices_Enumeration_Pnp_PnpObject_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_Devices_Enumeration_Pnp_PnpObject_V___Impl.Vtbl**);
			global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection __value__retval = default(global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Enumeration.Pnp.PnpObject>).TypeHandle, 
									typeof(global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Devices.Enumeration.Pnp.IPnpObject.get_Properties, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyDictionary_2_string__object___Windows_Foundation_Collections__IMapView_A_string_j_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyDictionary<string, object> Func__IReadOnlyDictionary_2_string__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyDictionary_A_string_j_System_Object_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IReadOnlyDictionary_A_string_j_System_Object_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyDictionary<string, object> value__retval = default(global::System.Collections.Generic.IReadOnlyDictionary<string, object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IReadOnlyDictionary<string, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyDictionary<string, object>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs___Windows_Foundation__EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs> Func_EventHandler_1_ApplicationModel_Core_UnhandledErrorDetectedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs> __value__retval = default(global::System.EventHandler<global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget25>(global::System.EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Windows.ApplicationModel.SuspendingEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Windows_ApplicationModel_SuspendingEventArgs___Windows_Foundation__EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Windows.ApplicationModel.SuspendingEventArgs> Func_EventHandler_1_ApplicationModel_SuspendingEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Windows.ApplicationModel.SuspendingEventArgs> __value__retval = default(global::System.EventHandler<global::Windows.ApplicationModel.SuspendingEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Windows.ApplicationModel.SuspendingEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Windows.ApplicationModel.SuspendingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget2>(global::System.EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.CanvasDevice,System.Object>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_CanvasDevice__object___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_CanvasDevice_j_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.CanvasDevice, object> Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_CanvasDevice__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_CanvasDevice_j_System_Object_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_CanvasDevice_j_System_Object_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.CanvasDevice, object> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.CanvasDevice, object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.CanvasDevice, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.CanvasDevice, object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget26>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_CanvasDevice_j_System_Object_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Microsoft.Graphics.Canvas.Text.CanvasGlyph>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasGlyph[] Func_rg_Microsoft_Graphics_Canvas_Text_CanvasGlyph__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyph* unsafe___value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyph*);
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyph[] __value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyph[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Microsoft.Graphics.Canvas.Text.CanvasGlyph[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyph__Microsoft_Graphics_Canvas_Text__CanvasGlyph __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__Microsoft_Graphics_Canvas_Text__CanvasGlyphMetrics *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics[] Func_rg_Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics* unsafe___value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics*);
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics[] __value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyphMetrics__Microsoft_Graphics_Canvas_Text__CanvasGlyphMetrics __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__Microsoft_Graphics_Canvas_Text__CanvasTextLayoutRegion *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion[] Func_rg_Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion* unsafe___value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion*);
			global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion[] __value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableStructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasTextLayoutRegion__Microsoft_Graphics_Canvas_Text__CanvasTextLayoutRegion __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Numerics.Vector2>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Vector2[] Func_rg_Numerics_Vector2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Vector2* unsafe___value__retval = default(global::System.Numerics.Vector2*);
			global::System.Numerics.Vector2[] __value__retval = default(global::System.Numerics.Vector2[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Numerics.Vector2[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2 __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Numerics.Vector4>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_System_Numerics_Vector4__Windows_Foundation_Numerics__Vector4 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Vector4[] Func_rg_Numerics_Vector4__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Vector4* unsafe___value__retval = default(global::System.Numerics.Vector4*);
			global::System.Numerics.Vector4[] __value__retval = default(global::System.Numerics.Vector4[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Numerics.Vector4[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector4__Windows_Foundation_Numerics__Vector4 __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatchEdge>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatchEdge__Microsoft_Graphics_Canvas_Geometry__CanvasGradientMeshPatchEdge *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatchEdge[] Func_rg_Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatchEdge__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatchEdge* unsafe___value__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatchEdge*);
			global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatchEdge[] __value__retval = default(global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatchEdge[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatchEdge[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.EnumMarshaller] Microsoft_Graphics_Canvas_Geometry_CanvasGradientMeshPatchEdge__Microsoft_Graphics_Canvas_Geometry__CanvasGradientMeshPatchEdge __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Microsoft.Graphics.Canvas.Text.CanvasFontProperty>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasFontProperty__Microsoft_Graphics_Canvas_Text__CanvasFontProperty *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty[] Func_rg_Microsoft_Graphics_Canvas_Text_CanvasFontProperty__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType* unsafe___value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType*);
			global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty[] __value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasFontProperty__Microsoft_Graphics_Canvas_Text__CanvasFontProperty __value__retval
							global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.Marshal__UnsafeToSafe(
												ref unsafe___value__retval[mcgIdx], 
												out __value__retval[mcgIdx]
											);
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Microsoft.Graphics.Canvas.Text.CanvasGlyphShaping>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Microsoft_Graphics_Canvas_Text_CanvasGlyphShaping__Microsoft_Graphics_Canvas_Text__CanvasGlyphShaping *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Microsoft.Graphics.Canvas.Text.CanvasGlyphShaping[] Func_rg_Microsoft_Graphics_Canvas_Text_CanvasGlyphShaping__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyphShaping__Impl.UnsafeType* unsafe___value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyphShaping__Impl.UnsafeType*);
			global::Microsoft.Graphics.Canvas.Text.CanvasGlyphShaping[] __value__retval = default(global::Microsoft.Graphics.Canvas.Text.CanvasGlyphShaping[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Microsoft.Graphics.Canvas.Text.CanvasGlyphShaping[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.StructMarshaller] Microsoft_Graphics_Canvas_Text_CanvasGlyphShaping__Microsoft_Graphics_Canvas_Text__CanvasGlyphShaping __value__retval
							global::Microsoft.Graphics.Canvas.Text.CanvasGlyphShaping__Impl.Marshal__UnsafeToSafe(
												ref unsafe___value__retval[mcgIdx], 
												out __value__retval[mcgIdx]
											);
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument,Microsoft.Graphics.Canvas.Printing.CanvasPrintTaskOptionsChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument__Microsoft_Graphics_Canvas_Printing_CanvasPrintTaskOptionsChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPrintTaskOptionsChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument, global::Microsoft.Graphics.Canvas.Printing.CanvasPrintTaskOptionsChangedEventArgs> Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument__Microsoft_Graphics_Canvas_Printing_CanvasPrintTaskOptionsChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPrintTaskOptionsChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPrintTaskOptionsChangedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument, global::Microsoft.Graphics.Canvas.Printing.CanvasPrintTaskOptionsChangedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument, global::Microsoft.Graphics.Canvas.Printing.CanvasPrintTaskOptionsChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument, global::Microsoft.Graphics.Canvas.Printing.CanvasPrintTaskOptionsChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument, global::Microsoft.Graphics.Canvas.Printing.CanvasPrintTaskOptionsChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget27>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPrintTaskOptionsChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument,Microsoft.Graphics.Canvas.Printing.CanvasPreviewEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument__Microsoft_Graphics_Canvas_Printing_CanvasPreviewEventArgs___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPreviewEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument, global::Microsoft.Graphics.Canvas.Printing.CanvasPreviewEventArgs> Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument__Microsoft_Graphics_Canvas_Printing_CanvasPreviewEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPreviewEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPreviewEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument, global::Microsoft.Graphics.Canvas.Printing.CanvasPreviewEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument, global::Microsoft.Graphics.Canvas.Printing.CanvasPreviewEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument, global::Microsoft.Graphics.Canvas.Printing.CanvasPreviewEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument, global::Microsoft.Graphics.Canvas.Printing.CanvasPreviewEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget28>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPreviewEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument,Microsoft.Graphics.Canvas.Printing.CanvasPrintEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument__Microsoft_Graphics_Canvas_Printing_CanvasPrintEventArgs___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPrintEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument, global::Microsoft.Graphics.Canvas.Printing.CanvasPrintEventArgs> Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument__Microsoft_Graphics_Canvas_Printing_CanvasPrintEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPrintEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPrintEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument, global::Microsoft.Graphics.Canvas.Printing.CanvasPrintEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument, global::Microsoft.Graphics.Canvas.Printing.CanvasPrintEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument, global::Microsoft.Graphics.Canvas.Printing.CanvasPrintEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument, global::Microsoft.Graphics.Canvas.Printing.CanvasPrintEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget29>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_Printing_CanvasPrintDocument_j_Microsoft_Graphics_Canvas_Printing_CanvasPrintEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedControl,Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl__Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedControl, global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs> Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl__Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedControl, global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedControl, global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedControl, global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedControl, global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget30>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl,Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedUpdateEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl__Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedUpdateEventArgs___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedUpdateEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedUpdateEventArgs> Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl__Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedUpdateEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedUpdateEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedUpdateEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedUpdateEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedUpdateEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedUpdateEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedUpdateEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget31>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedUpdateEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl,Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedDrawEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl__Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedDrawEventArgs___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedDrawEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedDrawEventArgs> Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl__Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedDrawEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedDrawEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedDrawEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedDrawEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedDrawEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedDrawEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedDrawEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget32>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedDrawEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl,System.Object>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl__object___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl, object> Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_System_Object_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_System_Object_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl, object> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl, object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.ICanvasAnimatedControl, object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget33>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_j_System_Object_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Core.CoreInputDeviceTypes>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Core_CoreInputDeviceTypes__Windows_UI_Core__CoreInputDeviceTypes, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Core.CoreInputDeviceTypes Func_UI_Core_CoreInputDeviceTypes__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Core.CoreInputDeviceTypes unsafe___value__retval;
			global::Windows.UI.Core.CoreInputDeviceTypes __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Core.DispatchedHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Core_DispatchedHandler__Windows_UI_Core__DispatchedHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Core.DispatchedHandler Func_UI_Core_DispatchedHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Core.DispatchedHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Core.DispatchedHandler__Impl.Vtbl**);
			global::Windows.UI.Core.DispatchedHandler __value__retval = default(global::Windows.UI.Core.DispatchedHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Core.DispatchedHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Core.DispatchedHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget24>(global::Windows.UI.Core.DispatchedHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl,Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl__Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl, global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs> Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl__Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl, global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl, global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl, global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl, global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget34>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl,Microsoft.Graphics.Canvas.UI.Xaml.CanvasDrawEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl__Microsoft_Graphics_Canvas_UI_Xaml_CanvasDrawEventArgs___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasDrawEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasDrawEventArgs> Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl__Microsoft_Graphics_Canvas_UI_Xaml_CanvasDrawEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasDrawEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasDrawEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasDrawEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasDrawEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasDrawEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasDrawEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget35>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasDrawEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualImageSource,Microsoft.Graphics.Canvas.UI.Xaml.CanvasRegionsInvalidatedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualImageSource__Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualImageSource_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualImageSource, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasRegionsInvalidatedEventArgs> Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualImageSource__Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualImageSource_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualImageSource_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualImageSource, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasRegionsInvalidatedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualImageSource, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasRegionsInvalidatedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualImageSource, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasRegionsInvalidatedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualImageSource, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasRegionsInvalidatedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget37>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualImageSource_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualControl,Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl__Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualControl, global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs> Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl__Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualControl, global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualControl, global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualControl, global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualControl, global::Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget38>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl_j_Microsoft_Graphics_Canvas_UI_CanvasCreateResourcesEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualControl,Microsoft.Graphics.Canvas.UI.Xaml.CanvasRegionsInvalidatedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl__Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs___Windows_Foundation__TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasRegionsInvalidatedEventArgs> Func__TypedEventHandler_2_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl__Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasRegionsInvalidatedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasRegionsInvalidatedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasRegionsInvalidatedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasVirtualControl, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasRegionsInvalidatedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget39>(global::Windows.Foundation.TypedEventHandler_A_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl_j_Microsoft_Graphics_Canvas_UI_Xaml_CanvasRegionsInvalidatedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<Microsoft.Graphics.Canvas.Text.CanvasCharacterRange,Microsoft.Graphics.Canvas.Text.CanvasScaledFont>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasScaledFont___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>[] Func_rg__KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasScaledFont___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasScaledFont___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasScaledFont>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasScaledFont___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasScaledFont_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<Microsoft.Graphics.Canvas.Text.CanvasCharacterRange,Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>[] Func_rg__KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange, global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange__Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript___Windows_Foundation_Collections__IKeyValuePair_A_Microsoft_Graphics_Canvas_Text_CanvasCharacterRange_j_Microsoft_Graphics_Canvas_Text_CanvasAnalyzedScript_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, System.Nullable<Windows.Foundation.FoundationContract>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Windows_Foundation_FoundationContract__Windows_Foundation__FoundationContract, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.FoundationContract Func__FoundationContract__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.FoundationContract unsafe___value__retval;
			global::Windows.Foundation.FoundationContract __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Foundation.UniversalApiContract>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Windows_Foundation_UniversalApiContract__Windows_Foundation__UniversalApiContract, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.UniversalApiContract Func__UniversalApiContract__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.UniversalApiContract unsafe___value__retval;
			global::Windows.Foundation.UniversalApiContract __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.SuspendingEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_SuspendingEventHandler__Windows_UI_Xaml__SuspendingEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.SuspendingEventHandler Func_UI_Xaml_SuspendingEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.SuspendingEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.SuspendingEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.SuspendingEventHandler __value__retval = default(global::Windows.UI.Xaml.SuspendingEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.SuspendingEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.SuspendingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget2>(global::Windows.UI.Xaml.SuspendingEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.UnhandledExceptionEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_UnhandledExceptionEventHandler__Windows_UI_Xaml__UnhandledExceptionEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.UnhandledExceptionEventHandler Func_UI_Xaml_UnhandledExceptionEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.UnhandledExceptionEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.UnhandledExceptionEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.UnhandledExceptionEventHandler __value__retval = default(global::Windows.UI.Xaml.UnhandledExceptionEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.UnhandledExceptionEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.UnhandledExceptionEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget1>(global::Windows.UI.Xaml.UnhandledExceptionEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.DoubleTappedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_DoubleTappedEventHandler__Windows_UI_Xaml_Input__DoubleTappedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.DoubleTappedEventHandler Func_UI_Xaml_Input_DoubleTappedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.DoubleTappedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.DoubleTappedEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.DoubleTappedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget9>(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.DragEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_DragEventHandler__Windows_UI_Xaml__DragEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DragEventHandler Func_UI_Xaml_DragEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.DragEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.DragEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.DragEventHandler __value__retval = default(global::Windows.UI.Xaml.DragEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.DragEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.DragEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget6>(global::Windows.UI.Xaml.DragEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.HoldingEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_HoldingEventHandler__Windows_UI_Xaml_Input__HoldingEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.HoldingEventHandler Func_UI_Xaml_Input_HoldingEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.HoldingEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.HoldingEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.HoldingEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.HoldingEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.HoldingEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.HoldingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget10>(global::Windows.UI.Xaml.Input.HoldingEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.KeyEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_KeyEventHandler__Windows_UI_Xaml_Input__KeyEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.KeyEventHandler Func_UI_Xaml_Input_KeyEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.KeyEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.KeyEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.KeyEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.KeyEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget4>(global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.ManipulationCompletedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationCompletedEventHandler__Windows_UI_Xaml_Input__ManipulationCompletedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler Func_UI_Xaml_Input_ManipulationCompletedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget16>(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.ManipulationDeltaEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationDeltaEventHandler__Windows_UI_Xaml_Input__ManipulationDeltaEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler Func_UI_Xaml_Input_ManipulationDeltaEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget15>(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationInertiaStartingEventHandler__Windows_UI_Xaml_Input__ManipulationInertiaStartingEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler Func_UI_Xaml_Input_ManipulationInertiaStartingEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget13>(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.ManipulationStartedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationStartedEventHandler__Windows_UI_Xaml_Input__ManipulationStartedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler Func_UI_Xaml_Input_ManipulationStartedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget14>(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.ManipulationStartingEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationStartingEventHandler__Windows_UI_Xaml_Input__ManipulationStartingEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler Func_UI_Xaml_Input_ManipulationStartingEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget12>(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.PointerEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_PointerEventHandler__Windows_UI_Xaml_Input__PointerEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.PointerEventHandler Func_UI_Xaml_Input_PointerEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.PointerEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.PointerEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.PointerEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.PointerEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget7>(global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.RightTappedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_RightTappedEventHandler__Windows_UI_Xaml_Input__RightTappedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.RightTappedEventHandler Func_UI_Xaml_Input_RightTappedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.RightTappedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.RightTappedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.RightTappedEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.RightTappedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.RightTappedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.RightTappedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget11>(global::Windows.UI.Xaml.Input.RightTappedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.TappedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_TappedEventHandler__Windows_UI_Xaml_Input__TappedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.TappedEventHandler Func_UI_Xaml_Input_TappedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.TappedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.TappedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.TappedEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.TappedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.TappedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.TappedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget8>(global::Windows.UI.Xaml.Input.TappedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.DragStartingEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_UIElement__Windows_UI_Xaml_DragStartingEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs> Func__TypedEventHandler_2_UI_Xaml_UIElement__UI_Xaml_DragStartingEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget17>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.DropCompletedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_UIElement__Windows_UI_Xaml_DropCompletedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs> Func__TypedEventHandler_2_UI_Xaml_UIElement__UI_Xaml_DropCompletedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget18>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.DependencyPropertyChangedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_DependencyPropertyChangedEventHandler__Windows_UI_Xaml__DependencyPropertyChangedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler Func_UI_Xaml_DependencyPropertyChangedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler __value__retval = default(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget22>(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.SizeChangedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_SizeChangedEventHandler__Windows_UI_Xaml__SizeChangedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.SizeChangedEventHandler Func_UI_Xaml_SizeChangedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.SizeChangedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.SizeChangedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.SizeChangedEventHandler __value__retval = default(global::Windows.UI.Xaml.SizeChangedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.SizeChangedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.SizeChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget19>(global::Windows.UI.Xaml.SizeChangedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.DataContextChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_FrameworkElement__Windows_UI_Xaml_DataContextChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs> Func__TypedEventHandler_2_UI_Xaml_FrameworkElement__UI_Xaml_DataContextChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget20>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.FrameworkElement,System.Object>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_FrameworkElement__object___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> Func__TypedEventHandler_2_UI_Xaml_FrameworkElement__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget21>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Navigation.NavigatedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Navigation_NavigatedEventHandler__Windows_UI_Xaml_Navigation__NavigatedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Navigation.NavigatedEventHandler Func_UI_Xaml_Navigation_NavigatedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigatedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Navigation.NavigatedEventHandler __value__retval = default(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Navigation.NavigatedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget42>(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Navigation_NavigatingCancelEventHandler__Windows_UI_Xaml_Navigation__NavigatingCancelEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler Func_UI_Xaml_Navigation_NavigatingCancelEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler __value__retval = default(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget43>(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Navigation.NavigationFailedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Navigation_NavigationFailedEventHandler__Windows_UI_Xaml_Navigation__NavigationFailedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler Func_UI_Xaml_Navigation_NavigationFailedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler __value__retval = default(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget44>(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Navigation_NavigationStoppedEventHandler__Windows_UI_Xaml_Navigation__NavigationStoppedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler Func_UI_Xaml_Navigation_NavigationStoppedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler __value__retval = default(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget42>(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SwapChainPanel,System.Object>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_SwapChainPanel__object___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_SwapChainPanel_j_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SwapChainPanel, object> Func__TypedEventHandler_2_UI_Xaml_Controls_SwapChainPanel__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SwapChainPanel_j_System_Object_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SwapChainPanel_j_System_Object_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SwapChainPanel, object> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SwapChainPanel, object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SwapChainPanel, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SwapChainPanel, object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget36>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SwapChainPanel_j_System_Object_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Globalization.ICalendar.GetDateTime, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDateTimeMarshaller] System_DateTimeOffset__Windows_Foundation__DateTime, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.DateTimeOffset Func_DateTimeOffset__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.DateTimeOffset result__retval;
			global::System.DateTimeOffset__Impl.UnsafeType unsafe_result__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_result__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			result__retval = new global::System.DateTimeOffset((unsafe_result__retval.UniversalTime + 504911232000000000), global::System.TimeSpan.Zero).ToLocalTime();
			// Return
			return result__retval;
		}

		// Signature, Windows.Globalization.ILanguageFactory.CreateLanguage, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_string__IntPtr__(
					global::System.__ComObject __this, 
					string languageTag, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_languageTag = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.IntPtr unsafe_result__retval;
			global::System.IntPtr result__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_languageTag = languageTag)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_languageTag;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_languageTag, languageTag, &(hstring_header_languageTag), &(unsafe_languageTag));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_languageTag, 
									&(unsafe_result__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				result__retval = unsafe_result__retval;
			}
			// Return
			return result__retval;
		}

		// Signature, Windows.Foundation.Collections.MapChangedEventHandler<string,string>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IObservableMap_2_string__string___Windows_Foundation_Collections__IObservableMap_A_string_j_string_V_ *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IMapChangedEventArgs_1_string___Windows_Foundation_Collections__IMapChangedEventArgs_A_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Collections_IObservableMap_2_string__string__Collections_IMapChangedEventArgs_1_string___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Collections.IObservableMap<string, string> sender, 
					global::Windows.Foundation.Collections.IMapChangedEventArgs<string> @event, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IObservableMap_A_string_j_string_V___Impl.Vtbl** unsafe_sender = default(global::Windows.Foundation.Collections.IObservableMap_A_string_j_string_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IMapChangedEventArgs_A_string_V___Impl.Vtbl** unsafe_event = default(global::Windows.Foundation.Collections.IMapChangedEventArgs_A_string_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.Foundation.Collections.IObservableMap_A_string_j_string_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.Foundation.Collections.IObservableMap<string, string>).TypeHandle
								);
				unsafe_event = (global::Windows.Foundation.Collections.IMapChangedEventArgs_A_string_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									@event, 
									typeof(global::Windows.Foundation.Collections.IMapChangedEventArgs<string>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_event
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_event)));
				global::System.GC.KeepAlive(@event);
			}
		}

		// Signature, Windows.Foundation.Collections.IObservableMap<string,string>.add_MapChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_Collections_MapChangedEventHandler_2_string__string___Windows_Foundation_Collections__MapChangedEventHandler_A_string_j_string_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__Collections_MapChangedEventHandler_2_string__string__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Collections.MapChangedEventHandler<string, string> vhnd, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.MapChangedEventHandler_A_string_j_string_V___Impl.Vtbl** unsafe_vhnd = default(global::Windows.Foundation.Collections.MapChangedEventHandler_A_string_j_string_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe___value__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_vhnd = (global::Windows.Foundation.Collections.MapChangedEventHandler_A_string_j_string_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									vhnd, 
									typeof(global::Windows.Foundation.Collections.MapChangedEventHandler<string, string>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget46>(global::Windows.Foundation.Collections.MapChangedEventHandler_A_string_j_string_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_vhnd, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_vhnd)));
			}
		}

		// Signature, Windows.System.Threading.TimerElapsedHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_System_Threading_ThreadPoolTimer__Windows_System_Threading__ThreadPoolTimer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Threading_ThreadPoolTimer__(
					global::System.__ComObject __this, 
					global::Windows.System.Threading.ThreadPoolTimer timer, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.Threading.IThreadPoolTimer__Impl.Vtbl** unsafe_timer = default(global::Windows.System.Threading.IThreadPoolTimer__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_timer = (global::Windows.System.Threading.IThreadPoolTimer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									timer, 
									typeof(global::Windows.System.Threading.IThreadPoolTimer).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_timer
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_timer)));
				global::System.GC.KeepAlive(timer);
			}
		}

		// Signature, Windows.System.Threading.IThreadPoolTimerStatics.CreateTimer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_System_Threading_TimerElapsedHandler__Windows_System_Threading__TimerElapsedHandler *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_TimeSpan__Windows_Foundation__TimeSpan, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_System_Threading_ThreadPoolTimer__Windows_System_Threading__ThreadPoolTimer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.System.Threading.ThreadPoolTimer Func_Threading_TimerElapsedHandler__TimeSpan__Threading_ThreadPoolTimer__(
					global::System.__ComObject __this, 
					global::Windows.System.Threading.TimerElapsedHandler handler, 
					global::System.TimeSpan delay, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.Threading.TimerElapsedHandler__Impl.Vtbl** unsafe_handler = default(global::Windows.System.Threading.TimerElapsedHandler__Impl.Vtbl**);
			global::Windows.System.Threading.IThreadPoolTimer__Impl.Vtbl** unsafe_timer__retval = default(global::Windows.System.Threading.IThreadPoolTimer__Impl.Vtbl**);
			global::Windows.System.Threading.ThreadPoolTimer timer__retval = default(global::Windows.System.Threading.ThreadPoolTimer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.System.Threading.TimerElapsedHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.System.Threading.TimerElapsedHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget47>(global::Windows.System.Threading.TimerElapsedHandler__Impl.Invoke)
								);
				unsafe_timer__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler, 
									delay, 
									&(unsafe_timer__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				timer__retval = (global::Windows.System.Threading.ThreadPoolTimer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_timer__retval), 
									typeof(global::Windows.System.Threading.IThreadPoolTimer).TypeHandle, 
									typeof(global::Windows.System.Threading.ThreadPoolTimer).TypeHandle
								);
				// Return
				return timer__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_timer__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Resources.Core.IResourceMap.GetValue, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Resources_Core_ResourceContext__Windows_ApplicationModel_Resources_Core__ResourceContext *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Resources_Core_ResourceCandidate__Windows_ApplicationModel_Resources_Core__ResourceCandidate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Resources.Core.ResourceCandidate Func_string__ApplicationModel_Resources_Core_ResourceContext__ApplicationModel_Resources_Core_ResourceCandidate__(
					global::System.__ComObject __this, 
					string resource, 
					global::Windows.ApplicationModel.Resources.Core.ResourceContext context, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_resource = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Vtbl** unsafe_context = default(global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Vtbl**);
			global::Windows.ApplicationModel.Resources.Core.IResourceCandidate__Impl.Vtbl** unsafe_value__retval = default(global::Windows.ApplicationModel.Resources.Core.IResourceCandidate__Impl.Vtbl**);
			global::Windows.ApplicationModel.Resources.Core.ResourceCandidate value__retval = default(global::Windows.ApplicationModel.Resources.Core.ResourceCandidate);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_resource = resource)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_resource;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_resource, resource, &(hstring_header_resource), &(unsafe_resource));
					unsafe_context = (global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										context, 
										typeof(global::Windows.ApplicationModel.Resources.Core.IResourceContext).TypeHandle
									);
					unsafe_value__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_resource, 
										unsafe_context, 
										&(unsafe_value__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					value__retval = (global::Windows.ApplicationModel.Resources.Core.ResourceCandidate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_value__retval), 
										typeof(global::Windows.ApplicationModel.Resources.Core.IResourceCandidate).TypeHandle, 
										typeof(global::Windows.ApplicationModel.Resources.Core.ResourceCandidate).TypeHandle
									);
				}
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_context)));
				global::System.GC.KeepAlive(context);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Resources.Core.IResourceMap.GetSubtree, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Resources_Core_ResourceMap__Windows_ApplicationModel_Resources_Core__ResourceMap *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Resources.Core.ResourceMap Func_string__ApplicationModel_Resources_Core_ResourceMap__(
					global::System.__ComObject __this, 
					string reference, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_reference = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.ApplicationModel.Resources.Core.IResourceMap__Impl.Vtbl** unsafe_map__retval = default(global::Windows.ApplicationModel.Resources.Core.IResourceMap__Impl.Vtbl**);
			global::Windows.ApplicationModel.Resources.Core.ResourceMap map__retval = default(global::Windows.ApplicationModel.Resources.Core.ResourceMap);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_reference = reference)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_reference;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_reference, reference, &(hstring_header_reference), &(unsafe_reference));
					unsafe_map__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_reference, 
										&(unsafe_map__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					map__retval = (global::Windows.ApplicationModel.Resources.Core.ResourceMap)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_map__retval), 
										typeof(global::Windows.ApplicationModel.Resources.Core.IResourceMap).TypeHandle, 
										typeof(global::Windows.ApplicationModel.Resources.Core.ResourceMap).TypeHandle
									);
				}
				// Return
				return map__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_map__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyDictionary<string,Windows.ApplicationModel.Resources.Core.NamedResource>.Lookup, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Resources_Core_NamedResource__Windows_ApplicationModel_Resources_Core__NamedResource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Resources.Core.NamedResource Func_string__ApplicationModel_Resources_Core_NamedResource__(
					global::System.__ComObject __this, 
					string key, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_key = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.ApplicationModel.Resources.Core.INamedResource__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Resources.Core.INamedResource__Impl.Vtbl**);
			global::Windows.ApplicationModel.Resources.Core.NamedResource __value__retval = default(global::Windows.ApplicationModel.Resources.Core.NamedResource);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_key = key)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_key;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_key, key, &(hstring_header_key), &(unsafe_key));
					unsafe___value__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_key, 
										&(unsafe___value__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					__value__retval = (global::Windows.ApplicationModel.Resources.Core.NamedResource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe___value__retval), 
										typeof(global::Windows.ApplicationModel.Resources.Core.INamedResource).TypeHandle, 
										typeof(global::Windows.ApplicationModel.Resources.Core.NamedResource).TypeHandle
									);
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyDictionary<string,Windows.ApplicationModel.Resources.Core.NamedResource>.HasKey, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_string__bool__(
					global::System.__ComObject __this, 
					string key, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_key = default(global::System.Runtime.InteropServices.HSTRING);
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_key = key)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_key;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_key, key, &(hstring_header_key), &(unsafe_key));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_key, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
			}
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IReadOnlyDictionary<string,Windows.ApplicationModel.Resources.Core.NamedResource>.Split, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyDictionary_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IMapView_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyDictionary_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IMapView_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out__IReadOnlyDictionary_2_string__ApplicationModel_Resources_Core_NamedResource___out__IReadOnlyDictionary_2_string__ApplicationModel_Resources_Core_NamedResource___(
					global::System.__ComObject __this, 
					out global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource> first, 
					out global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource> second, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyDictionary_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl** unsafe_first = default(global::System.Collections.Generic.IReadOnlyDictionary_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyDictionary_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl** unsafe_second = default(global::System.Collections.Generic.IReadOnlyDictionary_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_first = null;
				unsafe_second = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_first), 
									&(unsafe_second)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				second = (global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_second), 
									typeof(global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>).TypeHandle
								);
				first = (global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_first), 
									typeof(global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>).TypeHandle
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_first)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_second)));
			}
		}

		// Signature, System.Collections.Generic.KeyValuePair<string,Windows.ApplicationModel.Resources.Core.NamedResource>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Resources_Core_NamedResource__Windows_ApplicationModel_Resources_Core__NamedResource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Resources.Core.NamedResource Func_ApplicationModel_Resources_Core_NamedResource__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Resources.Core.INamedResource__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Resources.Core.INamedResource__Impl.Vtbl**);
			global::Windows.ApplicationModel.Resources.Core.NamedResource __value__retval = default(global::Windows.ApplicationModel.Resources.Core.NamedResource);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Resources.Core.NamedResource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Resources.Core.INamedResource).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Resources.Core.NamedResource).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Windows.ApplicationModel.Resources.Core.NamedResource>>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_System_Collections_Generic_KeyValuePair_2_string__Windows_ApplicationModel_Resources_Core_NamedResource____Windows_Foundation_Collections__IIterator_A_Windows_Foundation_Collections_IKeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>> Func__Collections_IIterator_1__KeyValuePair_2_string__ApplicationModel_Resources_Core_NamedResource__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V__V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V__V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<string,Windows.ApplicationModel.Resources.Core.NamedResource>>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource> Func__KeyValuePair_2_string__ApplicationModel_Resources_Core_NamedResource___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl**);
			global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource> __value__retval = default(global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>).TypeHandle
								));
				__value__retval = new global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<string,Windows.ApplicationModel.Resources.Core.NamedResource>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__KeyValuePair_2_string__ApplicationModel_Resources_Core_NamedResource___uint__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ * items
						global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource> pair_items = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>).TypeHandle
										));
						items[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>(pair_items.get_Key(), pair_items.get_Value());
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.ApplicationModel.Resources.Core.IResourceContextStatics2.GetForViewIndependentUse, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Resources_Core_ResourceContext__Windows_ApplicationModel_Resources_Core__ResourceContext *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Resources.Core.ResourceContext Func_ApplicationModel_Resources_Core_ResourceContext__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Vtbl** unsafe_loader__retval = default(global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Vtbl**);
			global::Windows.ApplicationModel.Resources.Core.ResourceContext loader__retval = default(global::Windows.ApplicationModel.Resources.Core.ResourceContext);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_loader__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_loader__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				loader__retval = (global::Windows.ApplicationModel.Resources.Core.ResourceContext)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_loader__retval), 
									typeof(global::Windows.ApplicationModel.Resources.Core.IResourceContext).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Resources.Core.ResourceContext).TypeHandle
								);
				// Return
				return loader__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_loader__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Resources.Core.IResourceContext.get_QualifierValues, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IObservableMap_2_string__string___Windows_Foundation_Collections__IObservableMap_A_string_j_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IObservableMap<string, string> Func__Collections_IObservableMap_2_string__string___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IObservableMap_A_string_j_string_V___Impl.Vtbl** unsafe_value__retval = default(global::Windows.Foundation.Collections.IObservableMap_A_string_j_string_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IObservableMap<string, string> value__retval = default(global::Windows.Foundation.Collections.IObservableMap<string, string>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Foundation.Collections.IObservableMap<string, string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Foundation.Collections.IObservableMap<string, string>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Resources.Core.IResourceContext.get_Languages, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_string___Windows_Foundation_Collections__IVectorView_A_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<string> Func__IReadOnlyList_1_string___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_string_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_string_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<string> value__retval = default(global::System.Collections.Generic.IReadOnlyList<string>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IReadOnlyList<string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<string>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Resources.Core.IResourceContext.put_Languages, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_string___Windows_Foundation_Collections__IVectorView_A_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IReadOnlyList_1_string___(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.IReadOnlyList<string> languages, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_string_V___Impl.Vtbl** unsafe_languages = default(global::System.Collections.Generic.IReadOnlyList_A_string_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_languages = (global::System.Collections.Generic.IReadOnlyList_A_string_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									languages, 
									typeof(global::System.Collections.Generic.IReadOnlyList<string>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_languages
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_languages)));
				global::System.GC.KeepAlive(languages);
			}
		}

		// Signature, System.EventHandler<Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs__Windows_Foundation_Diagnostics__TracingStatusChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object___Diagnostics_TracingStatusChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.Graphics.Display.IDisplayInformationStatics.get_AutoRotationPreferences, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Graphics_Display_DisplayOrientations__Windows_Graphics_Display__DisplayOrientations, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Graphics.Display.DisplayOrientations Func_Graphics_Display_DisplayOrientations__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Graphics.Display.DisplayOrientations unsafe_value__retval;
			global::Windows.Graphics.Display.DisplayOrientations value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Graphics.Display.IDisplayInformationStatics.put_AutoRotationPreferences, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Graphics_Display_DisplayOrientations__Windows_Graphics_Display__DisplayOrientations, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Graphics_Display_DisplayOrientations__(
					global::System.__ComObject __this, 
					global::Windows.Graphics.Display.DisplayOrientations value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.Graphics.Display.IDisplayInformation.get_ResolutionScale, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Graphics_Display_ResolutionScale__Windows_Graphics_Display__ResolutionScale, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Graphics.Display.ResolutionScale Func_Graphics_Display_ResolutionScale__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Graphics.Display.ResolutionScale unsafe_value__retval;
			global::Windows.Graphics.Display.ResolutionScale value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Graphics.Display.IDisplayInformation2.get_RawPixelsPerViewPixel, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] double__double, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static double Func_double__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			double unsafe_value__retval;
			double value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Graphics.Display.IDisplayInformation3.get_DiagonalSizeInInches, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTReferenceMarshaller] System_Nullable_1_double___Windows_Foundation__IReference_A_double_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Nullable<double> Func_Nullable_1_double___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Nullable_A_double_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Nullable_A_double_V___Impl.Vtbl**);
			global::System.Nullable<double> value__retval = default(global::System.Nullable<double>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					value__retval = (double)global::System.Runtime.InteropServices.McgModuleManager.UnboxIfBoxed(
										global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
															((global::System.IntPtr)unsafe_value__retval), 
															typeof(global::Windows.Foundation.IReference<double>).TypeHandle
														), 
										"Windows.Foundation.IReference`1<Double>"
									);
				else
					value__retval = null;
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.IEnumerable<System.Object>>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_object___Windows_Foundation_Collections__IIterable_A_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IEnumerable<object> Func__IEnumerable_1_object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IEnumerable_A_System_Object_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IEnumerable_A_System_Object_V___Impl.Vtbl**);
			global::System.Collections.Generic.IEnumerable<object> __value__retval = default(global::System.Collections.Generic.IEnumerable<object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IEnumerable<object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IEnumerable<object>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.IEnumerable<System.Object>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_IEnumerable_1_object___Windows_Foundation_Collections__IIterable_A_object_V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__IEnumerable_1_object___uint__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.IEnumerable<object>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.IEnumerable_A_System_Object_V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.IEnumerable_A_System_Object_V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.IEnumerable_A_System_Object_V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.IEnumerable_A_System_Object_V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_object___Windows_Foundation_Collections__IIterable_A_object_V_ * items
						items[mcgIdx] = (global::System.Collections.Generic.IEnumerable<object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::System.Collections.Generic.IEnumerable<object>).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_object___Windows_Foundation_Collections__IIterable_A_object_V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<System.Object>>>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_System_Collections_Generic_IEnumerable_1_object____Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Collections_IIterable_A_object_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<object>> Func__IEnumerable_1__IEnumerable_1_object__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_IEnumerable_A_System_Object_V__V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_IEnumerable_A_System_Object_V__V___Impl.Vtbl**);
			global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<object>> __value__retval = default(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<object>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<object>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<object>>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<System.Object>>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_IEnumerable_1_System_Collections_Generic_IEnumerable_1_object____Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Collections_IIterable_A_object_V__V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__IEnumerable_1__IEnumerable_1_object__uint__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<object>>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_IEnumerable_A_System_Object_V__V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_IEnumerable_A_System_Object_V__V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_IEnumerable_A_System_Object_V__V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_IEnumerable_A_System_Object_V__V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_System_Collections_Generic_IEnumerable_1_object____Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Collections_IIterable_A_object_V__V_ * items
						items[mcgIdx] = (global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<object>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<object>>).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_System_Collections_Generic_IEnumerable_1_object____Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Collections_IIterable_A_object_V__V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<string,System.Collections.Generic.IEnumerable<System.Object>>>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__System_Collections_Generic_IEnumerable_1_object____Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_Foundation_Collections_IIterable_A_object_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<object>> Func__KeyValuePair_2_string___IEnumerable_1_object__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_System_Object_V__V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_System_Object_V__V___Impl.Vtbl**);
			global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<object>> __value__retval = default(global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<object>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<object>> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<object>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<object>>).TypeHandle
								));
				__value__retval = new global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<object>>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<string,System.Collections.Generic.IEnumerable<System.Object>>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_string__System_Collections_Generic_IEnumerable_1_object____Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_Foundation_Collections_IIterable_A_object_V__V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__KeyValuePair_2_string___IEnumerable_1_object__uint__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<object>>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_System_Object_V__V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_System_Object_V__V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_System_Object_V__V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_System_Object_V__V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__System_Collections_Generic_IEnumerable_1_object____Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_Foundation_Collections_IIterable_A_object_V__V_ * items
						global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<object>> pair_items = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<object>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<object>>).TypeHandle
										));
						items[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<object>>(pair_items.get_Key(), pair_items.get_Value());
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__System_Collections_Generic_IEnumerable_1_object____Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_Foundation_Collections_IIterable_A_object_V__V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Object,System.Object>>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_System_Collections_Generic_KeyValuePair_2_object__object____Windows_Foundation_Collections__IIterator_A_Windows_Foundation_Collections_IKeyValuePair_A_object_j_object_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<object, object>> Func__Collections_IIterator_1__KeyValuePair_2_object__object__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_KeyValuePair_A_System_Object_j_System_Object_V__V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_KeyValuePair_A_System_Object_j_System_Object_V__V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<object, object>> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<object, object>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<object, object>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<object, object>>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<System.Object,System.Object>>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_object__object___Windows_Foundation_Collections__IKeyValuePair_A_object_j_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<object, object> Func__KeyValuePair_2_object__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_System_Object_j_System_Object_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_System_Object_j_System_Object_V___Impl.Vtbl**);
			global::System.Collections.Generic.KeyValuePair<object, object> __value__retval = default(global::System.Collections.Generic.KeyValuePair<object, object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::Windows.Foundation.Collections.IKeyValuePair<object, object> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<object, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IKeyValuePair<object, object>).TypeHandle
								));
				__value__retval = new global::System.Collections.Generic.KeyValuePair<object, object>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<System.Object,System.Object>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_object__object___Windows_Foundation_Collections__IKeyValuePair_A_object_j_object_V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__KeyValuePair_2_object__object___uint__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.KeyValuePair<object, object>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.KeyValuePair_A_System_Object_j_System_Object_V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.KeyValuePair_A_System_Object_j_System_Object_V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.KeyValuePair_A_System_Object_j_System_Object_V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.KeyValuePair_A_System_Object_j_System_Object_V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_object__object___Windows_Foundation_Collections__IKeyValuePair_A_object_j_object_V_ * items
						global::Windows.Foundation.Collections.IKeyValuePair<object, object> pair_items = ((global::Windows.Foundation.Collections.IKeyValuePair<object, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Foundation.Collections.IKeyValuePair<object, object>).TypeHandle
										));
						items[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<object, object>(pair_items.get_Key(), pair_items.get_Value());
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_object__object___Windows_Foundation_Collections__IKeyValuePair_A_object_j_object_V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Web.Http.Filters.IHttpBaseProtocolFilter.get_CacheControl, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Web_Http_Filters_HttpCacheControl__Windows_Web_Http_Filters__HttpCacheControl *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.Filters.HttpCacheControl Func_Web_Http_Filters_HttpCacheControl__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.Filters.IHttpCacheControl__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Web.Http.Filters.IHttpCacheControl__Impl.Vtbl**);
			global::Windows.Web.Http.Filters.HttpCacheControl value__retval = default(global::Windows.Web.Http.Filters.HttpCacheControl);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Web.Http.Filters.HttpCacheControl)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Web.Http.Filters.IHttpCacheControl).TypeHandle, 
									typeof(global::Windows.Web.Http.Filters.HttpCacheControl).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Web.Http.Filters.IHttpBaseProtocolFilter.put_ClientCertificate, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Security_Cryptography_Certificates_Certificate__(
					global::System.__ComObject __this, 
					global::Windows.Security.Cryptography.Certificates.Certificate value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl** unsafe_value = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.Web.Http.Filters.IHttpBaseProtocolFilter.put_ProxyCredential, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Credentials_PasswordCredential__Windows_Security_Credentials__PasswordCredential *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Security_Credentials_PasswordCredential__(
					global::System.__ComObject __this, 
					global::Windows.Security.Credentials.PasswordCredential value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Credentials.IPasswordCredential__Impl.Vtbl** unsafe_value = default(global::Windows.Security.Credentials.IPasswordCredential__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Security.Credentials.IPasswordCredential__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Security.Credentials.IPasswordCredential).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.Web.Http.Filters.IHttpFilter.SendRequestAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Web_Http_HttpRequestMessage__Windows_Web_Http__HttpRequestMessage *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperationWithProgress_2_Windows_Web_Http_HttpResponseMessage__Windows_Web_Http_HttpProgress___Windows_Foundation__IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> Func_Web_Http_HttpRequestMessage___IAsyncOperationWithProgress_2_Web_Http_HttpResponseMessage__Web_Http_HttpProgress___(
					global::System.__ComObject __this, 
					global::Windows.Web.Http.HttpRequestMessage request, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.IHttpRequestMessage__Impl.Vtbl** unsafe_request = default(global::Windows.Web.Http.IHttpRequestMessage__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl** unsafe_operation__retval = default(global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> operation__retval = default(global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_request = (global::Windows.Web.Http.IHttpRequestMessage__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									request, 
									typeof(global::Windows.Web.Http.IHttpRequestMessage).TypeHandle
								);
				unsafe_operation__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_request, 
									&(unsafe_operation__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				operation__retval = (global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_operation__retval), 
									typeof(global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>).TypeHandle
								);
				// Return
				return operation__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_request)));
				global::System.GC.KeepAlive(request);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_operation__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpRequestMessageFactory.Create, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Web_Http_HttpMethod__Windows_Web_Http__HttpMethod *, [fwd] [in] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Web_Http_HttpMethod__Uri__IntPtr__(
					global::System.__ComObject __this, 
					global::Windows.Web.Http.HttpMethod method, 
					global::System.Uri uri, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.IHttpMethod__Impl.Vtbl** unsafe_method = default(global::Windows.Web.Http.IHttpMethod__Impl.Vtbl**);
			global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl** unsafe_uri = default(global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**);
			global::System.IntPtr unsafe_httpRequestMessage__retval;
			global::System.IntPtr httpRequestMessage__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_method = (global::Windows.Web.Http.IHttpMethod__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									method, 
									typeof(global::Windows.Web.Http.IHttpMethod).TypeHandle
								);
				if (uri != null)
					unsafe_uri = (global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**)global::McgInterop.McgHelpers.SystemUri2WindowsFoundationUri(uri);
				else
					unsafe_uri = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_method, 
									unsafe_uri, 
									&(unsafe_httpRequestMessage__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				httpRequestMessage__retval = unsafe_httpRequestMessage__retval;
				// Return
				return httpRequestMessage__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_method)));
				global::System.GC.KeepAlive(method);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_uri)));
			}
		}

		// Signature, Windows.Web.Http.IHttpRequestMessage.put_Content, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Web_Http_IHttpContent__Windows_Web_Http__IHttpContent *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Web_Http_IHttpContent__(
					global::System.__ComObject __this, 
					global::Windows.Web.Http.IHttpContent value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.IHttpContent__Impl.Vtbl** unsafe_value = default(global::Windows.Web.Http.IHttpContent__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Web.Http.IHttpContent__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Web.Http.IHttpContent).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.Web.Http.IHttpRequestMessage.get_Headers, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Web_Http_Headers_HttpRequestHeaderCollection__Windows_Web_Http_Headers__HttpRequestHeaderCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.Headers.HttpRequestHeaderCollection Func_Web_Http_Headers_HttpRequestHeaderCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.Headers.IHttpRequestHeaderCollection__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Web.Http.Headers.IHttpRequestHeaderCollection__Impl.Vtbl**);
			global::Windows.Web.Http.Headers.HttpRequestHeaderCollection value__retval = default(global::Windows.Web.Http.Headers.HttpRequestHeaderCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Web.Http.Headers.HttpRequestHeaderCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Web.Http.Headers.IHttpRequestHeaderCollection).TypeHandle, 
									typeof(global::Windows.Web.Http.Headers.HttpRequestHeaderCollection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpRequestMessage.get_RequestUri, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Uri Func_Uri__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**);
			global::System.Uri value__retval = default(global::System.Uri);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					value__retval = global::McgInterop.McgHelpers.WindowsFoundationUri2SystemUri(((global::System.__ComObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
											((global::System.IntPtr)unsafe_value__retval), 
											typeof(global::Windows.Foundation.IUriRuntimeClass).TypeHandle
										)));
				else
					value__retval = null;
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpContent.get_Headers, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Web_Http_Headers_HttpContentHeaderCollection__Windows_Web_Http_Headers__HttpContentHeaderCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.Headers.HttpContentHeaderCollection Func_Web_Http_Headers_HttpContentHeaderCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.Headers.IHttpContentHeaderCollection__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Web.Http.Headers.IHttpContentHeaderCollection__Impl.Vtbl**);
			global::Windows.Web.Http.Headers.HttpContentHeaderCollection value__retval = default(global::Windows.Web.Http.Headers.HttpContentHeaderCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Web.Http.Headers.HttpContentHeaderCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Web.Http.Headers.IHttpContentHeaderCollection).TypeHandle, 
									typeof(global::Windows.Web.Http.Headers.HttpContentHeaderCollection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpContent.ReadAsInputStreamAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperationWithProgress_2_Windows_Storage_Streams_IInputStream__ulong___Windows_Foundation__IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong> Func__IAsyncOperationWithProgress_2_Storage_Streams_IInputStream__ulong___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl** unsafe_operation__retval = default(global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong> operation__retval = default(global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_operation__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_operation__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				operation__retval = (global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_operation__retval), 
									typeof(global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong>).TypeHandle
								);
				// Return
				return operation__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_operation__retval)));
			}
		}

		// Signature, Windows.Web.Http.Headers.IHttpContentHeaderCollection.TryAppendWithoutValidation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_string__string__bool__(
					global::System.__ComObject __this, 
					string name, 
					string value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_name = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.HSTRING unsafe_value = default(global::System.Runtime.InteropServices.HSTRING);
			bool succeeded__retval;
			sbyte unsafe_succeeded__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_name = name)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_name;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_name, name, &(hstring_header_name), &(unsafe_name));
				fixed (char* pBuffer_value = value)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_value;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_value, value, &(hstring_header_value), &(unsafe_value));
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_name, 
										unsafe_value, 
										&(unsafe_succeeded__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					succeeded__retval = unsafe_succeeded__retval != 0;
				}
			}
			// Return
			return succeeded__retval;
		}

		// Signature, Windows.Foundation.AsyncOperationProgressHandler<Windows.Storage.Streams.IInputStream,ulong>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperationWithProgress_2_Windows_Storage_Streams_IInputStream__ulong___Windows_Foundation__IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V_ *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperationWithProgress_2_Storage_Streams_IInputStream__ulong___ulong__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong> asyncInfo, 
					ulong progressInfo, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									progressInfo
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IInputStream,ulong>.put_Progress, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationProgressHandler_2_Windows_Storage_Streams_IInputStream__ulong___Windows_Foundation__AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationProgressHandler_2_Storage_Streams_IInputStream__ulong___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget48>(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IInputStream,ulong>.get_Progress, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationProgressHandler_2_Windows_Storage_Streams_IInputStream__ulong___Windows_Foundation__AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong> Func__AsyncOperationProgressHandler_2_Storage_Streams_IInputStream__ulong___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong> __value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget48>(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Storage.Streams.IInputStream,ulong>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperationWithProgress_2_Windows_Storage_Streams_IInputStream__ulong___Windows_Foundation__IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperationWithProgress_2_Storage_Streams_IInputStream__ulong___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IInputStream,ulong>.put_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationWithProgressCompletedHandler_2_Windows_Storage_Streams_IInputStream__ulong___Windows_Foundation__AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationWithProgressCompletedHandler_2_Storage_Streams_IInputStream__ulong___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Storage.Streams.IInputStream, ulong> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Storage.Streams.IInputStream, ulong>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget49>(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IInputStream,ulong>.GetResults, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IInputStream__Windows_Storage_Streams__IInputStream *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.Streams.IInputStream Func_Storage_Streams_IInputStream__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IInputStream__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Storage.Streams.IInputStream__Impl.Vtbl**);
			global::Windows.Storage.Streams.IInputStream __value__retval = default(global::Windows.Storage.Streams.IInputStream);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Storage.Streams.IInputStream)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Storage.Streams.IInputStream).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpResponseMessage.get_Content, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Web_Http_IHttpContent__Windows_Web_Http__IHttpContent *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.IHttpContent Func_Web_Http_IHttpContent__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.IHttpContent__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Web.Http.IHttpContent__Impl.Vtbl**);
			global::Windows.Web.Http.IHttpContent value__retval = default(global::Windows.Web.Http.IHttpContent);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Web.Http.IHttpContent)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Web.Http.IHttpContent).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpResponseMessage.get_Headers, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Web_Http_Headers_HttpResponseHeaderCollection__Windows_Web_Http_Headers__HttpResponseHeaderCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.Headers.HttpResponseHeaderCollection Func_Web_Http_Headers_HttpResponseHeaderCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.Headers.IHttpResponseHeaderCollection__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Web.Http.Headers.IHttpResponseHeaderCollection__Impl.Vtbl**);
			global::Windows.Web.Http.Headers.HttpResponseHeaderCollection value__retval = default(global::Windows.Web.Http.Headers.HttpResponseHeaderCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Web.Http.Headers.HttpResponseHeaderCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Web.Http.Headers.IHttpResponseHeaderCollection).TypeHandle, 
									typeof(global::Windows.Web.Http.Headers.HttpResponseHeaderCollection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpResponseMessage.get_StatusCode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Web_Http_HttpStatusCode__Windows_Web_Http__HttpStatusCode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.HttpStatusCode Func_Web_Http_HttpStatusCode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.HttpStatusCode unsafe_value__retval;
			global::Windows.Web.Http.HttpStatusCode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Web.Http.IHttpResponseMessage.get_Version, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Web_Http_HttpVersion__Windows_Web_Http__HttpVersion, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.HttpVersion Func_Web_Http_HttpVersion__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.HttpVersion unsafe_value__retval;
			global::Windows.Web.Http.HttpVersion value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Foundation.AsyncOperationProgressHandler<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperationWithProgress_2_Windows_Web_Http_HttpResponseMessage__Windows_Web_Http_HttpProgress___Windows_Foundation__IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V_ *, [fwd] [in] [Mcg.CodeGen.StructMarshaller] Windows_Web_Http_HttpProgress__Windows_Web_Http__HttpProgress, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperationWithProgress_2_Web_Http_HttpResponseMessage__Web_Http_HttpProgress___Web_Http_HttpProgress__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> asyncInfo, 
					global::Windows.Web.Http.HttpProgress progressInfo, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**);
			global::Windows.Web.Http.HttpProgress__Impl.UnsafeType unsafe_progressInfo = default(global::Windows.Web.Http.HttpProgress__Impl.UnsafeType);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>).TypeHandle
								);
				global::Windows.Web.Http.HttpProgress__Impl.Marshal__SafeToUnsafe(
									ref progressInfo, 
									out unsafe_progressInfo
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									unsafe_progressInfo
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
				global::Windows.Web.Http.HttpProgress__Impl.Cleanup__Unsafe(ref unsafe_progressInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress>.put_Progress, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationProgressHandler_2_Windows_Web_Http_HttpResponseMessage__Windows_Web_Http_HttpProgress___Windows_Foundation__AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationProgressHandler_2_Web_Http_HttpResponseMessage__Web_Http_HttpProgress___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget50>(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress>.get_Progress, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationProgressHandler_2_Windows_Web_Http_HttpResponseMessage__Windows_Web_Http_HttpProgress___Windows_Foundation__AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> Func__AsyncOperationProgressHandler_2_Web_Http_HttpResponseMessage__Web_Http_HttpProgress___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> __value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget50>(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperationWithProgress_2_Windows_Web_Http_HttpResponseMessage__Windows_Web_Http_HttpProgress___Windows_Foundation__IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperationWithProgress_2_Web_Http_HttpResponseMessage__Web_Http_HttpProgress___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress>.put_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationWithProgressCompletedHandler_2_Windows_Web_Http_HttpResponseMessage__Windows_Web_Http_HttpProgress___Windows_Foundation__AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationWithProgressCompletedHandler_2_Web_Http_HttpResponseMessage__Web_Http_HttpProgress___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget51>(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress>.GetResults, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Web_Http_HttpResponseMessage__Windows_Web_Http__HttpResponseMessage *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.HttpResponseMessage Func_Web_Http_HttpResponseMessage__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.IHttpResponseMessage__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Web.Http.IHttpResponseMessage__Impl.Vtbl**);
			global::Windows.Web.Http.HttpResponseMessage __value__retval = default(global::Windows.Web.Http.HttpResponseMessage);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Web.Http.HttpResponseMessage)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Web.Http.IHttpResponseMessage).TypeHandle, 
									typeof(global::Windows.Web.Http.HttpResponseMessage).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.System.Threading.IThreadPoolStatics.RunAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_System_Threading_WorkItemHandler__Windows_System_Threading__WorkItemHandler *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_System_Threading_WorkItemPriority__Windows_System_Threading__WorkItemPriority, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_System_Threading_WorkItemOptions__Windows_System_Threading__WorkItemOptions, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncAction__Windows_Foundation__IAsyncAction *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncAction Func_Threading_WorkItemHandler__intThreading_WorkItemOptions___IAsyncAction__(
					global::System.__ComObject __this, 
					global::Windows.System.Threading.WorkItemHandler handler, 
					int priority, 
					global::Windows.System.Threading.WorkItemOptions options, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.Threading.WorkItemHandler__Impl.Vtbl** unsafe_handler = default(global::Windows.System.Threading.WorkItemHandler__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction__Impl.Vtbl** unsafe_operation__retval = default(global::Windows.Foundation.IAsyncAction__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction operation__retval = default(global::Windows.Foundation.IAsyncAction);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.System.Threading.WorkItemHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.System.Threading.WorkItemHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget52>(global::Windows.System.Threading.WorkItemHandler__Impl.Invoke)
								);
				unsafe_operation__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler, 
									priority, 
									options, 
									&(unsafe_operation__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				operation__retval = (global::Windows.Foundation.IAsyncAction)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_operation__retval), 
									typeof(global::Windows.Foundation.IAsyncAction).TypeHandle
								);
				// Return
				return operation__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_operation__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Resources.Core.IResourceManagerStatics.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Resources_Core_ResourceManager__Windows_ApplicationModel_Resources_Core__ResourceManager *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Resources.Core.ResourceManager Func_ApplicationModel_Resources_Core_ResourceManager__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Resources.Core.IResourceManager__Impl.Vtbl** unsafe_value__retval = default(global::Windows.ApplicationModel.Resources.Core.IResourceManager__Impl.Vtbl**);
			global::Windows.ApplicationModel.Resources.Core.ResourceManager value__retval = default(global::Windows.ApplicationModel.Resources.Core.ResourceManager);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.ApplicationModel.Resources.Core.ResourceManager)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.ApplicationModel.Resources.Core.IResourceManager).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Resources.Core.ResourceManager).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Resources.Core.IResourceManager.get_MainResourceMap, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Resources_Core_ResourceMap__Windows_ApplicationModel_Resources_Core__ResourceMap *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Resources.Core.ResourceMap Func_ApplicationModel_Resources_Core_ResourceMap__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Resources.Core.IResourceMap__Impl.Vtbl** unsafe_value__retval = default(global::Windows.ApplicationModel.Resources.Core.IResourceMap__Impl.Vtbl**);
			global::Windows.ApplicationModel.Resources.Core.ResourceMap value__retval = default(global::Windows.ApplicationModel.Resources.Core.ResourceMap);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.ApplicationModel.Resources.Core.ResourceMap)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.ApplicationModel.Resources.Core.IResourceMap).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Resources.Core.ResourceMap).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Security.Cryptography.ICryptographicBufferStatics.CreateFromByteArray, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.Streams.IBuffer Func_rg_byte__Storage_Streams_IBuffer__(
					global::System.__ComObject __this, 
					byte[] value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_value_mcgLength = 0;
			byte* unsafe_value;
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_buffer__retval = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::Windows.Storage.Streams.IBuffer buffer__retval = default(global::Windows.Storage.Streams.IBuffer);
			int unsafe___return__;
			try
			{
				// Marshalling
				if (value != null)
					unsafe_value_mcgLength = (uint)value.Length;
				fixed (byte* pinned_value = global::McgInterop.McgCoreHelpers.GetArrayForCompat(value))
				{
					unsafe_value = (byte*)pinned_value;
					unsafe_buffer__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_value_mcgLength, 
										unsafe_value, 
										&(unsafe_buffer__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					buffer__retval = (global::Windows.Storage.Streams.IBuffer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_buffer__retval), 
										typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
									);
				}
				// Return
				return buffer__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_buffer__retval)));
			}
		}

		// Signature, Windows.Security.Cryptography.ICryptographicBufferStatics.CopyToByteArray, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Storage_Streams_IBuffer__out_rg_byte__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IBuffer buffer, 
					out byte[] value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_buffer = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			byte* unsafe_value = default(byte*);
			uint unsafe_value_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_buffer = (global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									buffer, 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				unsafe_value = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_buffer, 
									&(unsafe_value_mcgLength), 
									&(unsafe_value)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value == null)
					value = null;
				else
				{
					value = new byte[unsafe_value_mcgLength];
					if (value != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_value_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [managedbyref] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] byte__unsigned char value
							value[mcgIdx] = unsafe_value[mcgIdx];
						}
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_buffer)));
				global::System.GC.KeepAlive(buffer);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_value);
			}
		}

		// Signature, Windows.Security.Cryptography.ICryptographicBufferStatics.EncodeToBase64String, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static string Func_Storage_Streams_IBuffer__string__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IBuffer buffer, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_buffer = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::System.Runtime.InteropServices.HSTRING unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
			string value__retval = default(string);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_buffer = (global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									buffer, 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_buffer, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_value__retval);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_buffer)));
				global::System.GC.KeepAlive(buffer);
				global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe_value__retval.handle);
			}
		}

		// Signature, Windows.Security.Cryptography.ICryptographicBufferStatics.ConvertStringToBinary, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Security_Cryptography_BinaryStringEncoding__Windows_Security_Cryptography__BinaryStringEncoding, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.Streams.IBuffer Func_string__intStorage_Streams_IBuffer__(
					global::System.__ComObject __this, 
					string value, 
					int encoding, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_value = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_buffer__retval = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::Windows.Storage.Streams.IBuffer buffer__retval = default(global::Windows.Storage.Streams.IBuffer);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_value = value)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_value;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_value, value, &(hstring_header_value), &(unsafe_value));
					unsafe_buffer__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_value, 
										encoding, 
										&(unsafe_buffer__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					buffer__retval = (global::Windows.Storage.Streams.IBuffer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_buffer__retval), 
										typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
									);
				}
				// Return
				return buffer__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_buffer__retval)));
			}
		}

		// Signature, Windows.Security.Cryptography.Core.IHashAlgorithmProviderStatics.OpenAlgorithm, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Core_HashAlgorithmProvider__Windows_Security_Cryptography_Core__HashAlgorithmProvider *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Security.Cryptography.Core.HashAlgorithmProvider Func_string__Security_Cryptography_Core_HashAlgorithmProvider__(
					global::System.__ComObject __this, 
					string algorithm, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_algorithm = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.Security.Cryptography.Core.IHashAlgorithmProvider__Impl.Vtbl** unsafe_provider__retval = default(global::Windows.Security.Cryptography.Core.IHashAlgorithmProvider__Impl.Vtbl**);
			global::Windows.Security.Cryptography.Core.HashAlgorithmProvider provider__retval = default(global::Windows.Security.Cryptography.Core.HashAlgorithmProvider);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_algorithm = algorithm)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_algorithm;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_algorithm, algorithm, &(hstring_header_algorithm), &(unsafe_algorithm));
					unsafe_provider__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_algorithm, 
										&(unsafe_provider__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					provider__retval = (global::Windows.Security.Cryptography.Core.HashAlgorithmProvider)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_provider__retval), 
										typeof(global::Windows.Security.Cryptography.Core.IHashAlgorithmProvider).TypeHandle, 
										typeof(global::Windows.Security.Cryptography.Core.HashAlgorithmProvider).TypeHandle
									);
				}
				// Return
				return provider__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_provider__retval)));
			}
		}

		// Signature, Windows.Security.Cryptography.Core.IHashAlgorithmProvider.HashData, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.Streams.IBuffer Func_Storage_Streams_IBuffer__Storage_Streams_IBuffer__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IBuffer data, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_data = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::Windows.Storage.Streams.IBuffer value__retval = default(global::Windows.Storage.Streams.IBuffer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_data = (global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									data, 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_data, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Storage.Streams.IBuffer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_data)));
				global::System.GC.KeepAlive(data);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.IPackageStatics.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Package__Windows_ApplicationModel__Package *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Package Func_ApplicationModel_Package__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.IPackage__Impl.Vtbl** unsafe_value__retval = default(global::Windows.ApplicationModel.IPackage__Impl.Vtbl**);
			global::Windows.ApplicationModel.Package value__retval = default(global::Windows.ApplicationModel.Package);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.ApplicationModel.Package)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.ApplicationModel.IPackage).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Package).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.IPackage.get_Id, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_PackageId__Windows_ApplicationModel__PackageId *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.PackageId Func_ApplicationModel_PackageId__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.IPackageId__Impl.Vtbl** unsafe_value__retval = default(global::Windows.ApplicationModel.IPackageId__Impl.Vtbl**);
			global::Windows.ApplicationModel.PackageId value__retval = default(global::Windows.ApplicationModel.PackageId);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.ApplicationModel.PackageId)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.ApplicationModel.IPackageId).TypeHandle, 
									typeof(global::Windows.ApplicationModel.PackageId).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.IPackage.get_InstalledLocation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Storage_StorageFolder__Windows_Storage__StorageFolder *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.StorageFolder Func_Storage_StorageFolder__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.IStorageFolder__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Storage.IStorageFolder__Impl.Vtbl**);
			global::Windows.Storage.StorageFolder value__retval = default(global::Windows.Storage.StorageFolder);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Storage.StorageFolder)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Storage.IStorageFolder).TypeHandle, 
									typeof(global::Windows.Storage.StorageFolder).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.IPackageId.get_Version, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Windows_ApplicationModel_PackageVersion__Windows_ApplicationModel__PackageVersion, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.PackageVersion Func_ApplicationModel_PackageVersion__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.PackageVersion unsafe_value__retval;
			global::Windows.ApplicationModel.PackageVersion value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics.TraceOperationCreation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalityTraceLevel__Windows_Foundation_Diagnostics__CausalityTraceLevel, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalitySource__Windows_Foundation_Diagnostics__CausalitySource, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_intintGuid__ulong__string__ulong__(
					global::System.__ComObject __this, 
					int traceLevel, 
					int source, 
					global::System.Guid platformId, 
					ulong operationId, 
					string operationName, 
					ulong relatedContext, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_operationName = default(global::System.Runtime.InteropServices.HSTRING);
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_operationName = operationName)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_operationName;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_operationName, operationName, &(hstring_header_operationName), &(unsafe_operationName));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									traceLevel, 
									source, 
									platformId, 
									operationId, 
									unsafe_operationName, 
									relatedContext
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			// Return
		}

		// Signature, Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics.TraceOperationCompletion, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalityTraceLevel__Windows_Foundation_Diagnostics__CausalityTraceLevel, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalitySource__Windows_Foundation_Diagnostics__CausalitySource, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_intintGuid__ulong__int(
					global::System.__ComObject __this, 
					int traceLevel, 
					int source, 
					global::System.Guid platformId, 
					ulong operationId, 
					int status, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								status
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics.TraceSynchronousWorkCompletion, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalityTraceLevel__Windows_Foundation_Diagnostics__CausalityTraceLevel, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalitySource__Windows_Foundation_Diagnostics__CausalitySource, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalitySynchronousWork__Windows_Foundation_Diagnostics__CausalitySynchronousWork, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_intintint(
					global::System.__ComObject __this, 
					int traceLevel, 
					int source, 
					int work, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								traceLevel, 
								source, 
								work
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics.add_TracingStatusChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs___Windows_Foundation__EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1__Diagnostics_TracingStatusChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V___Impl.Vtbl** unsafe_handler = default(global::System.EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_cookie__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken cookie__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::System.EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget53>(global::System.EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_cookie__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				cookie__retval = unsafe_cookie__retval;
				// Return
				return cookie__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Xaml.IWindowStatics.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Window__Windows_UI_Xaml__Window *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Window Func_UI_Xaml_Window__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IWindow__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.IWindow__Impl.Vtbl**);
			global::Windows.UI.Xaml.Window value__retval = default(global::Windows.UI.Xaml.Window);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Window)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.IWindow).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Window).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.WindowActivatedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_WindowActivatedEventArgs__Windows_UI_Core__WindowActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Core_WindowActivatedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Core.WindowActivatedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Core.IWindowActivatedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Core.IWindowActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Core.IWindowActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Core.IWindowActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IWindow.add_Activated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_WindowActivatedEventHandler__Windows_UI_Xaml__WindowActivatedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_WindowActivatedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.WindowActivatedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.WindowActivatedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.WindowActivatedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.WindowActivatedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.WindowActivatedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget54>(global::Windows.UI.Xaml.WindowActivatedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.WindowClosedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_CoreWindowEventArgs__Windows_UI_Core__CoreWindowEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Core_CoreWindowEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Core.CoreWindowEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Core.ICoreWindowEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Core.ICoreWindowEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Core.ICoreWindowEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Core.ICoreWindowEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IWindow.add_Closed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_WindowClosedEventHandler__Windows_UI_Xaml__WindowClosedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_WindowClosedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.WindowClosedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.WindowClosedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.WindowClosedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.WindowClosedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.WindowClosedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget55>(global::Windows.UI.Xaml.WindowClosedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.WindowSizeChangedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_WindowSizeChangedEventArgs__Windows_UI_Core__WindowSizeChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Core_WindowSizeChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Core.WindowSizeChangedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Core.IWindowSizeChangedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Core.IWindowSizeChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Core.IWindowSizeChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Core.IWindowSizeChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IWindow.add_SizeChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_WindowSizeChangedEventHandler__Windows_UI_Xaml__WindowSizeChangedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_WindowSizeChangedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.WindowSizeChangedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.WindowSizeChangedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.WindowSizeChangedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.WindowSizeChangedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.WindowSizeChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget56>(global::Windows.UI.Xaml.WindowSizeChangedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.WindowVisibilityChangedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_VisibilityChangedEventArgs__Windows_UI_Core__VisibilityChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Core_VisibilityChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Core.VisibilityChangedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Core.IVisibilityChangedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Core.IVisibilityChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Core.IVisibilityChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Core.IVisibilityChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IWindow.add_VisibilityChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_WindowVisibilityChangedEventHandler__Windows_UI_Xaml__WindowVisibilityChangedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_WindowVisibilityChangedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget57>(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Storage.IApplicationDataStatics.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Storage_ApplicationData__Windows_Storage__ApplicationData *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.ApplicationData Func_Storage_ApplicationData__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.IApplicationData__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Storage.IApplicationData__Impl.Vtbl**);
			global::Windows.Storage.ApplicationData value__retval = default(global::Windows.Storage.ApplicationData);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Storage.ApplicationData)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Storage.IApplicationData).TypeHandle, 
									typeof(global::Windows.Storage.ApplicationData).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Storage.IApplicationData.get_LocalSettings, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Storage_ApplicationDataContainer__Windows_Storage__ApplicationDataContainer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.ApplicationDataContainer Func_Storage_ApplicationDataContainer__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.IApplicationDataContainer__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Storage.IApplicationDataContainer__Impl.Vtbl**);
			global::Windows.Storage.ApplicationDataContainer value__retval = default(global::Windows.Storage.ApplicationDataContainer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Storage.ApplicationDataContainer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Storage.IApplicationDataContainer).TypeHandle, 
									typeof(global::Windows.Storage.ApplicationDataContainer).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.System.Profile.IHardwareToken.get_Id, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.Streams.IBuffer Func_Storage_Streams_IBuffer__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::Windows.Storage.Streams.IBuffer value__retval = default(global::Windows.Storage.Streams.IBuffer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Storage.Streams.IBuffer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.System.Profile.IHardwareIdentificationStatics.GetPackageSpecificToken, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_System_Profile_HardwareToken__Windows_System_Profile__HardwareToken *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.System.Profile.HardwareToken Func_Storage_Streams_IBuffer__Profile_HardwareToken__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IBuffer nonce, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_nonce = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::Windows.System.Profile.IHardwareToken__Impl.Vtbl** unsafe_packageSpecificHardwareToken__retval = default(global::Windows.System.Profile.IHardwareToken__Impl.Vtbl**);
			global::Windows.System.Profile.HardwareToken packageSpecificHardwareToken__retval = default(global::Windows.System.Profile.HardwareToken);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_nonce = (global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									nonce, 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				unsafe_packageSpecificHardwareToken__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_nonce, 
									&(unsafe_packageSpecificHardwareToken__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				packageSpecificHardwareToken__retval = (global::Windows.System.Profile.HardwareToken)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_packageSpecificHardwareToken__retval), 
									typeof(global::Windows.System.Profile.IHardwareToken).TypeHandle, 
									typeof(global::Windows.System.Profile.HardwareToken).TypeHandle
								);
				// Return
				return packageSpecificHardwareToken__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_nonce)));
				global::System.GC.KeepAlive(nonce);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_packageSpecificHardwareToken__retval)));
			}
		}

		// Signature, Windows.Storage.Streams.IDataReaderStatics.FromBuffer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Storage_Streams_DataReader__Windows_Storage_Streams__DataReader *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.Streams.DataReader Func_Storage_Streams_IBuffer__Storage_Streams_DataReader__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IBuffer buffer, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_buffer = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::Windows.Storage.Streams.IDataReader__Impl.Vtbl** unsafe_dataReader__retval = default(global::Windows.Storage.Streams.IDataReader__Impl.Vtbl**);
			global::Windows.Storage.Streams.DataReader dataReader__retval = default(global::Windows.Storage.Streams.DataReader);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_buffer = (global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									buffer, 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				unsafe_dataReader__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_buffer, 
									&(unsafe_dataReader__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				dataReader__retval = (global::Windows.Storage.Streams.DataReader)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_dataReader__retval), 
									typeof(global::Windows.Storage.Streams.IDataReader).TypeHandle, 
									typeof(global::Windows.Storage.Streams.DataReader).TypeHandle
								);
				// Return
				return dataReader__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_buffer)));
				global::System.GC.KeepAlive(buffer);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_dataReader__retval)));
			}
		}

		// Signature, Windows.Storage.Streams.IDataReader.ReadBytes, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out_rg_byte__(
					global::System.__ComObject __this, 
					byte[] value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_value_mcgLength = 0;
			byte* unsafe_value;
			int unsafe___return__;
			// Marshalling
			if (value != null)
				unsafe_value_mcgLength = (uint)value.Length;
			fixed (byte* pinned_value = global::McgInterop.McgCoreHelpers.GetArrayForCompat(value))
			{
				unsafe_value = (byte*)pinned_value;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value_mcgLength, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			// Return
		}

		// Signature, Windows.Networking.Connectivity.IConnectionProfile.GetNetworkConnectivityLevel, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Networking_Connectivity_NetworkConnectivityLevel__Windows_Networking_Connectivity__NetworkConnectivityLevel, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.Connectivity.NetworkConnectivityLevel Func_Networking_Connectivity_NetworkConnectivityLevel__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.Connectivity.NetworkConnectivityLevel unsafe_value__retval;
			global::Windows.Networking.Connectivity.NetworkConnectivityLevel value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Networking.Connectivity.IConnectionProfile.get_NetworkAdapter, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_Connectivity_NetworkAdapter__Windows_Networking_Connectivity__NetworkAdapter *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.Connectivity.NetworkAdapter Func_Networking_Connectivity_NetworkAdapter__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.Connectivity.INetworkAdapter__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Networking.Connectivity.INetworkAdapter__Impl.Vtbl**);
			global::Windows.Networking.Connectivity.NetworkAdapter value__retval = default(global::Windows.Networking.Connectivity.NetworkAdapter);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Networking.Connectivity.NetworkAdapter)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Networking.Connectivity.INetworkAdapter).TypeHandle, 
									typeof(global::Windows.Networking.Connectivity.NetworkAdapter).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Networking.Connectivity.INetworkInformationStatics.GetInternetConnectionProfile, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_Connectivity_ConnectionProfile__Windows_Networking_Connectivity__ConnectionProfile *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.Connectivity.ConnectionProfile Func_Networking_Connectivity_ConnectionProfile__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.Connectivity.IConnectionProfile__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Networking.Connectivity.IConnectionProfile__Impl.Vtbl**);
			global::Windows.Networking.Connectivity.ConnectionProfile value__retval = default(global::Windows.Networking.Connectivity.ConnectionProfile);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Networking.Connectivity.ConnectionProfile)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Networking.Connectivity.IConnectionProfile).TypeHandle, 
									typeof(global::Windows.Networking.Connectivity.ConnectionProfile).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Networking.Connectivity.INetworkInformationStatics.GetHostNames, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_Networking_HostName___Windows_Foundation_Collections__IVectorView_A_Windows_Networking_HostName_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.HostName> Func__IReadOnlyList_1_Networking_HostName___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_Networking_HostName_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_Networking_HostName_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.HostName> value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.HostName>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.HostName>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.HostName>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Networking.IHostName.get_Type, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Networking_HostNameType__Windows_Networking__HostNameType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.HostNameType Func_Networking_HostNameType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.HostNameType unsafe_value__retval;
			global::Windows.Networking.HostNameType value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Networking.HostName>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_HostName__Windows_Networking__HostName *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.HostName Func_uint__Networking_HostName__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.IHostName__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Networking.IHostName__Impl.Vtbl**);
			global::Windows.Networking.HostName __value__retval = default(global::Windows.Networking.HostName);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Networking.HostName)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Networking.IHostName).TypeHandle, 
									typeof(global::Windows.Networking.HostName).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Networking.HostName>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_HostName__Windows_Networking__HostName *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Networking_HostName__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.Networking.HostName value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.IHostName__Impl.Vtbl** unsafe_value = default(global::Windows.Networking.IHostName__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Networking.IHostName__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Networking.IHostName).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Networking.HostName>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Networking_HostName__Windows_Networking__HostName * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Networking_HostName__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Networking.HostName[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Networking.IHostName__Impl.Vtbl*** unsafe_items = default(global::Windows.Networking.IHostName__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Networking.IHostName__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Networking.IHostName__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_HostName__Windows_Networking__HostName * items
						items[mcgIdx] = (global::Windows.Networking.HostName)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Networking.IHostName).TypeHandle, 
											typeof(global::Windows.Networking.HostName).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_HostName__Windows_Networking__HostName * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Networking.HostName>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Networking_HostName___Windows_Foundation_Collections__IIterator_A_Windows_Networking_HostName_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.HostName> Func__Collections_IIterator_1_Networking_HostName___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Networking_HostName_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Networking_HostName_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.HostName> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.HostName>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.HostName>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.HostName>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Networking.HostName>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_HostName__Windows_Networking__HostName *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.HostName Func_Networking_HostName__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.IHostName__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Networking.IHostName__Impl.Vtbl**);
			global::Windows.Networking.HostName __value__retval = default(global::Windows.Networking.HostName);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Networking.HostName)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Networking.IHostName).TypeHandle, 
									typeof(global::Windows.Networking.HostName).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Networking.HostName>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Networking_HostName__Windows_Networking__HostName * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Networking_HostName__uint__(
					global::System.__ComObject __this, 
					global::Windows.Networking.HostName[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Networking.IHostName__Impl.Vtbl*** unsafe_items = default(global::Windows.Networking.IHostName__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Networking.IHostName__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Networking.IHostName__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_HostName__Windows_Networking__HostName * items
						items[mcgIdx] = (global::Windows.Networking.HostName)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Networking.IHostName).TypeHandle, 
											typeof(global::Windows.Networking.HostName).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_HostName__Windows_Networking__HostName * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.Media.IVisualTreeHelperStatics.GetChild, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DependencyObject Func_UI_Xaml_DependencyObject__int__UI_Xaml_DependencyObject__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject reference, 
					int childIndex, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_reference = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_child__retval = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.DependencyObject child__retval = default(global::Windows.UI.Xaml.DependencyObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_reference = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									reference, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				unsafe_child__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_reference, 
									childIndex, 
									&(unsafe_child__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				child__retval = (global::Windows.UI.Xaml.DependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_child__retval), 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle, 
									typeof(global::Windows.UI.Xaml.DependencyObject).TypeHandle
								);
				// Return
				return child__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_reference)));
				global::System.GC.KeepAlive(reference);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_child__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Media.IVisualTreeHelperStatics.GetChildrenCount, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_UI_Xaml_DependencyObject__int__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject reference, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_reference = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			int unsafe_count__retval;
			int count__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_reference = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									reference, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_reference, 
									&(unsafe_count__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				count__retval = unsafe_count__retval;
				// Return
				return count__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_reference)));
				global::System.GC.KeepAlive(reference);
			}
		}

		// Signature, Windows.Storage.IFileIOStatics.ReadTextAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_IStorageFile__Windows_Storage__IStorageFile *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_string___Windows_Foundation__IAsyncOperation_A_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<string> Func_Storage_IStorageFile___IAsyncOperation_1_string___(
					global::System.__ComObject __this, 
					global::Windows.Storage.IStorageFile file, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.IStorageFile__Impl.Vtbl** unsafe_file = default(global::Windows.Storage.IStorageFile__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation_A_string_V___Impl.Vtbl** unsafe_textOperation__retval = default(global::Windows.Foundation.IAsyncOperation_A_string_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<string> textOperation__retval = default(global::Windows.Foundation.IAsyncOperation<string>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_file = (global::Windows.Storage.IStorageFile__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									file, 
									typeof(global::Windows.Storage.IStorageFile).TypeHandle
								);
				unsafe_textOperation__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_file, 
									&(unsafe_textOperation__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				textOperation__retval = (global::Windows.Foundation.IAsyncOperation<string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_textOperation__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<string>).TypeHandle
								);
				// Return
				return textOperation__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_file)));
				global::System.GC.KeepAlive(file);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_textOperation__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.ApplicationInitializationCallback>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_ApplicationInitializationCallback__Windows_UI_Xaml__ApplicationInitializationCallback *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.ApplicationInitializationCallback Func_UI_Xaml_ApplicationInitializationCallback__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ApplicationInitializationCallback__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.ApplicationInitializationCallback__Impl.Vtbl**);
			global::Windows.UI.Xaml.ApplicationInitializationCallback __value__retval = default(global::Windows.UI.Xaml.ApplicationInitializationCallback);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.ApplicationInitializationCallback)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.ApplicationInitializationCallback).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget0>(global::Windows.UI.Xaml.ApplicationInitializationCallback__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.System.Threading.WorkItemHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_System_Threading_WorkItemHandler__Windows_System_Threading__WorkItemHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.System.Threading.WorkItemHandler Func_Threading_WorkItemHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.Threading.WorkItemHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.System.Threading.WorkItemHandler__Impl.Vtbl**);
			global::Windows.System.Threading.WorkItemHandler __value__retval = default(global::Windows.System.Threading.WorkItemHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.System.Threading.WorkItemHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.System.Threading.WorkItemHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget52>(global::Windows.System.Threading.WorkItemHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Graphics.DirectX.Direct3D11.Direct3DMultisampleDescription>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Windows_Graphics_DirectX_Direct3D11_Direct3DMultisampleDescription__Windows_Graphics_DirectX_Direct3D11__Direct3DMultisampleDescription, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Graphics.DirectX.Direct3D11.Direct3DMultisampleDescription Func_Graphics_DirectX_Direct3D11_Direct3DMultisampleDescription__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Graphics.DirectX.Direct3D11.Direct3DMultisampleDescription unsafe___value__retval;
			global::Windows.Graphics.DirectX.Direct3D11.Direct3DMultisampleDescription __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Foundation.Collections.MapChangedEventHandler<string,string>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_Collections_MapChangedEventHandler_2_string__string___Windows_Foundation_Collections__MapChangedEventHandler_A_string_j_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.MapChangedEventHandler<string, string> Func__Collections_MapChangedEventHandler_2_string__string___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.MapChangedEventHandler_A_string_j_string_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.MapChangedEventHandler_A_string_j_string_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.MapChangedEventHandler<string, string> __value__retval = default(global::Windows.Foundation.Collections.MapChangedEventHandler<string, string>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.MapChangedEventHandler<string, string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.MapChangedEventHandler<string, string>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget46>(global::Windows.Foundation.Collections.MapChangedEventHandler_A_string_j_string_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.System.Threading.TimerElapsedHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_System_Threading_TimerElapsedHandler__Windows_System_Threading__TimerElapsedHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.System.Threading.TimerElapsedHandler Func_Threading_TimerElapsedHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.Threading.TimerElapsedHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.System.Threading.TimerElapsedHandler__Impl.Vtbl**);
			global::Windows.System.Threading.TimerElapsedHandler __value__retval = default(global::Windows.System.Threading.TimerElapsedHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.System.Threading.TimerElapsedHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.System.Threading.TimerElapsedHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget47>(global::Windows.System.Threading.TimerElapsedHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs___Windows_Foundation__EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs> Func_EventHandler_1__Diagnostics_TracingStatusChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs> __value__retval = default(global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget53>(global::System.EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<string,double>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_string__double___Windows_Foundation_Collections__IKeyValuePair_A_string_j_double_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<string, double>[] Func_rg__KeyValuePair_2_string__double___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_string_j_double_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_string_j_double_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<string, double>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<string, double>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<string, double>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__double___Windows_Foundation_Collections__IKeyValuePair_A_string_j_double_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<string, double> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<string, double>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, double>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<string, double>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__double___Windows_Foundation_Collections__IKeyValuePair_A_string_j_double_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.Core.CoreApplicationView,Windows.ApplicationModel.Activation.IActivatedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Activation_IActivatedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Core.CoreApplicationView, global::Windows.ApplicationModel.Activation.IActivatedEventArgs> Func__TypedEventHandler_2_ApplicationModel_Core_CoreApplicationView__ApplicationModel_Activation_IActivatedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Core.CoreApplicationView, global::Windows.ApplicationModel.Activation.IActivatedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Core.CoreApplicationView, global::Windows.ApplicationModel.Activation.IActivatedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Core.CoreApplicationView, global::Windows.ApplicationModel.Activation.IActivatedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Core.CoreApplicationView, global::Windows.ApplicationModel.Activation.IActivatedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget23>(global::Windows.Foundation.TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.AsyncOperationCompletedHandler<Windows.Devices.Enumeration.Pnp.PnpObjectCollection>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_Devices_Enumeration_Pnp_PnpObjectCollection___Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection> Func__AsyncOperationCompletedHandler_1_Devices_Enumeration_Pnp_PnpObjectCollection___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection> __value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget45>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeer>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeer___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeer___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeer>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer Func_UI_Xaml_Automation_Peers_IAutomationPeer__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeer>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeer__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeerOverrides___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides Func_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeerProtected___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected Func_UI_Xaml_Automation_Peers_IAutomationPeerProtected__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeerProtected__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeer2___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer2_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeer2___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer2_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer2_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2 Func_UI_Xaml_Automation_Peers_IAutomationPeer2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeer2__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2 Func_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeer3___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer3_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeer3___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer3_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer3_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3 Func_UI_Xaml_Automation_Peers_IAutomationPeer3__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeer3__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3 Func_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeer4___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer4_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeer4___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer4_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer4_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4 Func_UI_Xaml_Automation_Peers_IAutomationPeer4__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeer4__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4 Func_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer Func_uint__UI_Xaml_Automation_Peers_IAutomationPeer__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeer__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeer__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides Func_uint__UI_Xaml_Automation_Peers_IAutomationPeerOverrides__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected Func_uint__UI_Xaml_Automation_Peers_IAutomationPeerProtected__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeerProtected__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeerProtected__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2 Func_uint__UI_Xaml_Automation_Peers_IAutomationPeer2__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeer2__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeer2__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2 Func_uint__UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3 Func_uint__UI_Xaml_Automation_Peers_IAutomationPeer3__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeer3__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeer3__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3 Func_uint__UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4 Func_uint__UI_Xaml_Automation_Peers_IAutomationPeer4__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeer4__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeer4__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4 Func_uint__UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation Func_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<string,bool>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_string__bool___Windows_Foundation_Collections__IKeyValuePair_A_string_j_bool_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<string, bool>[] Func_rg__KeyValuePair_2_string__bool___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_string_j_bool_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_string_j_bool_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<string, bool>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<string, bool>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<string, bool>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__bool___Windows_Foundation_Collections__IKeyValuePair_A_string_j_bool_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<string, bool> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<string, bool>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, bool>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<string, bool>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__bool___Windows_Foundation_Collections__IKeyValuePair_A_string_j_bool_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, System.Nullable<Windows.System.Threading.WorkItemPriority>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_System_Threading_WorkItemPriority__Windows_System_Threading__WorkItemPriority, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.System.Threading.WorkItemPriority Func_Threading_WorkItemPriority__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.Threading.WorkItemPriority unsafe___value__retval;
			global::Windows.System.Threading.WorkItemPriority __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.System.Threading.WorkItemOptions>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_System_Threading_WorkItemOptions__Windows_System_Threading__WorkItemOptions, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.System.Threading.WorkItemOptions Func_Threading_WorkItemOptions__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.Threading.WorkItemOptions unsafe___value__retval;
			global::Windows.System.Threading.WorkItemOptions __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Core.CoreDispatcherPriority>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Core_CoreDispatcherPriority__Windows_UI_Core__CoreDispatcherPriority, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Core.CoreDispatcherPriority Func_UI_Core_CoreDispatcherPriority__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Core.CoreDispatcherPriority unsafe___value__retval;
			global::Windows.UI.Core.CoreDispatcherPriority __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Foundation.Diagnostics.CausalityTraceLevel>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalityTraceLevel__Windows_Foundation_Diagnostics__CausalityTraceLevel, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Diagnostics.CausalityTraceLevel Func__Diagnostics_CausalityTraceLevel__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Diagnostics.CausalityTraceLevel unsafe___value__retval;
			global::Windows.Foundation.Diagnostics.CausalityTraceLevel __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Foundation.Diagnostics.CausalitySource>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalitySource__Windows_Foundation_Diagnostics__CausalitySource, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Diagnostics.CausalitySource Func__Diagnostics_CausalitySource__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Diagnostics.CausalitySource unsafe___value__retval;
			global::Windows.Foundation.Diagnostics.CausalitySource __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Foundation.Diagnostics.CausalityRelation>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalityRelation__Windows_Foundation_Diagnostics__CausalityRelation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Diagnostics.CausalityRelation Func__Diagnostics_CausalityRelation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Diagnostics.CausalityRelation unsafe___value__retval;
			global::Windows.Foundation.Diagnostics.CausalityRelation __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Foundation.Diagnostics.CausalitySynchronousWork>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalitySynchronousWork__Windows_Foundation_Diagnostics__CausalitySynchronousWork, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Diagnostics.CausalitySynchronousWork Func__Diagnostics_CausalitySynchronousWork__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Diagnostics.CausalitySynchronousWork unsafe___value__retval;
			global::Windows.Foundation.Diagnostics.CausalitySynchronousWork __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_Primitives_ComponentResourceLocation__Windows_UI_Xaml_Controls_Primitives__ComponentResourceLocation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation Func_UI_Xaml_Controls_Primitives_ComponentResourceLocation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation unsafe___value__retval;
			global::Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Security.Cryptography.BinaryStringEncoding>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Security_Cryptography_BinaryStringEncoding__Windows_Security_Cryptography__BinaryStringEncoding, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Security.Cryptography.BinaryStringEncoding Func_Security_Cryptography_BinaryStringEncoding__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.BinaryStringEncoding unsafe___value__retval;
			global::Windows.Security.Cryptography.BinaryStringEncoding __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Devices.Enumeration.Pnp.PnpObjectType>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Devices_Enumeration_Pnp_PnpObjectType__Windows_Devices_Enumeration_Pnp__PnpObjectType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Enumeration.Pnp.PnpObjectType Func_Devices_Enumeration_Pnp_PnpObjectType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Enumeration.Pnp.PnpObjectType unsafe___value__retval;
			global::Windows.Devices.Enumeration.Pnp.PnpObjectType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Web.Http.Filters.HttpCacheReadBehavior>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Web_Http_Filters_HttpCacheReadBehavior__Windows_Web_Http_Filters__HttpCacheReadBehavior, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.Filters.HttpCacheReadBehavior Func_Web_Http_Filters_HttpCacheReadBehavior__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.Filters.HttpCacheReadBehavior unsafe___value__retval;
			global::Windows.Web.Http.Filters.HttpCacheReadBehavior __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<System.Object,System.Object>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_object__object___Windows_Foundation_Collections__IKeyValuePair_A_object_j_object_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<object, object>[] Func_rg__KeyValuePair_2_object__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_System_Object_j_System_Object_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_System_Object_j_System_Object_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<object, object>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<object, object>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<object, object>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_object__object___Windows_Foundation_Collections__IKeyValuePair_A_object_j_object_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<object, object> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<object, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<object, object>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<object, object>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_object__object___Windows_Foundation_Collections__IKeyValuePair_A_object_j_object_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, System.Nullable<Windows.System.Profile.ProfileHardwareTokenContract>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Windows_System_Profile_ProfileHardwareTokenContract__Windows_System_Profile__ProfileHardwareTokenContract, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.System.Profile.ProfileHardwareTokenContract Func_Profile_ProfileHardwareTokenContract__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.Profile.ProfileHardwareTokenContract unsafe___value__retval;
			global::Windows.System.Profile.ProfileHardwareTokenContract __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.WindowActivatedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_WindowActivatedEventHandler__Windows_UI_Xaml__WindowActivatedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.WindowActivatedEventHandler Func_UI_Xaml_WindowActivatedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.WindowActivatedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.WindowActivatedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.WindowActivatedEventHandler __value__retval = default(global::Windows.UI.Xaml.WindowActivatedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.WindowActivatedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.WindowActivatedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget54>(global::Windows.UI.Xaml.WindowActivatedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.WindowClosedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_WindowClosedEventHandler__Windows_UI_Xaml__WindowClosedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.WindowClosedEventHandler Func_UI_Xaml_WindowClosedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.WindowClosedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.WindowClosedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.WindowClosedEventHandler __value__retval = default(global::Windows.UI.Xaml.WindowClosedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.WindowClosedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.WindowClosedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget55>(global::Windows.UI.Xaml.WindowClosedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.WindowSizeChangedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_WindowSizeChangedEventHandler__Windows_UI_Xaml__WindowSizeChangedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.WindowSizeChangedEventHandler Func_UI_Xaml_WindowSizeChangedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.WindowSizeChangedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.WindowSizeChangedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.WindowSizeChangedEventHandler __value__retval = default(global::Windows.UI.Xaml.WindowSizeChangedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.WindowSizeChangedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.WindowSizeChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget56>(global::Windows.UI.Xaml.WindowSizeChangedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.WindowVisibilityChangedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_WindowVisibilityChangedEventHandler__Windows_UI_Xaml__WindowVisibilityChangedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler Func_UI_Xaml_WindowVisibilityChangedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler __value__retval = default(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget57>(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation Func_uint__UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.KeyValuePair<string,System.Collections.Generic.IEnumerable<string>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_string___Windows_Foundation_Collections__IIterable_A_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IEnumerable<string> Func__IEnumerable_1_string___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IEnumerable_A_string_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IEnumerable_A_string_V___Impl.Vtbl**);
			global::System.Collections.Generic.IEnumerable<string> __value__retval = default(global::System.Collections.Generic.IEnumerable<string>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IEnumerable<string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IEnumerable<string>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.KeyValuePair<System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken,System.EventHandler<string>>.get_Key, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe___value__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<string,Windows.UI.Xaml.Markup.IXamlType>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_string__Windows_UI_Xaml_Markup_IXamlType___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlType_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlType>[] Func_rg__KeyValuePair_2_string__UI_Xaml_Markup_IXamlType___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlType_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlType_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlType>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlType>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlType>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_UI_Xaml_Markup_IXamlType___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlType_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlType> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlType>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlType>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlType>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_UI_Xaml_Markup_IXamlType___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlType_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<System.Type,Windows.UI.Xaml.Markup.IXamlType>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_System_Type__Windows_UI_Xaml_Markup_IXamlType___Windows_Foundation_Collections__IKeyValuePair_A_Windows_UI_Xaml_Interop_TypeName_j_Windows_UI_Xaml_Markup_IXamlType_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>[] Func_rg__KeyValuePair_2_Type__UI_Xaml_Markup_IXamlType___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_System_Type_j_Windows_UI_Xaml_Markup_IXamlType_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_System_Type_j_Windows_UI_Xaml_Markup_IXamlType_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_System_Type__Windows_UI_Xaml_Markup_IXamlType___Windows_Foundation_Collections__IKeyValuePair_A_Windows_UI_Xaml_Interop_TypeName_j_Windows_UI_Xaml_Markup_IXamlType_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_System_Type__Windows_UI_Xaml_Markup_IXamlType___Windows_Foundation_Collections__IKeyValuePair_A_Windows_UI_Xaml_Interop_TypeName_j_Windows_UI_Xaml_Markup_IXamlType_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<string,Windows.UI.Xaml.Markup.IXamlMember>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_string__Windows_UI_Xaml_Markup_IXamlMember___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlMember_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlMember>[] Func_rg__KeyValuePair_2_string__UI_Xaml_Markup_IXamlMember___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlMember_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlMember_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlMember>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlMember>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlMember>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_UI_Xaml_Markup_IXamlMember___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlMember_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlMember> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlMember>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlMember>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlMember>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_UI_Xaml_Markup_IXamlMember___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlMember_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<System.Type,System.Type>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_System_Type__System_Type___Windows_Foundation_Collections__IKeyValuePair_A_Windows_UI_Xaml_Interop_TypeName_j_Windows_UI_Xaml_Interop_TypeName_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<global::System.Type, global::System.Type>[] Func_rg__KeyValuePair_2_Type__Type___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_System_Type_j_System_Type_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_System_Type_j_System_Type_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<global::System.Type, global::System.Type>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<global::System.Type, global::System.Type>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<global::System.Type, global::System.Type>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_System_Type__System_Type___Windows_Foundation_Collections__IKeyValuePair_A_Windows_UI_Xaml_Interop_TypeName_j_Windows_UI_Xaml_Interop_TypeName_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<global::System.Type, global::System.Type> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<global::System.Type, global::System.Type>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<global::System.Type, global::System.Type>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<global::System.Type, global::System.Type>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_System_Type__System_Type___Windows_Foundation_Collections__IKeyValuePair_A_Windows_UI_Xaml_Interop_TypeName_j_Windows_UI_Xaml_Interop_TypeName_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<System.Object,string>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_object__string___Windows_Foundation_Collections__IKeyValuePair_A_object_j_string_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<object, string>[] Func_rg__KeyValuePair_2_object__string___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_System_Object_j_string_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_System_Object_j_string_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<object, string>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<object, string>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<object, string>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_object__string___Windows_Foundation_Collections__IKeyValuePair_A_object_j_string_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<object, string> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<object, string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<object, string>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<object, string>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_object__string___Windows_Foundation_Collections__IKeyValuePair_A_object_j_string_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Automation.Peers.PatternInterface>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Automation_Peers_PatternInterface__Windows_UI_Xaml_Automation_Peers__PatternInterface, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.PatternInterface Func_UI_Xaml_Automation_Peers_PatternInterface__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.PatternInterface unsafe___value__retval;
			global::Windows.UI.Xaml.Automation.Peers.PatternInterface __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationNavigationDirection__Windows_UI_Xaml_Automation_Peers__AutomationNavigationDirection, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection Func_UI_Xaml_Automation_Peers_AutomationNavigationDirection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection unsafe___value__retval;
			global::Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<string,Windows.ApplicationModel.Resources.Core.NamedResource>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>[] Func_rg__KeyValuePair_2_string__ApplicationModel_Resources_Core_NamedResource___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken,System.EventHandler<string>>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__System_EventHandler_1_string____Windows_Foundation_Collections__IKeyValuePair_A_Windows_Foundation_EventRegistrationToken_j_Windows_Foundation_EventHandler_A_string_V__V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken, global::System.EventHandler<string>>[] Func_rg__KeyValuePair_2__WindowsRuntime_EventRegistrationToken__EventHandler_1_string__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken_j_System_EventHandler_A_string_V__V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken_j_System_EventHandler_A_string_V__V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken, global::System.EventHandler<string>>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken, global::System.EventHandler<string>>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken, global::System.EventHandler<string>>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__System_EventHandler_1_string____Windows_Foundation_Collections__IKeyValuePair_A_Windows_Foundation_EventRegistrationToken_j_Windows_Foundation_EventHandler_A_string_V__V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken, global::System.EventHandler<string>> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken, global::System.EventHandler<string>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken, global::System.EventHandler<string>>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken, global::System.EventHandler<string>>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__System_EventHandler_1_string____Windows_Foundation_Collections__IKeyValuePair_A_Windows_Foundation_EventRegistrationToken_j_Windows_Foundation_EventHandler_A_string_V__V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Networking.IHostName>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Networking_IHostName___Windows_Foundation_Collections__IIterator_A_Windows_Networking_IHostName_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.IHostName> Func__Collections_IIterator_1_Networking_IHostName___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Networking_IHostName_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Networking_IHostName_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.IHostName> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.IHostName>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.IHostName>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.IHostName>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Networking.IHostName>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Networking_IHostName__Windows_Networking__IHostName *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.IHostName Func_Networking_IHostName__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.IHostName__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Networking.IHostName__Impl.Vtbl**);
			global::Windows.Networking.IHostName __value__retval = default(global::Windows.Networking.IHostName);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Networking.IHostName)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Networking.IHostName).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Networking.IHostName>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Networking_IHostName__Windows_Networking__IHostName * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Networking_IHostName__uint__(
					global::System.__ComObject __this, 
					global::Windows.Networking.IHostName[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Networking.IHostName__Impl.Vtbl*** unsafe_items = default(global::Windows.Networking.IHostName__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Networking.IHostName__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Networking.IHostName__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Networking_IHostName__Windows_Networking__IHostName * items
						items[mcgIdx] = (global::Windows.Networking.IHostName)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Networking.IHostName).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Networking_IHostName__Windows_Networking__IHostName * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Foundation.IStringable>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Foundation_IStringable___Windows_Foundation_Collections__IIterator_A_Windows_Foundation_IStringable_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.IStringable> Func__Collections_IIterator_1__IStringable___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Foundation_IStringable_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Foundation_IStringable_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.IStringable> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.IStringable>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.IStringable>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.IStringable>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Foundation.IStringable>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IStringable__Windows_Foundation__IStringable *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IStringable Func__IStringable__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IStringable__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.IStringable__Impl.Vtbl**);
			global::Windows.Foundation.IStringable __value__retval = default(global::Windows.Foundation.IStringable);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.IStringable)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.IStringable).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Foundation.IStringable>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Foundation_IStringable__Windows_Foundation__IStringable * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__IStringable__uint__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IStringable[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Foundation.IStringable__Impl.Vtbl*** unsafe_items = default(global::Windows.Foundation.IStringable__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Foundation.IStringable__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Foundation.IStringable__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IStringable__Windows_Foundation__IStringable * items
						items[mcgIdx] = (global::Windows.Foundation.IStringable)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Foundation.IStringable).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IStringable__Windows_Foundation__IStringable * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Networking.IHostName>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Networking_IHostName__Windows_Networking__IHostName *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.IHostName Func_uint__Networking_IHostName__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.IHostName__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Networking.IHostName__Impl.Vtbl**);
			global::Windows.Networking.IHostName __value__retval = default(global::Windows.Networking.IHostName);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Networking.IHostName)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Networking.IHostName).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Networking.IHostName>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Networking_IHostName__Windows_Networking__IHostName *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Networking_IHostName__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.Networking.IHostName value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.IHostName__Impl.Vtbl** unsafe_value = default(global::Windows.Networking.IHostName__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Networking.IHostName__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Networking.IHostName).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Networking.IHostName>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Networking_IHostName__Windows_Networking__IHostName * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Networking_IHostName__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Networking.IHostName[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Networking.IHostName__Impl.Vtbl*** unsafe_items = default(global::Windows.Networking.IHostName__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Networking.IHostName__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Networking.IHostName__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Networking_IHostName__Windows_Networking__IHostName * items
						items[mcgIdx] = (global::Windows.Networking.IHostName)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Networking.IHostName).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Networking_IHostName__Windows_Networking__IHostName * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Foundation.IStringable>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IStringable__Windows_Foundation__IStringable *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IStringable Func_uint___IStringable__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IStringable__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.IStringable__Impl.Vtbl**);
			global::Windows.Foundation.IStringable __value__retval = default(global::Windows.Foundation.IStringable);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.IStringable)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.IStringable).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Foundation.IStringable>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IStringable__Windows_Foundation__IStringable *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func__IStringable__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IStringable value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IStringable__Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.IStringable__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.IStringable__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Foundation.IStringable).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Foundation.IStringable>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Foundation_IStringable__Windows_Foundation__IStringable * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg__IStringable__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Foundation.IStringable[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Foundation.IStringable__Impl.Vtbl*** unsafe_items = default(global::Windows.Foundation.IStringable__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Foundation.IStringable__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Foundation.IStringable__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IStringable__Windows_Foundation__IStringable * items
						items[mcgIdx] = (global::Windows.Foundation.IStringable)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Foundation.IStringable).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IStringable__Windows_Foundation__IStringable * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.EventHandler<string>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_EventHandler_1_string___Windows_Foundation__EventHandler_A_string_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<string>[] Func_rg_EventHandler_1_string___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_string_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.EventHandler_A_string_V___Impl.Vtbl***);
			global::System.EventHandler<string>[] __value__retval = default(global::System.EventHandler<string>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.EventHandler<string>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_string___Windows_Foundation__EventHandler_A_string_V_ * __value__retval
							__value__retval[mcgIdx] = (global::System.EventHandler<string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::System.EventHandler<string>).TypeHandle, 
												global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget41>(global::System.EventHandler_A_string_V___Impl.Invoke)
											);
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_string___Windows_Foundation__EventHandler_A_string_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<string,System.Collections.Generic.IEnumerable<string>>>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__System_Collections_Generic_IEnumerable_1_string____Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_Foundation_Collections_IIterable_A_string_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>> Func__KeyValuePair_2_string___IEnumerable_1_string__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_string_V__V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_string_V__V___Impl.Vtbl**);
			global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>> __value__retval = default(global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>).TypeHandle
								));
				__value__retval = new global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<string,System.Collections.Generic.IEnumerable<string>>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_string__System_Collections_Generic_IEnumerable_1_string____Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_Foundation_Collections_IIterable_A_string_V__V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__KeyValuePair_2_string___IEnumerable_1_string__uint__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_string_V__V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_string_V__V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_string_V__V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_string_V__V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__System_Collections_Generic_IEnumerable_1_string____Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_Foundation_Collections_IIterable_A_string_V__V_ * items
						global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>> pair_items = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>).TypeHandle
										));
						items[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>(pair_items.get_Key(), pair_items.get_Value());
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__System_Collections_Generic_IEnumerable_1_string____Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_Foundation_Collections_IIterable_A_string_V__V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Nullable<Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationWithProgressCompletedHandler_2_Windows_Web_Http_HttpResponseMessage__Windows_Web_Http_HttpProgress___Windows_Foundation__AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> Func__AsyncOperationWithProgressCompletedHandler_2_Web_Http_HttpResponseMessage__Web_Http_HttpProgress___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> __value__retval = default(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget51>(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Web.Http.HttpProgress>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.StructMarshaller] Windows_Web_Http_HttpProgress__Windows_Web_Http__HttpProgress, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.HttpProgress Func_Web_Http_HttpProgress__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.HttpProgress__Impl.UnsafeType unsafe___value__retval = default(global::Windows.Web.Http.HttpProgress__Impl.UnsafeType);
			global::Windows.Web.Http.HttpProgress __value__retval = default(global::Windows.Web.Http.HttpProgress);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = default(global::Windows.Web.Http.HttpProgress__Impl.UnsafeType);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::Windows.Web.Http.HttpProgress__Impl.Marshal__UnsafeToSafe(
									ref unsafe___value__retval, 
									out __value__retval
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::Windows.Web.Http.HttpProgress__Impl.Cleanup__Unsafe(ref unsafe___value__retval);
			}
		}

		// Signature, System.Nullable<Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Storage.Streams.IInputStream,ulong>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationWithProgressCompletedHandler_2_Windows_Storage_Streams_IInputStream__ulong___Windows_Foundation__AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Storage.Streams.IInputStream, ulong> Func__AsyncOperationWithProgressCompletedHandler_2_Storage_Streams_IInputStream__ulong___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Storage.Streams.IInputStream, ulong> __value__retval = default(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Storage.Streams.IInputStream, ulong>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Storage.Streams.IInputStream, ulong>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Storage.Streams.IInputStream, ulong>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget49>(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Web.Http.HttpProgressStage>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Web_Http_HttpProgressStage__Windows_Web_Http__HttpProgressStage, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.HttpProgressStage Func_Web_Http_HttpProgressStage__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.HttpProgressStage unsafe___value__retval;
			global::Windows.Web.Http.HttpProgressStage __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Security.Cryptography.Certificates.ICertificateQuery.get_EnhancedKeyUsages, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IList_1_string___Windows_Foundation_Collections__IVector_A_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IList<string> Func__IList_1_string___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_string_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_string_V___Impl.Vtbl**);
			global::System.Collections.Generic.IList<string> value__retval = default(global::System.Collections.Generic.IList<string>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IList<string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<string>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpStreamContentFactory.CreateFromInputStream, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IInputStream__Windows_Storage_Streams__IInputStream *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Storage_Streams_IInputStream__IntPtr__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IInputStream content, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IInputStream__Impl.Vtbl** unsafe_content = default(global::Windows.Storage.Streams.IInputStream__Impl.Vtbl**);
			global::System.IntPtr unsafe_streamContent__retval;
			global::System.IntPtr streamContent__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_content = (global::Windows.Storage.Streams.IInputStream__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									content, 
									typeof(global::Windows.Storage.Streams.IInputStream).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_content, 
									&(unsafe_streamContent__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				streamContent__retval = unsafe_streamContent__retval;
				// Return
				return streamContent__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_content)));
				global::System.GC.KeepAlive(content);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.Certificate>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Security.Cryptography.Certificates.Certificate Func_uint__Security_Cryptography_Certificates_Certificate__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**);
			global::Windows.Security.Cryptography.Certificates.Certificate __value__retval = default(global::Windows.Security.Cryptography.Certificates.Certificate);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Security.Cryptography.Certificates.Certificate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle, 
									typeof(global::Windows.Security.Cryptography.Certificates.Certificate).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.Certificate>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Security_Cryptography_Certificates_Certificate__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.Security.Cryptography.Certificates.Certificate value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl** unsafe_value = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.Certificate>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Security_Cryptography_Certificates_Certificate__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Security.Cryptography.Certificates.Certificate[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl*** unsafe_items = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate * items
						items[mcgIdx] = (global::Windows.Security.Cryptography.Certificates.Certificate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle, 
											typeof(global::Windows.Security.Cryptography.Certificates.Certificate).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Security.Cryptography.Certificates.Certificate>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Security_Cryptography_Certificates_Certificate___Windows_Foundation_Collections__IIterator_A_Windows_Security_Cryptography_Certificates_Certificate_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.Certificate> Func__Collections_IIterator_1_Security_Cryptography_Certificates_Certificate___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Security_Cryptography_Certificates_Certificate_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Security_Cryptography_Certificates_Certificate_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.Certificate> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.Certificate>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.Certificate>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.Certificate>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Security.Cryptography.Certificates.Certificate>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Security.Cryptography.Certificates.Certificate Func_Security_Cryptography_Certificates_Certificate__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**);
			global::Windows.Security.Cryptography.Certificates.Certificate __value__retval = default(global::Windows.Security.Cryptography.Certificates.Certificate);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Security.Cryptography.Certificates.Certificate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle, 
									typeof(global::Windows.Security.Cryptography.Certificates.Certificate).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Security.Cryptography.Certificates.Certificate>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Security_Cryptography_Certificates_Certificate__uint__(
					global::System.__ComObject __this, 
					global::Windows.Security.Cryptography.Certificates.Certificate[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl*** unsafe_items = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate * items
						items[mcgIdx] = (global::Windows.Security.Cryptography.Certificates.Certificate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle, 
											typeof(global::Windows.Security.Cryptography.Certificates.Certificate).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.Certificate>>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_System_Collections_Generic_IReadOnlyList_1_Windows_Security_Cryptography_Certificates_Certificate____Windows_Foundation__IAsyncOperation_A_Windows_Foundation_Collections_IVectorView_A_Windows_Security_Cryptography_Certificates_Certificate_V__V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperation_1__IReadOnlyList_1_Security_Cryptography_Certificates_Certificate__int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperation_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperation_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.Certificate>>.put_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_System_Collections_Generic_IReadOnlyList_1_Windows_Security_Cryptography_Certificates_Certificate____Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_Foundation_Collections_IVectorView_A_Windows_Security_Cryptography_Certificates_Certificate_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationCompletedHandler_1__IReadOnlyList_1_Security_Cryptography_Certificates_Certificate__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationCompletedHandler<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationCompletedHandler_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget58>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.Certificate>>.get_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_System_Collections_Generic_IReadOnlyList_1_Windows_Security_Cryptography_Certificates_Certificate____Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_Foundation_Collections_IVectorView_A_Windows_Security_Cryptography_Certificates_Certificate_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationCompletedHandler<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> Func__AsyncOperationCompletedHandler_1__IReadOnlyList_1_Security_Cryptography_Certificates_Certificate__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationCompletedHandler<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> __value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationCompletedHandler<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget58>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.Certificate>>.GetResults, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_Security_Cryptography_Certificates_Certificate___Windows_Foundation_Collections__IVectorView_A_Windows_Security_Cryptography_Certificates_Certificate_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate> Func__IReadOnlyList_1_Security_Cryptography_Certificates_Certificate___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Security.Cryptography.Certificates.ICertificateStoresStatics.FindAllAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_CertificateQuery__Windows_Security_Cryptography_Certificates__CertificateQuery *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_System_Collections_Generic_IReadOnlyList_1_Windows_Security_Cryptography_Certificates_Certificate____Windows_Foundation__IAsyncOperation_A_Windows_Foundation_Collections_IVectorView_A_Windows_Security_Cryptography_Certificates_Certificate_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> Func_Security_Cryptography_Certificates_CertificateQuery___IAsyncOperation_1__IReadOnlyList_1_Security_Cryptography_Certificates_Certificate__(
					global::System.__ComObject __this, 
					global::Windows.Security.Cryptography.Certificates.CertificateQuery query, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificateQuery__Impl.Vtbl** unsafe_query = default(global::Windows.Security.Cryptography.Certificates.ICertificateQuery__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl** unsafe_value__retval = default(global::Windows.Foundation.IAsyncOperation_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> value__retval = default(global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_query = (global::Windows.Security.Cryptography.Certificates.ICertificateQuery__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									query, 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificateQuery).TypeHandle
								);
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_query, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_query)));
				global::System.GC.KeepAlive(query);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Security.Cryptography.Certificates.ICertificate>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Security_Cryptography_Certificates_ICertificate___Windows_Foundation_Collections__IIterator_A_Windows_Security_Cryptography_Certificates_ICertificate_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate> Func__Collections_IIterator_1_Security_Cryptography_Certificates_ICertificate___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Security_Cryptography_Certificates_ICertificate_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Security_Cryptography_Certificates_ICertificate_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Security.Cryptography.Certificates.ICertificate>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Security.Cryptography.Certificates.ICertificate Func_Security_Cryptography_Certificates_ICertificate__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**);
			global::Windows.Security.Cryptography.Certificates.ICertificate __value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Security.Cryptography.Certificates.ICertificate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Security.Cryptography.Certificates.ICertificate>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Security_Cryptography_Certificates_ICertificate__uint__(
					global::System.__ComObject __this, 
					global::Windows.Security.Cryptography.Certificates.ICertificate[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl*** unsafe_items = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate * items
						items[mcgIdx] = (global::Windows.Security.Cryptography.Certificates.ICertificate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Security.Cryptography.Certificates.ICertificate2>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Security_Cryptography_Certificates_ICertificate2___Windows_Foundation_Collections__IIterator_A_Windows_Security_Cryptography_Certificates_ICertificate2_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate2> Func__Collections_IIterator_1_Security_Cryptography_Certificates_ICertificate2___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Security_Cryptography_Certificates_ICertificate2_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Security_Cryptography_Certificates_ICertificate2_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate2> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate2>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate2>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate2>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Security.Cryptography.Certificates.ICertificate2>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Security.Cryptography.Certificates.ICertificate2 Func_Security_Cryptography_Certificates_ICertificate2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl**);
			global::Windows.Security.Cryptography.Certificates.ICertificate2 __value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Security.Cryptography.Certificates.ICertificate2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Security.Cryptography.Certificates.ICertificate2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Security_Cryptography_Certificates_ICertificate2__uint__(
					global::System.__ComObject __this, 
					global::Windows.Security.Cryptography.Certificates.ICertificate2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl*** unsafe_items = default(global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 * items
						items[mcgIdx] = (global::Windows.Security.Cryptography.Certificates.ICertificate2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Security.Cryptography.Certificates.ICertificate2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.ICertificate>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Security.Cryptography.Certificates.ICertificate Func_uint__Security_Cryptography_Certificates_ICertificate__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**);
			global::Windows.Security.Cryptography.Certificates.ICertificate __value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Security.Cryptography.Certificates.ICertificate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.ICertificate>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Security_Cryptography_Certificates_ICertificate__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.Security.Cryptography.Certificates.ICertificate value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl** unsafe_value = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.ICertificate>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Security_Cryptography_Certificates_ICertificate__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Security.Cryptography.Certificates.ICertificate[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl*** unsafe_items = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate * items
						items[mcgIdx] = (global::Windows.Security.Cryptography.Certificates.ICertificate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.ICertificate2>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Security.Cryptography.Certificates.ICertificate2 Func_uint__Security_Cryptography_Certificates_ICertificate2__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl**);
			global::Windows.Security.Cryptography.Certificates.ICertificate2 __value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Security.Cryptography.Certificates.ICertificate2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.ICertificate2>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Security_Cryptography_Certificates_ICertificate2__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.Security.Cryptography.Certificates.ICertificate2 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl** unsafe_value = default(global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate2).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.ICertificate2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Security_Cryptography_Certificates_ICertificate2__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Security.Cryptography.Certificates.ICertificate2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl*** unsafe_items = default(global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 * items
						items[mcgIdx] = (global::Windows.Security.Cryptography.Certificates.ICertificate2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Security.Cryptography.Certificates.ICertificate2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetTypeAttr, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out_IntPtr__(
					global::System.__ComObject __this, 
					out global::System.IntPtr ppTypeAttr, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_ppTypeAttr;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_ppTypeAttr)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			ppTypeAttr = unsafe_ppTypeAttr;
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetTypeComp, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeComp__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeComp__System_Private_Interop *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out__ComTypes_ITypeComp__Private_Interop__(
					global::System.__ComObject __this, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop ppTComp, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop__Impl.Vtbl** unsafe_ppTComp = default(global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_ppTComp = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_ppTComp)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				ppTComp = (global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_ppTComp), 
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeComp,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
											"icKeyToken=b03f5f7f11d50a3a")
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTComp)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetFuncDesc, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out_IntPtr__(
					global::System.__ComObject __this, 
					int index, 
					out global::System.IntPtr ppFuncDesc, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_ppFuncDesc;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe_ppFuncDesc)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			ppFuncDesc = unsafe_ppFuncDesc;
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetNames, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_string__wchar_t * *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out_rg_string__int__out_int__(
					global::System.__ComObject __this, 
					int memid, 
					string[] rgBstrNames, 
					int cMaxNames, 
					out int pcNames, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ushort** unsafe_rgBstrNames = default(ushort**);
			int unsafe_pcNames;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (rgBstrNames != null)
					unsafe_rgBstrNames = (ushort**)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(rgBstrNames.Length * sizeof(ushort*))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									memid, 
									unsafe_rgBstrNames, 
									cMaxNames, 
									&(unsafe_pcNames)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				pcNames = unsafe_pcNames;
				if (rgBstrNames != null)
					for (uint mcgIdx = 0; (mcgIdx < rgBstrNames.Length); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.BstrMarshaller] string__wchar_t * rgBstrNames
						rgBstrNames[mcgIdx] = global::McgInterop.Helpers.ConvertBSTRToString(unsafe_rgBstrNames[mcgIdx]);
					}
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_rgBstrNames != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < rgBstrNames.Length); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.BstrMarshaller] string__wchar_t * rgBstrNames
						global::System.Runtime.InteropServices.ExternalInterop.SysFreeString(unsafe_rgBstrNames[mcgIdx_1]);
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_rgBstrNames);
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetRefTypeOfImplType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out_int__(
					global::System.__ComObject __this, 
					int index, 
					out int href, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe_href;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe_href)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			href = unsafe_href;
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetImplTypeFlags, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.EnumMarshaller] System_Runtime_InteropServices_ComTypes_IMPLTYPEFLAGS__System_Private_Interop__IMPLTYPEFLAGS__System_Private_Interop, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out__ComTypes_IMPLTYPEFLAGS__Private_Interop__(
					global::System.__ComObject __this, 
					int index, 
					out global::System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS__System_Private_Interop pImplTypeFlags, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS__System_Private_Interop unsafe_pImplTypeFlags;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe_pImplTypeFlags)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			pImplTypeFlags = unsafe_pImplTypeFlags;
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetIDsOfNames, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_string__wchar_t * *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [Mcg.CodeGen.BlittableArrayMarshaller] rg_int__int *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_string__int__out_rg_int__(
					global::System.__ComObject __this, 
					string[] rgszNames, 
					int cNames, 
					int[] pMemId, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ushort** unsafe_rgszNames = default(ushort**);
			int* unsafe_pMemId;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (rgszNames == null)
					unsafe_rgszNames = null;
				else
				{
					if (rgszNames != null)
						unsafe_rgszNames = (ushort**)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(rgszNames.Length * sizeof(ushort*))));
					for (uint mcgIdx = 0; (mcgIdx < rgszNames.Length); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t * rgszNames
						unsafe_rgszNames[mcgIdx] = (ushort*)global::McgInterop.McgHelpers.AllocUnicodeBuffer(rgszNames[mcgIdx]);
						global::McgInterop.McgHelpers.CopyUnicodeString(
											rgszNames[mcgIdx], 
											unsafe_rgszNames[mcgIdx]
										);
					}
				}
				fixed (int* pinned_pMemId = global::McgInterop.McgCoreHelpers.GetArrayForCompat(pMemId))
				{
					unsafe_pMemId = (int*)pinned_pMemId;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_rgszNames, 
										cNames, 
										unsafe_pMemId
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				}
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_rgszNames != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < rgszNames.Length); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t * rgszNames
						global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_rgszNames[mcgIdx_1]);
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_rgszNames);
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ObjectMarshaller] object____mcg_IUnknown *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] short__short, [fwd] [in] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] System_Runtime_InteropServices_ComTypes_DISPPARAMS__System_Private_Interop__System_Runtime_InteropServices_ComTypes__DISPPARAMS__System_Private_Interop, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__int__short__out__ComTypes_DISPPARAMS__Private_Interop__IntPtr__IntPtr__out_int__(
					global::System.__ComObject __this, 
					object pvInstance, 
					int memid, 
					short wFlags, 
					ref global::System.Runtime.InteropServices.ComTypes.DISPPARAMS__System_Private_Interop pDispParams, 
					global::System.IntPtr pVarResult, 
					global::System.IntPtr pExcepInfo, 
					out int puArgErr, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IUnknown** unsafe_pvInstance = default(global::System.Runtime.InteropServices.__vtable_IUnknown**);
			global::System.Runtime.InteropServices.ComTypes.DISPPARAMS__System_Private_Interop unsafe_pDispParams;
			int unsafe_puArgErr;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_pvInstance = (global::System.Runtime.InteropServices.__vtable_IUnknown**)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
									pvInstance, 
									global::System.Runtime.InteropServices.McgModuleManager.IUnknown
								);
				unsafe_pDispParams = pDispParams;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_pvInstance, 
									memid, 
									wFlags, 
									&(unsafe_pDispParams), 
									pVarResult, 
									pExcepInfo, 
									&(unsafe_puArgErr)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				puArgErr = unsafe_puArgErr;
				pDispParams = unsafe_pDispParams;
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_pvInstance)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetDocumentation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BstrMarshaller] string__wchar_t *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BstrMarshaller] string__wchar_t *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BstrMarshaller] string__wchar_t *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out_string__out_string__out_int__out_string__(
					global::System.__ComObject __this, 
					int index, 
					out string strName, 
					out string strDocString, 
					out int dwHelpContext, 
					out string strHelpFile, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ushort* unsafe_strName = default(ushort*);
			ushort* unsafe_strDocString = default(ushort*);
			int unsafe_dwHelpContext;
			ushort* unsafe_strHelpFile = default(ushort*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_strName = null;
				unsafe_strDocString = null;
				unsafe_strHelpFile = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe_strName), 
									&(unsafe_strDocString), 
									&(unsafe_dwHelpContext), 
									&(unsafe_strHelpFile)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				strHelpFile = global::McgInterop.Helpers.ConvertBSTRToString(unsafe_strHelpFile);
				dwHelpContext = unsafe_dwHelpContext;
				strDocString = global::McgInterop.Helpers.ConvertBSTRToString(unsafe_strDocString);
				strName = global::McgInterop.Helpers.ConvertBSTRToString(unsafe_strName);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SysFreeString(unsafe_strName);
				global::System.Runtime.InteropServices.ExternalInterop.SysFreeString(unsafe_strDocString);
				global::System.Runtime.InteropServices.ExternalInterop.SysFreeString(unsafe_strHelpFile);
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetDllEntry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] System_Runtime_InteropServices_ComTypes_INVOKEKIND__System_Private_Interop__INVOKEKIND__System_Private_Interop, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int___ComTypes_INVOKEKIND__Private_Interop__IntPtr__IntPtr__IntPtr__(
					global::System.__ComObject __this, 
					int memid, 
					global::System.Runtime.InteropServices.ComTypes.INVOKEKIND__System_Private_Interop invKind, 
					global::System.IntPtr pBstrDllName, 
					global::System.IntPtr pBstrName, 
					global::System.IntPtr pwOrdinal, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								memid, 
								invKind, 
								pBstrDllName, 
								pBstrName, 
								pwOrdinal
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetRefTypeInfo, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeInfo__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeInfo__System_Private_Interop *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out__ComTypes_ITypeInfo__Private_Interop__(
					global::System.__ComObject __this, 
					int hRef, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop ppTI, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl** unsafe_ppTI = default(global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_ppTI = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									hRef, 
									&(unsafe_ppTI)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				ppTI = (global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_ppTI), 
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
											"icKeyToken=b03f5f7f11d50a3a")
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTI)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.AddressOfMember, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] System_Runtime_InteropServices_ComTypes_INVOKEKIND__System_Private_Interop__INVOKEKIND__System_Private_Interop, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int___ComTypes_INVOKEKIND__Private_Interop__out_IntPtr__(
					global::System.__ComObject __this, 
					int memid, 
					global::System.Runtime.InteropServices.ComTypes.INVOKEKIND__System_Private_Interop invKind, 
					out global::System.IntPtr ppv, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_ppv;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								memid, 
								invKind, 
								&(unsafe_ppv)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			ppv = unsafe_ppv;
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ObjectMarshaller] object____mcg_IUnknown *, [fwd] [in] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ObjectMarshaller] object____mcg_IUnknown *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__Guid__out_object__(
					global::System.__ComObject __this, 
					object pUnkOuter, 
					ref global::System.Guid riid, 
					out object ppvObj, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IUnknown** unsafe_pUnkOuter = default(global::System.Runtime.InteropServices.__vtable_IUnknown**);
			global::System.Guid unsafe_riid;
			global::System.Runtime.InteropServices.__vtable_IUnknown** unsafe_ppvObj = default(global::System.Runtime.InteropServices.__vtable_IUnknown**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_pUnkOuter = (global::System.Runtime.InteropServices.__vtable_IUnknown**)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
									pUnkOuter, 
									global::System.Runtime.InteropServices.McgModuleManager.IUnknown
								);
				unsafe_riid = riid;
				unsafe_ppvObj = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_pUnkOuter, 
									&(unsafe_riid), 
									&(unsafe_ppvObj)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				ppvObj = (object)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_ppvObj), 
									global::System.Runtime.InteropServices.McgModuleManager.IUnknown
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_pUnkOuter)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppvObj)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetMops, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BstrMarshaller] string__wchar_t *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out_string__(
					global::System.__ComObject __this, 
					int memid, 
					out string pBstrMops, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ushort* unsafe_pBstrMops = default(ushort*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_pBstrMops = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									memid, 
									&(unsafe_pBstrMops)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				pBstrMops = global::McgInterop.Helpers.ConvertBSTRToString(unsafe_pBstrMops);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SysFreeString(unsafe_pBstrMops);
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetContainingTypeLib, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeLib__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeLib__System_Private_Interop *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out__ComTypes_ITypeLib__Private_Interop__out_int__(
					global::System.__ComObject __this, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop ppTLB, 
					out int pIndex, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop__Impl.Vtbl** unsafe_ppTLB = default(global::System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop__Impl.Vtbl**);
			int unsafe_pIndex;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_ppTLB = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_ppTLB), 
									&(unsafe_pIndex)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				pIndex = unsafe_pIndex;
				ppTLB = (global::System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_ppTLB), 
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeLib,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publi" +
											"cKeyToken=b03f5f7f11d50a3a")
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTLB)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.ReleaseTypeAttr, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_void__IntPtr__(
					global::System.__ComObject __this, 
					global::System.IntPtr pTypeAttr, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Marshalling
			// Call to native method
			global::McgInterop.ComCallHelpers.ComCall__void__(
								__this, 
								__typeHnd, 
								__targetIndex, 
								pTypeAttr
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop.Bind, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] short__short, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeInfo__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeInfo__System_Private_Interop *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.EnumMarshaller] System_Runtime_InteropServices_ComTypes_DESCKIND__System_Private_Interop__DESCKIND__System_Private_Interop, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] System_Runtime_InteropServices_ComTypes_BINDPTR__System_Private_Interop__System_Runtime_InteropServices_ComTypes__BINDPTR__System_Private_Interop, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__int__short__out__ComTypes_ITypeInfo__Private_Interop__out__ComTypes_DESCKIND__Private_Interop__out__ComTypes_BINDPTR__Private_Interop__(
					global::System.__ComObject __this, 
					string szName, 
					int lHashVal, 
					short wFlags, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop ppTInfo, 
					out global::System.Runtime.InteropServices.ComTypes.DESCKIND__System_Private_Interop pDescKind, 
					out global::System.Runtime.InteropServices.ComTypes.BINDPTR__System_Private_Interop pBindPtr, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ushort* unsafe_szName = default(ushort*);
			global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl** unsafe_ppTInfo = default(global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl**);
			global::System.Runtime.InteropServices.ComTypes.DESCKIND__System_Private_Interop unsafe_pDescKind;
			global::System.Runtime.InteropServices.ComTypes.BINDPTR__System_Private_Interop unsafe_pBindPtr;
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pinned_szName = szName)
				{
					unsafe_szName = (ushort*)pinned_szName;
					unsafe_ppTInfo = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_szName, 
										lHashVal, 
										wFlags, 
										&(unsafe_ppTInfo), 
										&(unsafe_pDescKind), 
										&(unsafe_pBindPtr)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					pBindPtr = unsafe_pBindPtr;
					pDescKind = unsafe_pDescKind;
					ppTInfo = (global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_ppTInfo), 
										global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
												"icKeyToken=b03f5f7f11d50a3a")
									);
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTInfo)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop.BindType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeInfo__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeInfo__System_Private_Interop *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeComp__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeComp__System_Private_Interop *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__int__out__ComTypes_ITypeInfo__Private_Interop__out__ComTypes_ITypeComp__Private_Interop__(
					global::System.__ComObject __this, 
					string szName, 
					int lHashVal, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop ppTInfo, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop ppTComp, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ushort* unsafe_szName = default(ushort*);
			global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl** unsafe_ppTInfo = default(global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl**);
			global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop__Impl.Vtbl** unsafe_ppTComp = default(global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pinned_szName = szName)
				{
					unsafe_szName = (ushort*)pinned_szName;
					unsafe_ppTInfo = null;
					unsafe_ppTComp = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_szName, 
										lHashVal, 
										&(unsafe_ppTInfo), 
										&(unsafe_ppTComp)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					ppTComp = (global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_ppTComp), 
										global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeComp,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
												"icKeyToken=b03f5f7f11d50a3a")
									);
					ppTInfo = (global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_ppTInfo), 
										global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
												"icKeyToken=b03f5f7f11d50a3a")
									);
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTInfo)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTComp)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop.GetTypeInfoCount, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Proc_int___2(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.ComCallHelpers.ComCall__int__(
								__this, 
								__typeHnd, 
								__targetIndex
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop.GetTypeInfoType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.EnumMarshaller] System_Runtime_InteropServices_ComTypes_TYPEKIND__System_Private_Interop__TYPEKIND__System_Private_Interop, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out__ComTypes_TYPEKIND__Private_Interop__(
					global::System.__ComObject __this, 
					int index, 
					out global::System.Runtime.InteropServices.ComTypes.TYPEKIND__System_Private_Interop pTKind, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.ComTypes.TYPEKIND__System_Private_Interop unsafe_pTKind;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe_pTKind)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			pTKind = unsafe_pTKind;
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop.GetTypeInfoOfGuid, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeInfo__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeInfo__System_Private_Interop *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out_Guid__out__ComTypes_ITypeInfo__Private_Interop__(
					global::System.__ComObject __this, 
					ref global::System.Guid guid, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop ppTInfo, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Guid unsafe_guid;
			global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl** unsafe_ppTInfo = default(global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_guid = guid;
				unsafe_ppTInfo = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_guid), 
									&(unsafe_ppTInfo)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				ppTInfo = (global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_ppTInfo), 
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
											"icKeyToken=b03f5f7f11d50a3a")
								);
				guid = unsafe_guid;
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTInfo)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop.IsName, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_string__int__bool__(
					global::System.__ComObject __this, 
					string szNameBuf, 
					int lHashVal, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ushort* unsafe_szNameBuf = default(ushort*);
			int unsafe___value__retval;
			bool __value__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pinned_szNameBuf = szNameBuf)
			{
				unsafe_szNameBuf = (ushort*)pinned_szNameBuf;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_szNameBuf, 
									lHashVal, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
			}
			// Return
			return __value__retval;
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop.FindName, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Runtime_InteropServices_ComTypes_ITypeInfo__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeInfo__System_Private_Interop * *, [fwd] [out] [Mcg.CodeGen.BlittableArrayMarshaller] rg_int__int *, [fwd] [in] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] short__short, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__int__out_rg__ComTypes_ITypeInfo__Private_Interop__out_rg_int__out_short__(
					global::System.__ComObject __this, 
					string szNameBuf, 
					int lHashVal, 
					global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop[] ppTInfo, 
					int[] rgMemId, 
					ref short pcFound, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ushort* unsafe_szNameBuf = default(ushort*);
			global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl*** unsafe_ppTInfo = default(global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl***);
			int* unsafe_rgMemId;
			short unsafe_pcFound;
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pinned_szNameBuf = szNameBuf)
				{
					unsafe_szNameBuf = (ushort*)pinned_szNameBuf;
					if (ppTInfo != null)
						unsafe_ppTInfo = (global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(ppTInfo.Length * sizeof(global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl**))));
					fixed (int* pinned_rgMemId = global::McgInterop.McgCoreHelpers.GetArrayForCompat(rgMemId))
					{
						unsafe_rgMemId = (int*)pinned_rgMemId;
						unsafe_pcFound = pcFound;
						// Call to native method
						unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
											__this, 
											__typeHnd, 
											__targetIndex, 
											unsafe_szNameBuf, 
											lHashVal, 
											unsafe_ppTInfo, 
											unsafe_rgMemId, 
											&(unsafe_pcFound)
										);
						global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
						pcFound = unsafe_pcFound;
					}
					if (ppTInfo != null)
						for (uint mcgIdx = 0; (mcgIdx < ppTInfo.Length); mcgIdx++)
						{
							// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeInfo__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeInfo__System_Private_Interop * ppTInfo
							ppTInfo[mcgIdx] = (global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
												((global::System.IntPtr)unsafe_ppTInfo[mcgIdx]), 
												global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
														"icKeyToken=b03f5f7f11d50a3a")
											);
						}
				}
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_ppTInfo != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < ppTInfo.Length); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeInfo__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeInfo__System_Private_Interop * ppTInfo
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTInfo[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_ppTInfo);
			}
		}
	}

	internal unsafe static partial class ComCallHelpers
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Type__Impl.UnsafeType arg1, 
					void* arg2, 
					global::System.Runtime.InteropServices.HSTRING arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.IntPtr arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					int arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Point arg0, 
					global::Windows.Foundation.Rect arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Point arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					uint arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Size arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					sbyte arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					sbyte arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					ulong arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					sbyte arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Foundation.Rect arg1, 
					float arg2, 
					void* arg3, 
					void* arg4, 
					int arg5, 
					void* arg6)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Foundation.Rect arg1, 
					float arg2, 
					void* arg3, 
					void* arg4, 
					int arg5, 
					float arg6, 
					void* arg7)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Foundation.Rect arg1, 
					float arg2, 
					void* arg3, 
					void* arg4, 
					int arg5, 
					float arg6, 
					int arg7, 
					void* arg8)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7, 
								arg8
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Matrix3x2 arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Color arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector4 arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector2 arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					float arg1, 
					float arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Foundation.Rect arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector2 arg1, 
					global::Windows.Foundation.Rect arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					float arg1, 
					float arg2, 
					global::Windows.Foundation.Rect arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Foundation.Rect arg1, 
					global::Windows.Foundation.Rect arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector2 arg1, 
					global::Windows.Foundation.Rect arg2, 
					float arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					float arg1, 
					float arg2, 
					global::Windows.Foundation.Rect arg3, 
					float arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Foundation.Rect arg1, 
					global::Windows.Foundation.Rect arg2, 
					float arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector2 arg1, 
					global::Windows.Foundation.Rect arg2, 
					float arg3, 
					int arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					float arg1, 
					float arg2, 
					global::Windows.Foundation.Rect arg3, 
					float arg4, 
					int arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Foundation.Rect arg1, 
					global::Windows.Foundation.Rect arg2, 
					float arg3, 
					int arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector2 arg1, 
					global::Windows.Foundation.Rect arg2, 
					float arg3, 
					int arg4, 
					int arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					float arg1, 
					float arg2, 
					global::Windows.Foundation.Rect arg3, 
					float arg4, 
					int arg5, 
					int arg6)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Foundation.Rect arg1, 
					global::Windows.Foundation.Rect arg2, 
					float arg3, 
					int arg4, 
					int arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector2 arg1, 
					global::Windows.Foundation.Rect arg2, 
					float arg3, 
					int arg4, 
					global::System.Numerics.Matrix4x4 arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					float arg1, 
					float arg2, 
					global::Windows.Foundation.Rect arg3, 
					float arg4, 
					int arg5, 
					global::System.Numerics.Matrix4x4 arg6)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Foundation.Rect arg1, 
					global::Windows.Foundation.Rect arg2, 
					float arg3, 
					int arg4, 
					global::System.Numerics.Matrix4x4 arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					global::System.Numerics.Vector2 arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					global::System.Numerics.Vector2 arg1, 
					global::Windows.UI.Color arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					global::Windows.UI.Color arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					global::System.Numerics.Vector2 arg1, 
					void* arg2, 
					float arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					void* arg4, 
					float arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					global::System.Numerics.Vector2 arg1, 
					global::Windows.UI.Color arg2, 
					float arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					global::Windows.UI.Color arg4, 
					float arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					global::System.Numerics.Vector2 arg1, 
					void* arg2, 
					float arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					void* arg4, 
					float arg5, 
					void* arg6)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					global::System.Numerics.Vector2 arg1, 
					global::Windows.UI.Color arg2, 
					float arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					global::Windows.UI.Color arg4, 
					float arg5, 
					void* arg6)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Rect arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Rect arg0, 
					global::Windows.UI.Color arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Rect arg0, 
					void* arg1, 
					float arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Rect arg0, 
					global::Windows.UI.Color arg1, 
					float arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Rect arg0, 
					void* arg1, 
					float arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Rect arg0, 
					global::Windows.UI.Color arg1, 
					float arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Rect arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					void* arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Rect arg0, 
					float arg1, 
					float arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					float arg4, 
					float arg5, 
					void* arg6)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Rect arg0, 
					float arg1, 
					float arg2, 
					global::Windows.UI.Color arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					float arg4, 
					float arg5, 
					global::Windows.UI.Color arg6)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Rect arg0, 
					float arg1, 
					float arg2, 
					void* arg3, 
					float arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					float arg4, 
					float arg5, 
					void* arg6, 
					float arg7)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Rect arg0, 
					float arg1, 
					float arg2, 
					global::Windows.UI.Color arg3, 
					float arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					float arg4, 
					float arg5, 
					global::Windows.UI.Color arg6, 
					float arg7)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Rect arg0, 
					float arg1, 
					float arg2, 
					void* arg3, 
					float arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					float arg4, 
					float arg5, 
					void* arg6, 
					float arg7, 
					void* arg8)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7, 
								arg8
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Rect arg0, 
					float arg1, 
					float arg2, 
					global::Windows.UI.Color arg3, 
					float arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					float arg4, 
					float arg5, 
					global::Windows.UI.Color arg6, 
					float arg7, 
					void* arg8)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7, 
								arg8
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					float arg1, 
					float arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					float arg1, 
					float arg2, 
					global::Windows.UI.Color arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					float arg1, 
					float arg2, 
					void* arg3, 
					float arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					float arg1, 
					float arg2, 
					global::Windows.UI.Color arg3, 
					float arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					float arg1, 
					float arg2, 
					void* arg3, 
					float arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					float arg1, 
					float arg2, 
					global::Windows.UI.Color arg3, 
					float arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					float arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					float arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					float arg1, 
					global::Windows.UI.Color arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					float arg2, 
					global::Windows.UI.Color arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					float arg1, 
					void* arg2, 
					float arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					float arg2, 
					void* arg3, 
					float arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					float arg1, 
					global::Windows.UI.Color arg2, 
					float arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					float arg2, 
					global::Windows.UI.Color arg3, 
					float arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					float arg1, 
					void* arg2, 
					float arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					float arg2, 
					void* arg3, 
					float arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					float arg1, 
					global::Windows.UI.Color arg2, 
					float arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					float arg2, 
					global::Windows.UI.Color arg3, 
					float arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					global::System.Numerics.Vector2 arg1, 
					global::Windows.UI.Color arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					float arg1, 
					float arg2, 
					global::Windows.UI.Color arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					global::System.Numerics.Vector2 arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					global::Windows.Foundation.Rect arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					float arg1, 
					float arg2, 
					void* arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					float arg4, 
					void* arg5, 
					void* arg6)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					global::System.Numerics.Vector2 arg1, 
					global::Windows.UI.Color arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					global::Windows.Foundation.Rect arg1, 
					global::Windows.UI.Color arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					float arg1, 
					float arg2, 
					global::Windows.UI.Color arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					float arg4, 
					global::Windows.UI.Color arg5, 
					void* arg6)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector2 arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector2 arg1, 
					global::Windows.UI.Color arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					float arg1, 
					float arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					float arg1, 
					float arg2, 
					global::Windows.UI.Color arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.UI.Color arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector2 arg1, 
					void* arg2, 
					float arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector2 arg1, 
					global::Windows.UI.Color arg2, 
					float arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					float arg1, 
					float arg2, 
					void* arg3, 
					float arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					float arg1, 
					float arg2, 
					global::Windows.UI.Color arg3, 
					float arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					float arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.UI.Color arg1, 
					float arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector2 arg1, 
					void* arg2, 
					float arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector2 arg1, 
					global::Windows.UI.Color arg2, 
					float arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					float arg1, 
					float arg2, 
					void* arg3, 
					float arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					float arg1, 
					float arg2, 
					global::Windows.UI.Color arg3, 
					float arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					float arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.UI.Color arg1, 
					float arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector2 arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					float arg1, 
					float arg2, 
					void* arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					sbyte arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Matrix3x2 arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Graphics.Imaging.BitmapSize arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					global::Windows.Foundation.Rect arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Foundation.Rect arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					void* arg1, 
					global::System.Numerics.Matrix3x2 arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					global::System.Numerics.Matrix3x2 arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					void* arg1, 
					global::Windows.Foundation.Rect arg2, 
					void* arg3, 
					global::System.Numerics.Matrix3x2 arg4, 
					global::Microsoft.Graphics.Canvas.CanvasLayerOptions arg5, 
					void* arg6)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					void* arg1, 
					float arg2, 
					uint arg3, 
					void* arg4, 
					sbyte arg5, 
					uint arg6, 
					void* arg7)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					void* arg1, 
					float arg2, 
					uint arg3, 
					void* arg4, 
					sbyte arg5, 
					uint arg6, 
					void* arg7, 
					int arg8)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7, 
								arg8
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					void* arg1, 
					float arg2, 
					uint arg3, 
					void* arg4, 
					sbyte arg5, 
					uint arg6, 
					void* arg7, 
					int arg8, 
					global::System.Runtime.InteropServices.HSTRING arg9, 
					global::System.Runtime.InteropServices.HSTRING arg10, 
					uint arg11, 
					void* arg12, 
					uint arg13)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7, 
								arg8, 
								arg9, 
								arg10, 
								arg11, 
								arg12, 
								arg13
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					global::Microsoft.Graphics.Canvas.CanvasSpriteOptions arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					int arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					float arg2, 
					int arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					uint arg1, 
					void* arg2, 
					int arg3, 
					int arg4, 
					int arg5, 
					void* arg6)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					uint arg1, 
					void* arg2, 
					int arg3, 
					int arg4, 
					int arg5, 
					float arg6, 
					void* arg7)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					uint arg1, 
					void* arg2, 
					int arg3, 
					int arg4, 
					int arg5, 
					float arg6, 
					int arg7, 
					void* arg8)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7, 
								arg8
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					int arg2, 
					int arg3, 
					int arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					int arg2, 
					int arg3, 
					int arg4, 
					float arg5, 
					void* arg6)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					int arg2, 
					int arg3, 
					int arg4, 
					float arg5, 
					int arg6, 
					void* arg7)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					uint arg1, 
					void* arg2, 
					int arg3, 
					int arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					uint arg1, 
					void* arg2, 
					int arg3, 
					int arg4, 
					float arg5, 
					void* arg6)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					uint arg1, 
					void* arg2, 
					int arg3, 
					int arg4, 
					float arg5, 
					int arg6, 
					void* arg7)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					float arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					float arg2, 
					int arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					int arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					int arg1, 
					float arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					float arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					int arg2, 
					int arg3, 
					void* arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					int arg2, 
					int arg3, 
					int arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					void* arg1, 
					int arg2, 
					int arg3, 
					int arg4, 
					int arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					int arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					int arg2, 
					int arg3, 
					int arg4, 
					int arg5, 
					int arg6)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Text.FontWeight arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasDrawTextOptions arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector2 arg1, 
					sbyte arg2, 
					sbyte arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					int arg2, 
					void* arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					int arg2, 
					void* arg3, 
					global::System.Numerics.Matrix3x2 arg4, 
					sbyte arg5, 
					int arg6, 
					void* arg7)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					void* arg1, 
					sbyte arg2, 
					void* arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					global::System.Numerics.Matrix3x2 arg2, 
					sbyte arg3, 
					uint arg4, 
					void* arg5, 
					sbyte arg6, 
					void* arg7, 
					void* arg8)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7, 
								arg8
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector2 arg1, 
					float arg2, 
					uint arg3, 
					void* arg4, 
					sbyte arg5, 
					uint arg6, 
					void* arg7)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector2 arg1, 
					float arg2, 
					uint arg3, 
					void* arg4, 
					sbyte arg5, 
					uint arg6, 
					int arg7, 
					void* arg8)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7, 
								arg8
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					float arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Foundation.Rect arg1, 
					float arg2, 
					float arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					float arg4, 
					float arg5, 
					float arg6, 
					void* arg7)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector2 arg1, 
					float arg2, 
					float arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector2 arg1, 
					float arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					uint arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					uint arg1, 
					void* arg2, 
					int arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector2 arg1, 
					void* arg2, 
					float arg3, 
					uint arg4, 
					void* arg5, 
					sbyte arg6, 
					uint arg7, 
					int arg8, 
					int arg9, 
					void* arg10)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7, 
								arg8, 
								arg9, 
								arg10
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					global::System.Numerics.Matrix3x2 arg2, 
					float arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					global::System.Numerics.Matrix3x2 arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					int arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					int arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					int arg4, 
					int arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					float arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					global::System.Numerics.Vector2 arg1, 
					global::System.Numerics.Vector2 arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					global::System.Numerics.Vector2 arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasFigureSegmentOptions arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					void* arg2, 
					float arg3, 
					float arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Size arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					global::Windows.UI.Color arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					global::System.Runtime.InteropServices.HSTRING arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					float arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					int arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					global::Windows.UI.Text.FontWeight arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					sbyte arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					sbyte arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					sbyte arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					float arg2, 
					float arg3, 
					float arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					uint arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Matrix3x2 arg1, 
					int arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Matrix3x2 arg1, 
					int arg2, 
					float arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					void* arg1, 
					global::System.Numerics.Matrix3x2 arg2, 
					float arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Matrix3x2 arg0, 
					float arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					global::System.Numerics.Matrix3x2 arg1, 
					float arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Matrix3x2 arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Matrix3x2 arg1, 
					float arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					global::System.Numerics.Matrix3x2 arg1, 
					float arg2, 
					void* arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					global::System.Numerics.Matrix3x2 arg1, 
					float arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					float arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector2 arg0, 
					float arg1, 
					void* arg2, 
					global::System.Numerics.Matrix3x2 arg3, 
					float arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Matrix3x2 arg0, 
					float arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					float arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					float arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					float arg1, 
					void* arg2, 
					float arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					void* arg1, 
					uint arg2, 
					void* arg3, 
					uint arg4, 
					void* arg5, 
					void* arg6)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Matrix3x2 arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Foundation.Rect arg1, 
					global::System.Numerics.Vector4 arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector2 arg1, 
					global::System.Numerics.Vector4 arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Matrix3x2 arg1, 
					global::System.Numerics.Vector4 arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Foundation.Rect arg1, 
					global::System.Numerics.Vector4 arg2, 
					global::Microsoft.Graphics.Canvas.CanvasSpriteFlip arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Matrix3x2 arg1, 
					global::System.Numerics.Vector4 arg2, 
					global::Microsoft.Graphics.Canvas.CanvasSpriteFlip arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector2 arg1, 
					global::System.Numerics.Vector4 arg2, 
					global::System.Numerics.Vector2 arg3, 
					float arg4, 
					global::System.Numerics.Vector2 arg5, 
					global::Microsoft.Graphics.Canvas.CanvasSpriteFlip arg6)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Matrix3x2 arg1, 
					global::Windows.Foundation.Rect arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Foundation.Rect arg1, 
					global::Windows.Foundation.Rect arg2, 
					global::System.Numerics.Vector4 arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector2 arg1, 
					global::Windows.Foundation.Rect arg2, 
					global::System.Numerics.Vector4 arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Matrix3x2 arg1, 
					global::Windows.Foundation.Rect arg2, 
					global::System.Numerics.Vector4 arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Foundation.Rect arg1, 
					global::Windows.Foundation.Rect arg2, 
					global::System.Numerics.Vector4 arg3, 
					global::Microsoft.Graphics.Canvas.CanvasSpriteFlip arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Matrix3x2 arg1, 
					global::Windows.Foundation.Rect arg2, 
					global::System.Numerics.Vector4 arg3, 
					global::Microsoft.Graphics.Canvas.CanvasSpriteFlip arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector2 arg1, 
					global::Windows.Foundation.Rect arg2, 
					global::System.Numerics.Vector4 arg3, 
					global::System.Numerics.Vector2 arg4, 
					float arg5, 
					global::System.Numerics.Vector2 arg6, 
					global::Microsoft.Graphics.Canvas.CanvasSpriteFlip arg7)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.UI.Color arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector4 arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.UI.Color arg1, 
					global::Windows.UI.Color arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					uint arg1, 
					void* arg2, 
					int arg3, 
					int arg4, 
					int arg5, 
					int arg6, 
					int arg7, 
					void* arg8)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7, 
								arg8
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Numerics.Vector4 arg1, 
					global::System.Numerics.Vector4 arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStop arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Brushes.CanvasGradientStopHdr arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Color arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					global::Windows.UI.Color arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Foundation.Size arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					int arg4, 
					int arg5, 
					void* arg6)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					int arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					int arg2, 
					int arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					int arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					int arg2, 
					int arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTypographyFeature arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasLineMetrics__Impl.UnsafeType arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasClusterMetrics arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasTextLayoutRegion arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasTriangleVertices arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Geometry.CanvasGradientMeshPatch arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					global::Windows.UI.Text.FontWeight arg1, 
					int arg2, 
					int arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					int arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasFontProperty__Impl.UnsafeType arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					sbyte arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					int arg1, 
					void* arg2, 
					int arg3, 
					uint arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					int arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange arg0, 
					void* arg1, 
					float arg2, 
					sbyte arg3, 
					sbyte arg4, 
					global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript arg5, 
					void* arg6, 
					void* arg7)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasCharacterRange arg0, 
					void* arg1, 
					float arg2, 
					sbyte arg3, 
					sbyte arg4, 
					global::Microsoft.Graphics.Canvas.Text.CanvasAnalyzedScript arg5, 
					global::System.Runtime.InteropServices.HSTRING arg6, 
					void* arg7, 
					void* arg8, 
					void* arg9, 
					void* arg10, 
					void* arg11, 
					void* arg12, 
					void* arg13, 
					void* arg14, 
					void* arg15, 
					void* arg16)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7, 
								arg8, 
								arg9, 
								arg10, 
								arg11, 
								arg12, 
								arg13, 
								arg14, 
								arg15, 
								arg16
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasGlyph arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					global::Microsoft.Graphics.Canvas.Text.CanvasGlyph arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasGlyph arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					int arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Color arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Color arg0, 
					global::Windows.Foundation.Rect arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					int arg4, 
					int arg5, 
					int arg6, 
					void* arg7)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					float arg2, 
					float arg3, 
					float arg4, 
					int arg5, 
					int arg6, 
					void* arg7)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					float arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0, 
					float arg1, 
					float arg2, 
					int arg3, 
					int arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.UI.CanvasTimingInformation__Impl.UnsafeType arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Microsoft.Graphics.Canvas.UI.CanvasTimingInformation__Impl.UnsafeType arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.TimeSpan arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Core.CoreInputDeviceTypes arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Rect arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					global::Windows.Foundation.Rect arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Foundation.Size arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					uint arg1, 
					global::Windows.Foundation.Rect arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Foundation.Rect arg1, 
					void* arg2, 
					uint arg3, 
					global::Windows.Foundation.Rect arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Foundation.Rect arg1, 
					uint arg2, 
					void* arg3, 
					uint arg4, 
					void* arg5, 
					uint arg6, 
					void* arg7, 
					void* arg8, 
					void* arg9)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7, 
								arg8, 
								arg9
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Effects.Matrix5x4 arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Vector3 arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Numerics.Matrix4x4 arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasUnicodeRange arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Microsoft.Graphics.Canvas.Text.CanvasGlyphMetrics arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Type__Impl.UnsafeType arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1, 
					global::System.Runtime.InteropServices.HSTRING arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.TimeSpan arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Graphics.Display.DisplayOrientations arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					ulong arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Web.Http.HttpProgress__Impl.UnsafeType arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					global::Windows.System.Threading.WorkItemOptions arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					global::System.Guid arg2, 
					ulong arg3, 
					global::System.Runtime.InteropServices.HSTRING arg4, 
					ulong arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					global::System.Guid arg2, 
					ulong arg3, 
					int arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1, 
					int arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					short arg2, 
					void* arg3, 
					global::System.IntPtr arg4, 
					global::System.IntPtr arg5, 
					void* arg6)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					global::System.Runtime.InteropServices.ComTypes.INVOKEKIND__System_Private_Interop arg1, 
					global::System.IntPtr arg2, 
					global::System.IntPtr arg3, 
					global::System.IntPtr arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					global::System.Runtime.InteropServices.ComTypes.INVOKEKIND__System_Private_Interop arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void ComCall__void__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.IntPtr arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			global::McgInterop.Intrinsics.StdCall__void__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					short arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__int__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}
	}

	internal unsafe static partial class ReverseComSharedStubs
	{
		// Signature, Windows.Foundation.IStringable.ToString, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_string__(
					global::System.IntPtr pComThis, 
					global::System.Runtime.InteropServices.HSTRING* unsafe_value__retval)
		{
			// Setup
			if (unsafe_value__retval != null)
				(*(unsafe_value__retval)) = default(global::System.Runtime.InteropServices.HSTRING);
			string value__retval = default(string);
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.Foundation.IStringable>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).ToString();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = global::System.Runtime.InteropServices.McgMarshal.StringToHString(value__retval);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.FreeHString((*(unsafe_value__retval)).handle);
					(*(unsafe_value__retval)) = default(global::System.Runtime.InteropServices.HSTRING);
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Data.IValueConverter.Convert, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [rev] [in] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [rev] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_object__Type__object__string__object__(
					global::System.IntPtr pComThis, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value, 
					global::System.Type__Impl.UnsafeType unsafe_targetType, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_parameter, 
					global::System.Runtime.InteropServices.HSTRING unsafe_language, 
					global::System.Runtime.InteropServices.__vtable_IInspectable** unsafe_returnValue__retval)
		{
			// Setup
			object value = default(object);
			global::System.Type targetType;
			object parameter = default(object);
			string language = default(string);
			if (unsafe_returnValue__retval != null)
				(*(unsafe_returnValue__retval)) = null;
			object returnValue__retval = default(object);
			try
			{
				// Marshalling
				value = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_value));
				targetType = global::System.Runtime.InteropServices.McgMarshal.TypeNameToType(
									unsafe_targetType.Name, 
									((int)unsafe_targetType.Kind)
								);
				parameter = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_parameter));
				language = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_language);
				// Call to managed method
				returnValue__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Xaml.Data.IValueConverter>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).Convert(
									value, 
									targetType, 
									parameter, 
									language
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_returnValue__retval != null)
					(*(unsafe_returnValue__retval)) = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(returnValue__retval);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_returnValue__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_returnValue__retval)))));
					(*(unsafe_returnValue__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.SuspendingEventHandler.Invoke, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [rev] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_SuspendingEventArgs__Windows_ApplicationModel__SuspendingEventArgs *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_object__ApplicationModel_SuspendingEventArgs__(
					global::System.IntPtr pComThis, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender, 
					global::Windows.ApplicationModel.ISuspendingEventArgs__Impl.Vtbl** unsafe_e)
		{
			// Setup
			object sender = default(object);
			global::Windows.ApplicationModel.SuspendingEventArgs e = default(global::Windows.ApplicationModel.SuspendingEventArgs);
			try
			{
				// Marshalling
				sender = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_sender));
				e = (global::Windows.ApplicationModel.SuspendingEventArgs)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_e), 
									typeof(global::Windows.ApplicationModel.ISuspendingEventArgs).TypeHandle, 
									typeof(global::Windows.ApplicationModel.SuspendingEventArgs).TypeHandle
								);
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Xaml.SuspendingEventHandler>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).Invoke(
									sender, 
									e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatedFrom, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Navigation_NavigationEventArgs__Windows_UI_Xaml_Navigation__NavigationEventArgs *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_UI_Xaml_Navigation_NavigationEventArgs__(
					global::System.IntPtr pComThis, 
					global::Windows.UI.Xaml.Navigation.INavigationEventArgs__Impl.Vtbl** unsafe_e)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigationEventArgs e = default(global::Windows.UI.Xaml.Navigation.NavigationEventArgs);
			try
			{
				// Marshalling
				e = (global::Windows.UI.Xaml.Navigation.NavigationEventArgs)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_e), 
									typeof(global::Windows.UI.Xaml.Navigation.INavigationEventArgs).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Navigation.NavigationEventArgs).TypeHandle
								);
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Xaml.Controls.IPageOverrides>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).OnNavigatedFrom(e);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlMetadataProvider.GetXmlnsDefinitions, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_rg_UI_Xaml_Markup_XmlnsDefinition__(
					global::System.IntPtr pComThis, 
					uint* unsafe_definitions__retval_mcgLength, 
					global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType** unsafe_definitions__retval)
		{
			// Setup
			if (unsafe_definitions__retval != null)
				(*(unsafe_definitions__retval)) = null;
			global::Windows.UI.Xaml.Markup.XmlnsDefinition[] definitions__retval = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition[]);
			try
			{
				// Marshalling
				// Call to managed method
				definitions__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).GetXmlnsDefinitions();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_definitions__retval != null)
					if (definitions__retval == null)
						(*(unsafe_definitions__retval)) = null;
					else
					{
						if (definitions__retval != null)
							(*(unsafe_definitions__retval_mcgLength)) = (uint)definitions__retval.Length;
						if (definitions__retval != null)
							(*(unsafe_definitions__retval)) = (global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked((*(unsafe_definitions__retval_mcgLength)) * sizeof(global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType))));
						for (uint mcgIdx = 0; (mcgIdx < (*(unsafe_definitions__retval_mcgLength))); mcgIdx++)
						{
							// [rev] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.StructMarshaller] Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition definitions__retval
							global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.Marshal__SafeToUnsafe(
												ref definitions__retval[mcgIdx], 
												out (*(unsafe_definitions__retval))[mcgIdx]
											);
						}
					}
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_definitions__retval != null)
				{
					global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree((*(unsafe_definitions__retval)));
					(*(unsafe_definitions__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.get_BaseType, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Markup_IXamlType__Windows_UI_Xaml_Markup__IXamlType *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_UI_Xaml_Markup_IXamlType__(
					global::System.IntPtr pComThis, 
					global::Windows.UI.Xaml.Markup.IXamlType__Impl.Vtbl*** unsafe_value__retval)
		{
			// Setup
			if (unsafe_value__retval != null)
				(*(unsafe_value__retval)) = null;
			global::Windows.UI.Xaml.Markup.IXamlType value__retval = default(global::Windows.UI.Xaml.Markup.IXamlType);
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Xaml.Markup.IXamlType>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_BaseType();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = (global::Windows.UI.Xaml.Markup.IXamlType__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										value__retval, 
										typeof(global::Windows.UI.Xaml.Markup.IXamlType).TypeHandle
									);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_value__retval)))));
					(*(unsafe_value__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.get_IsArray, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_bool__(
					global::System.IntPtr pComThis, 
					sbyte* unsafe_value__retval)
		{
			// Setup
			bool value__retval;
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Xaml.Markup.IXamlType>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_IsArray();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = (value__retval ? ((sbyte)1) : ((sbyte)0));
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = 0;
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.AddToVector, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_object__object__(
					global::System.IntPtr pComThis, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_instance, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value)
		{
			// Setup
			object instance = default(object);
			object value = default(object);
			try
			{
				// Marshalling
				instance = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_instance));
				value = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_value));
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Xaml.Markup.IXamlType>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).AddToVector(
									instance, 
									value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.RunInitializer, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_(global::System.IntPtr pComThis)
		{
			try
			{
				// Marshalling
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Xaml.Markup.IXamlType>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).RunInitializer();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<string>.get_Completed, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_string___Windows_Foundation__AsyncOperationCompletedHandler_A_string_V_ *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func__AsyncOperationCompletedHandler_1_string___(
					global::System.IntPtr pComThis, 
					global::Windows.Foundation.AsyncOperationCompletedHandler_A_string_V___Impl.Vtbl*** unsafe___value__retval)
		{
			// Setup
			if (unsafe___value__retval != null)
				(*(unsafe___value__retval)) = null;
			global::Windows.Foundation.AsyncOperationCompletedHandler<string> __value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler<string>);
			try
			{
				// Marshalling
				// Call to managed method
				__value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.Foundation.IAsyncOperation<string>>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_Completed();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval != null)
					(*(unsafe___value__retval)) = (global::Windows.Foundation.AsyncOperationCompletedHandler_A_string_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
										__value__retval, 
										typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<string>).TypeHandle, 
										global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget40>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_string_V___Impl.Invoke)
									);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe___value__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe___value__retval)))));
					(*(unsafe___value__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Navigation.NavigatedEventHandler.Invoke, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [rev] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Navigation_NavigationEventArgs__Windows_UI_Xaml_Navigation__NavigationEventArgs *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_object__UI_Xaml_Navigation_NavigationEventArgs__(
					global::System.IntPtr pComThis, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender, 
					global::Windows.UI.Xaml.Navigation.INavigationEventArgs__Impl.Vtbl** unsafe_e)
		{
			// Setup
			object sender = default(object);
			global::Windows.UI.Xaml.Navigation.NavigationEventArgs e = default(global::Windows.UI.Xaml.Navigation.NavigationEventArgs);
			try
			{
				// Marshalling
				sender = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_sender));
				e = (global::Windows.UI.Xaml.Navigation.NavigationEventArgs)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_e), 
									typeof(global::Windows.UI.Xaml.Navigation.INavigationEventArgs).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Navigation.NavigationEventArgs).TypeHandle
								);
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Xaml.Navigation.NavigatedEventHandler>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).Invoke(
									sender, 
									e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}
	}
}

