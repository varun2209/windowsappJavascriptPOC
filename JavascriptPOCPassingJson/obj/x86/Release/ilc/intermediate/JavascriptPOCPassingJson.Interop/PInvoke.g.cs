#define MCG_WINRT_SUPPORTED
using Mcg.System;
using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.WindowsRuntime;


// -----------------------------------------------------------------------------------------------------------
// 
// WARNING: THIS SOURCE FILE IS FOR 32-BIT BUILDS ONLY!
// 
// MCG GENERATED CODE
// 
// This C# source file is generated by MCG and is added into the application at compile time to support interop features.
// 
// It has three primary components:
// 
// 1. Public type definitions with interop implementation used by this application including WinRT & COM data structures and P/Invokes.
// 
// 2. The 'McgInterop' class containing marshaling code that acts as a bridge from managed code to native code.
// 
// 3. The 'McgNative' class containing marshaling code and native type definitions that call into native code and are called by native code.
// 
// -----------------------------------------------------------------------------------------------------------
// 
// warning CS0067: The event 'event' is never used
#pragma warning disable 67
// warning CS0169: The field 'field' is never used
#pragma warning disable 169
// warning CS0649: Field 'field' is never assigned to, and will always have its default value 0
#pragma warning disable 649
// warning CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// warning CS0108 'member1' hides inherited member 'member2'. Use the new keyword if hiding was intended.
#pragma warning disable 108
// warning CS0114 'member1' hides inherited member 'member2'.  To make the current method override that implementation, add the override keyword. Otherwise add the new keyword.
#pragma warning disable 114
// warning CS0659 'type' overrides Object.Equals but does not override GetHashCode.
#pragma warning disable 659
// warning CS0465 Introducing a 'Finalize' method can interfere with destructor invocation. Did you intend to declare a destructor?
#pragma warning disable 465
// warning CS0028 'function declaration' has the wrong signature to be an entry point
#pragma warning disable 28
// warning CS0162 Unreachable code Detected
#pragma warning disable 162
// warning CS0628 new protected member declared in sealed class
#pragma warning disable 628

namespace McgInterop
{
	/// <summary>
	/// P/Invoke class for module 'Chakra.dll'
	/// </summary>
	public unsafe static partial class Chakra_dll
	{
		// Signature, JsCreateRuntime, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptRuntimeAttributes__JavascriptPOCPassingJson__JavaScriptRuntimeAttributes__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.PInvokeDelegateMarshaller] ChakraBridge_JavaScriptThreadServiceCallback__JavascriptPOCPassingJson__ChakraBridge__JavaScriptThreadServiceCallback__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptRuntime__JavascriptPOCPassingJson__ChakraBridge__JavaScriptRuntime__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsCreateRuntime")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateRuntime(
					global::ChakraBridge.JavaScriptRuntimeAttributes__JavascriptPOCPassingJson attributes, 
					global::ChakraBridge.JavaScriptThreadServiceCallback__JavascriptPOCPassingJson threadService, 
					out global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson runtime)
		{
			// Setup
			void* unsafe_threadService = default(void*);
			global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson unsafe_runtime;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			try
			{
				// Marshalling
				unsafe_threadService = (void*)global::System.Runtime.InteropServices.McgModuleManager.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("ChakraBridge.JavaScriptThreadServiceCallback,JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicK" +
											"eyToken=null"), 
									threadService
								);
				// Call to native method
				unsafe___value = global::McgInterop.Chakra_dll_PInvokes.JsCreateRuntime(
									attributes, 
									unsafe_threadService, 
									&(unsafe_runtime)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				runtime = unsafe_runtime;
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(threadService);
			}
		}

		// Signature, JsCollectGarbage, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptRuntime__JavascriptPOCPassingJson__ChakraBridge__JavaScriptRuntime__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsCollectGarbage")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCollectGarbage(global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson handle)
		{
			// Setup
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Chakra_dll_PInvokes.JsCollectGarbage(handle);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, JsDisposeRuntime, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptRuntime__JavascriptPOCPassingJson__ChakraBridge__JavaScriptRuntime__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsDisposeRuntime")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsDisposeRuntime(global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson handle)
		{
			// Setup
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Chakra_dll_PInvokes.JsDisposeRuntime(handle);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, JsGetRuntimeMemoryUsage, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptRuntime__JavascriptPOCPassingJson__ChakraBridge__JavaScriptRuntime__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_UIntPtr____w64 unsigned int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetRuntimeMemoryUsage")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetRuntimeMemoryUsage(
					global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson runtime, 
					out global::System.UIntPtr memoryUsage)
		{
			// Setup
			global::System.UIntPtr unsafe_memoryUsage;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Chakra_dll_PInvokes.JsGetRuntimeMemoryUsage(
								runtime, 
								&(unsafe_memoryUsage)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			memoryUsage = unsafe_memoryUsage;
			// Return
			return unsafe___value;
		}

		// Signature, JsGetRuntimeMemoryLimit, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptRuntime__JavascriptPOCPassingJson__ChakraBridge__JavaScriptRuntime__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_UIntPtr____w64 unsigned int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetRuntimeMemoryLimit")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetRuntimeMemoryLimit(
					global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson runtime, 
					out global::System.UIntPtr memoryLimit)
		{
			// Setup
			global::System.UIntPtr unsafe_memoryLimit;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Chakra_dll_PInvokes.JsGetRuntimeMemoryLimit(
								runtime, 
								&(unsafe_memoryLimit)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			memoryLimit = unsafe_memoryLimit;
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'chakra.dll'
	/// </summary>
	public unsafe static partial class chakra_dll
	{
		// Signature, JsSetRuntimeMemoryLimit, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptRuntime__JavascriptPOCPassingJson__ChakraBridge__JavaScriptRuntime__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_UIntPtr____w64 unsigned int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsSetRuntimeMemoryLimit")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSetRuntimeMemoryLimit(
					global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson runtime, 
					global::System.UIntPtr memoryLimit)
		{
			// Setup
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsSetRuntimeMemoryLimit(
								runtime, 
								memoryLimit
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, JsSetRuntimeMemoryAllocationCallback, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptRuntime__JavascriptPOCPassingJson__ChakraBridge__JavaScriptRuntime__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.PInvokeDelegateMarshaller] ChakraBridge_JavaScriptMemoryAllocationCallback__JavascriptPOCPassingJson__ChakraBridge__JavaScriptMemoryAllocationCallback__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsSetRuntimeMemoryAllocationCallback")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSetRuntimeMemoryAllocationCallback(
					global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson runtime, 
					global::System.IntPtr callbackState, 
					global::ChakraBridge.JavaScriptMemoryAllocationCallback__JavascriptPOCPassingJson allocationCallback)
		{
			// Setup
			void* unsafe_allocationCallback = default(void*);
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			try
			{
				// Marshalling
				unsafe_allocationCallback = (void*)global::System.Runtime.InteropServices.McgModuleManager.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("ChakraBridge.JavaScriptMemoryAllocationCallback,JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, Publ" +
											"icKeyToken=null"), 
									allocationCallback
								);
				// Call to native method
				unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsSetRuntimeMemoryAllocationCallback(
									runtime, 
									callbackState, 
									unsafe_allocationCallback
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(allocationCallback);
			}
		}

		// Signature, JsSetRuntimeBeforeCollectCallback, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptRuntime__JavascriptPOCPassingJson__ChakraBridge__JavaScriptRuntime__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.PInvokeDelegateMarshaller] ChakraBridge_JavaScriptBeforeCollectCallback__JavascriptPOCPassingJson__ChakraBridge__JavaScriptBeforeCollectCallback__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsSetRuntimeBeforeCollectCallback")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSetRuntimeBeforeCollectCallback(
					global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson runtime, 
					global::System.IntPtr callbackState, 
					global::ChakraBridge.JavaScriptBeforeCollectCallback__JavascriptPOCPassingJson beforeCollectCallback)
		{
			// Setup
			void* unsafe_beforeCollectCallback = default(void*);
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			try
			{
				// Marshalling
				unsafe_beforeCollectCallback = (void*)global::System.Runtime.InteropServices.McgModuleManager.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("ChakraBridge.JavaScriptBeforeCollectCallback,JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicK" +
											"eyToken=null"), 
									beforeCollectCallback
								);
				// Call to native method
				unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsSetRuntimeBeforeCollectCallback(
									runtime, 
									callbackState, 
									unsafe_beforeCollectCallback
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(beforeCollectCallback);
			}
		}

		// Signature, JsContextAddRef, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptContext__JavascriptPOCPassingJson__ChakraBridge__JavaScriptContext__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsContextAddRef")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsContextAddRef(
					global::ChakraBridge.JavaScriptContext__JavascriptPOCPassingJson reference, 
					out uint count)
		{
			// Setup
			uint unsafe_count;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsContextAddRef(
								reference, 
								&(unsafe_count)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			count = unsafe_count;
			// Return
			return unsafe___value;
		}

		// Signature, JsAddRef, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsAddRef")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsAddRef(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson reference, 
					out uint count)
		{
			// Setup
			uint unsafe_count;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsAddRef(
								reference, 
								&(unsafe_count)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			count = unsafe_count;
			// Return
			return unsafe___value;
		}

		// Signature, JsContextRelease, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptContext__JavascriptPOCPassingJson__ChakraBridge__JavaScriptContext__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsContextRelease")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsContextRelease(
					global::ChakraBridge.JavaScriptContext__JavascriptPOCPassingJson reference, 
					out uint count)
		{
			// Setup
			uint unsafe_count;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsContextRelease(
								reference, 
								&(unsafe_count)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			count = unsafe_count;
			// Return
			return unsafe___value;
		}

		// Signature, JsRelease, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsRelease")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsRelease(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson reference, 
					out uint count)
		{
			// Setup
			uint unsafe_count;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsRelease(
								reference, 
								&(unsafe_count)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			count = unsafe_count;
			// Return
			return unsafe___value;
		}

		// Signature, JsCreateContext, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptRuntime__JavascriptPOCPassingJson__ChakraBridge__JavaScriptRuntime__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptContext__JavascriptPOCPassingJson__ChakraBridge__JavaScriptContext__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsCreateContext")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateContext(
					global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson runtime, 
					out global::ChakraBridge.JavaScriptContext__JavascriptPOCPassingJson newContext)
		{
			// Setup
			global::ChakraBridge.JavaScriptContext__JavascriptPOCPassingJson unsafe_newContext;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsCreateContext(
								runtime, 
								&(unsafe_newContext)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			newContext = unsafe_newContext;
			// Return
			return unsafe___value;
		}

		// Signature, JsGetCurrentContext, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptContext__JavascriptPOCPassingJson__ChakraBridge__JavaScriptContext__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetCurrentContext")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetCurrentContext(out global::ChakraBridge.JavaScriptContext__JavascriptPOCPassingJson currentContext)
		{
			// Setup
			global::ChakraBridge.JavaScriptContext__JavascriptPOCPassingJson unsafe_currentContext;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetCurrentContext(&(unsafe_currentContext));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			currentContext = unsafe_currentContext;
			// Return
			return unsafe___value;
		}

		// Signature, JsSetCurrentContext, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptContext__JavascriptPOCPassingJson__ChakraBridge__JavaScriptContext__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsSetCurrentContext")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSetCurrentContext(global::ChakraBridge.JavaScriptContext__JavascriptPOCPassingJson context)
		{
			// Setup
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsSetCurrentContext(context);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, JsGetRuntime, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptContext__JavascriptPOCPassingJson__ChakraBridge__JavaScriptContext__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptRuntime__JavascriptPOCPassingJson__ChakraBridge__JavaScriptRuntime__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetRuntime")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetRuntime(
					global::ChakraBridge.JavaScriptContext__JavascriptPOCPassingJson context, 
					out global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson runtime)
		{
			// Setup
			global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson unsafe_runtime;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetRuntime(
								context, 
								&(unsafe_runtime)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			runtime = unsafe_runtime;
			// Return
			return unsafe___value;
		}

		// Signature, JsStartDebugging, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsStartDebugging")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsStartDebugging()
		{
			// Setup
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsStartDebugging();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, JsIdle, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsIdle")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsIdle(out uint nextIdleTick)
		{
			// Setup
			uint unsafe_nextIdleTick;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsIdle(&(unsafe_nextIdleTick));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			nextIdleTick = unsafe_nextIdleTick;
			// Return
			return unsafe___value;
		}

		// Signature, JsParseScript, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptSourceContext__JavascriptPOCPassingJson__ChakraBridge__JavaScriptSourceContext__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsParseScript")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsParseScript(
					string script, 
					global::ChakraBridge.JavaScriptSourceContext__JavascriptPOCPassingJson sourceContext, 
					string sourceUrl, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson result)
		{
			// Setup
			ushort* unsafe_script = default(ushort*);
			ushort* unsafe_sourceUrl = default(ushort*);
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_result;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			fixed (char* pinned_script = script)
			{
				unsafe_script = (ushort*)pinned_script;
				fixed (char* pinned_sourceUrl = sourceUrl)
				{
					unsafe_sourceUrl = (ushort*)pinned_sourceUrl;
					// Call to native method
					unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsParseScript(
										unsafe_script, 
										sourceContext, 
										unsafe_sourceUrl, 
										&(unsafe_result)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					result = unsafe_result;
				}
			}
			// Return
			return unsafe___value;
		}

		// Signature, JsRunScript, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptSourceContext__JavascriptPOCPassingJson__ChakraBridge__JavaScriptSourceContext__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsRunScript")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsRunScript(
					string script, 
					global::ChakraBridge.JavaScriptSourceContext__JavascriptPOCPassingJson sourceContext, 
					string sourceUrl, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson result)
		{
			// Setup
			ushort* unsafe_script = default(ushort*);
			ushort* unsafe_sourceUrl = default(ushort*);
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_result;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			fixed (char* pinned_script = script)
			{
				unsafe_script = (ushort*)pinned_script;
				fixed (char* pinned_sourceUrl = sourceUrl)
				{
					unsafe_sourceUrl = (ushort*)pinned_sourceUrl;
					// Call to native method
					unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsRunScript(
										unsafe_script, 
										sourceContext, 
										unsafe_sourceUrl, 
										&(unsafe_result)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					result = unsafe_result;
				}
			}
			// Return
			return unsafe___value;
		}

		// Signature, JsSerializeScript, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, [fwd] [in] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsSerializeScript")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSerializeScript(
					string script, 
					byte[] buffer, 
					ref ulong bufferSize)
		{
			// Setup
			ushort* unsafe_script = default(ushort*);
			byte* unsafe_buffer;
			ulong unsafe_bufferSize;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			fixed (char* pinned_script = script)
			{
				unsafe_script = (ushort*)pinned_script;
				fixed (byte* pinned_buffer = global::McgInterop.McgCoreHelpers.GetArrayForCompat(buffer))
				{
					unsafe_buffer = (byte*)pinned_buffer;
					unsafe_bufferSize = bufferSize;
					// Call to native method
					unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsSerializeScript(
										unsafe_script, 
										unsafe_buffer, 
										&(unsafe_bufferSize)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					bufferSize = unsafe_bufferSize;
				}
			}
			// Return
			return unsafe___value;
		}

		// Signature, JsParseSerializedScript, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptSourceContext__JavascriptPOCPassingJson__ChakraBridge__JavaScriptSourceContext__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsParseSerializedScript")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsParseSerializedScript(
					string script, 
					byte[] buffer, 
					global::ChakraBridge.JavaScriptSourceContext__JavascriptPOCPassingJson sourceContext, 
					string sourceUrl, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson result)
		{
			// Setup
			ushort* unsafe_script = default(ushort*);
			byte* unsafe_buffer;
			ushort* unsafe_sourceUrl = default(ushort*);
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_result;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			fixed (char* pinned_script = script)
			{
				unsafe_script = (ushort*)pinned_script;
				fixed (byte* pinned_buffer = global::McgInterop.McgCoreHelpers.GetArrayForCompat(buffer))
				{
					unsafe_buffer = (byte*)pinned_buffer;
					fixed (char* pinned_sourceUrl = sourceUrl)
					{
						unsafe_sourceUrl = (ushort*)pinned_sourceUrl;
						// Call to native method
						unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsParseSerializedScript(
											unsafe_script, 
											unsafe_buffer, 
											sourceContext, 
											unsafe_sourceUrl, 
											&(unsafe_result)
										);
						global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
						result = unsafe_result;
					}
				}
			}
			// Return
			return unsafe___value;
		}

		// Signature, JsRunSerializedScript, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptSourceContext__JavascriptPOCPassingJson__ChakraBridge__JavaScriptSourceContext__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsRunSerializedScript")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsRunSerializedScript(
					string script, 
					byte[] buffer, 
					global::ChakraBridge.JavaScriptSourceContext__JavascriptPOCPassingJson sourceContext, 
					string sourceUrl, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson result)
		{
			// Setup
			ushort* unsafe_script = default(ushort*);
			byte* unsafe_buffer;
			ushort* unsafe_sourceUrl = default(ushort*);
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_result;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			fixed (char* pinned_script = script)
			{
				unsafe_script = (ushort*)pinned_script;
				fixed (byte* pinned_buffer = global::McgInterop.McgCoreHelpers.GetArrayForCompat(buffer))
				{
					unsafe_buffer = (byte*)pinned_buffer;
					fixed (char* pinned_sourceUrl = sourceUrl)
					{
						unsafe_sourceUrl = (ushort*)pinned_sourceUrl;
						// Call to native method
						unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsRunSerializedScript(
											unsafe_script, 
											unsafe_buffer, 
											sourceContext, 
											unsafe_sourceUrl, 
											&(unsafe_result)
										);
						global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
						result = unsafe_result;
					}
				}
			}
			// Return
			return unsafe___value;
		}

		// Signature, JsGetPropertyIdFromName, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptPropertyId__JavascriptPOCPassingJson__ChakraBridge__JavaScriptPropertyId__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetPropertyIdFromName")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetPropertyIdFromName(
					string name, 
					out global::ChakraBridge.JavaScriptPropertyId__JavascriptPOCPassingJson propertyId)
		{
			// Setup
			ushort* unsafe_name = default(ushort*);
			global::ChakraBridge.JavaScriptPropertyId__JavascriptPOCPassingJson unsafe_propertyId;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			fixed (char* pinned_name = name)
			{
				unsafe_name = (ushort*)pinned_name;
				// Call to native method
				unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetPropertyIdFromName(
									unsafe_name, 
									&(unsafe_propertyId)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				propertyId = unsafe_propertyId;
			}
			// Return
			return unsafe___value;
		}

		// Signature, JsGetPropertyNameFromId, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptPropertyId__JavascriptPOCPassingJson__ChakraBridge__JavaScriptPropertyId__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetPropertyNameFromId")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetPropertyNameFromId(
					global::ChakraBridge.JavaScriptPropertyId__JavascriptPOCPassingJson propertyId, 
					out string name)
		{
			// Setup
			ushort* unsafe_name = default(ushort*);
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			try
			{
				// Marshalling
				unsafe_name = null;
				// Call to native method
				unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetPropertyNameFromId(
									propertyId, 
									&(unsafe_name)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				name = ((unsafe_name != null) ? new string(((char*)unsafe_name)) : null);
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, JsGetUndefinedValue, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetUndefinedValue")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetUndefinedValue(out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson undefinedValue)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_undefinedValue;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetUndefinedValue(&(unsafe_undefinedValue));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			undefinedValue = unsafe_undefinedValue;
			// Return
			return unsafe___value;
		}

		// Signature, JsGetNullValue, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetNullValue")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetNullValue(out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson nullValue)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_nullValue;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetNullValue(&(unsafe_nullValue));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			nullValue = unsafe_nullValue;
			// Return
			return unsafe___value;
		}

		// Signature, JsGetTrueValue, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetTrueValue")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetTrueValue(out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson trueValue)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_trueValue;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetTrueValue(&(unsafe_trueValue));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			trueValue = unsafe_trueValue;
			// Return
			return unsafe___value;
		}

		// Signature, JsGetFalseValue, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetFalseValue")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetFalseValue(out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson falseValue)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_falseValue;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetFalseValue(&(unsafe_falseValue));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			falseValue = unsafe_falseValue;
			// Return
			return unsafe___value;
		}

		// Signature, JsBoolToBoolean, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsBoolToBoolean")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsBoolToBoolean(
					bool value, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson booleanValue)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_booleanValue;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsBoolToBoolean(
								(value ? 1 : 0), 
								&(unsafe_booleanValue)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			booleanValue = unsafe_booleanValue;
			// Return
			return unsafe___value;
		}

		// Signature, JsBooleanToBool, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsBooleanToBool")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsBooleanToBool(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson booleanValue, 
					out bool boolValue)
		{
			// Setup
			int unsafe_boolValue;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsBooleanToBool(
								booleanValue, 
								&(unsafe_boolValue)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			boolValue = unsafe_boolValue != 0;
			// Return
			return unsafe___value;
		}

		// Signature, JsConvertValueToBoolean, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsConvertValueToBoolean")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsConvertValueToBoolean(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson booleanValue)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_booleanValue;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsConvertValueToBoolean(
								value, 
								&(unsafe_booleanValue)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			booleanValue = unsafe_booleanValue;
			// Return
			return unsafe___value;
		}

		// Signature, JsGetValueType, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptValueType__JavascriptPOCPassingJson__JavaScriptValueType__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetValueType")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetValueType(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value, 
					out global::ChakraBridge.JavaScriptValueType__JavascriptPOCPassingJson type)
		{
			// Setup
			global::ChakraBridge.JavaScriptValueType__JavascriptPOCPassingJson unsafe_type;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetValueType(
								value, 
								&(unsafe_type)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			type = unsafe_type;
			// Return
			return unsafe___value;
		}

		// Signature, JsDoubleToNumber, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsDoubleToNumber")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsDoubleToNumber(
					double doubleValue, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_value;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsDoubleToNumber(
								doubleValue, 
								&(unsafe_value)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value = unsafe_value;
			// Return
			return unsafe___value;
		}

		// Signature, JsIntToNumber, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsIntToNumber")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsIntToNumber(
					int intValue, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_value;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsIntToNumber(
								intValue, 
								&(unsafe_value)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value = unsafe_value;
			// Return
			return unsafe___value;
		}

		// Signature, JsNumberToDouble, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] double__double, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsNumberToDouble")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsNumberToDouble(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value, 
					out double doubleValue)
		{
			// Setup
			double unsafe_doubleValue;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsNumberToDouble(
								value, 
								&(unsafe_doubleValue)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			doubleValue = unsafe_doubleValue;
			// Return
			return unsafe___value;
		}

		// Signature, JsConvertValueToNumber, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsConvertValueToNumber")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsConvertValueToNumber(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson numberValue)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_numberValue;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsConvertValueToNumber(
								value, 
								&(unsafe_numberValue)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			numberValue = unsafe_numberValue;
			// Return
			return unsafe___value;
		}

		// Signature, JsGetStringLength, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetStringLength")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetStringLength(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson sringValue, 
					out int length)
		{
			// Setup
			int unsafe_length;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetStringLength(
								sringValue, 
								&(unsafe_length)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			length = unsafe_length;
			// Return
			return unsafe___value;
		}

		// Signature, JsPointerToString, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_UIntPtr____w64 unsigned int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsPointerToString")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsPointerToString(
					string value, 
					global::System.UIntPtr stringLength, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson stringValue)
		{
			// Setup
			ushort* unsafe_value = default(ushort*);
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_stringValue;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			fixed (char* pinned_value = value)
			{
				unsafe_value = (ushort*)pinned_value;
				// Call to native method
				unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsPointerToString(
									unsafe_value, 
									stringLength, 
									&(unsafe_stringValue)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				stringValue = unsafe_stringValue;
			}
			// Return
			return unsafe___value;
		}

		// Signature, JsStringToPointer, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_UIntPtr____w64 unsigned int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsStringToPointer")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsStringToPointer(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value, 
					out global::System.IntPtr stringValue, 
					out global::System.UIntPtr stringLength)
		{
			// Setup
			global::System.IntPtr unsafe_stringValue;
			global::System.UIntPtr unsafe_stringLength;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsStringToPointer(
								value, 
								&(unsafe_stringValue), 
								&(unsafe_stringLength)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			stringLength = unsafe_stringLength;
			stringValue = unsafe_stringValue;
			// Return
			return unsafe___value;
		}

		// Signature, JsConvertValueToString, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsConvertValueToString")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsConvertValueToString(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson stringValue)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_stringValue;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsConvertValueToString(
								value, 
								&(unsafe_stringValue)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			stringValue = unsafe_stringValue;
			// Return
			return unsafe___value;
		}

		// Signature, JsVariantToValue, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.VariantMarshaller] object__System.Runtime.InteropServices.Variant, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsVariantToValue")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsVariantToValue(
					ref object var, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value)
		{
			// Setup
			global::System.Runtime.InteropServices.Variant unsafe_var = default(global::System.Runtime.InteropServices.Variant);
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_value;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			try
			{
				// Marshalling
				unsafe_var = new global::System.Runtime.InteropServices.Variant(var);
				// Call to native method
				unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsVariantToValue(
									&(unsafe_var), 
									&(unsafe_value)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value = unsafe_value;
				var = unsafe_var.ToObject();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				unsafe_var.Clear();
			}
		}

		// Signature, JsValueToVariant, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.VariantMarshaller] object__System.Runtime.InteropServices.Variant, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsValueToVariant")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsValueToVariant(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					out object var)
		{
			// Setup
			global::System.Runtime.InteropServices.Variant unsafe_var = default(global::System.Runtime.InteropServices.Variant);
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			try
			{
				// Marshalling
				unsafe_var = default(global::System.Runtime.InteropServices.Variant);
				// Call to native method
				unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsValueToVariant(
									obj, 
									&(unsafe_var)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				var = unsafe_var.ToObject();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				unsafe_var.Clear();
			}
		}

		// Signature, JsGetGlobalObject, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetGlobalObject")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetGlobalObject(out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson globalObject)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_globalObject;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetGlobalObject(&(unsafe_globalObject));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			globalObject = unsafe_globalObject;
			// Return
			return unsafe___value;
		}

		// Signature, JsCreateObject, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsCreateObject")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateObject(out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_obj;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsCreateObject(&(unsafe_obj));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			obj = unsafe_obj;
			// Return
			return unsafe___value;
		}

		// Signature, JsCreateExternalObject, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.PInvokeDelegateMarshaller] ChakraBridge_JavaScriptObjectFinalizeCallback__JavascriptPOCPassingJson__ChakraBridge__JavaScriptObjectFinalizeCallback__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsCreateExternalObject")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateExternalObject(
					global::System.IntPtr data, 
					global::ChakraBridge.JavaScriptObjectFinalizeCallback__JavascriptPOCPassingJson finalizeCallback, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj)
		{
			// Setup
			void* unsafe_finalizeCallback = default(void*);
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_obj;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			try
			{
				// Marshalling
				unsafe_finalizeCallback = (void*)global::System.Runtime.InteropServices.McgModuleManager.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("ChakraBridge.JavaScriptObjectFinalizeCallback,JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, Public" +
											"KeyToken=null"), 
									finalizeCallback
								);
				// Call to native method
				unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsCreateExternalObject(
									data, 
									unsafe_finalizeCallback, 
									&(unsafe_obj)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				obj = unsafe_obj;
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(finalizeCallback);
			}
		}

		// Signature, JsConvertValueToObject, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsConvertValueToObject")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsConvertValueToObject(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_obj;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsConvertValueToObject(
								value, 
								&(unsafe_obj)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			obj = unsafe_obj;
			// Return
			return unsafe___value;
		}

		// Signature, JsGetPrototype, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetPrototype")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetPrototype(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson prototypeObject)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_prototypeObject;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetPrototype(
								obj, 
								&(unsafe_prototypeObject)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			prototypeObject = unsafe_prototypeObject;
			// Return
			return unsafe___value;
		}

		// Signature, JsSetPrototype, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsSetPrototype")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSetPrototype(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson prototypeObject)
		{
			// Setup
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsSetPrototype(
								obj, 
								prototypeObject
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, JsGetExtensionAllowed, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetExtensionAllowed")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetExtensionAllowed(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					out bool value)
		{
			// Setup
			int unsafe_value;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetExtensionAllowed(
								obj, 
								&(unsafe_value)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value = unsafe_value != 0;
			// Return
			return unsafe___value;
		}

		// Signature, JsPreventExtension, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsPreventExtension")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsPreventExtension(global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj)
		{
			// Setup
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsPreventExtension(obj);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, JsGetProperty, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptPropertyId__JavascriptPOCPassingJson__ChakraBridge__JavaScriptPropertyId__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetProperty")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetProperty(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptPropertyId__JavascriptPOCPassingJson propertyId, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_value;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetProperty(
								obj, 
								propertyId, 
								&(unsafe_value)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value = unsafe_value;
			// Return
			return unsafe___value;
		}

		// Signature, JsGetOwnPropertyDescriptor, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptPropertyId__JavascriptPOCPassingJson__ChakraBridge__JavaScriptPropertyId__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetOwnPropertyDescriptor")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetOwnPropertyDescriptor(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptPropertyId__JavascriptPOCPassingJson propertyId, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson propertyDescriptor)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_propertyDescriptor;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetOwnPropertyDescriptor(
								obj, 
								propertyId, 
								&(unsafe_propertyDescriptor)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			propertyDescriptor = unsafe_propertyDescriptor;
			// Return
			return unsafe___value;
		}

		// Signature, JsGetOwnPropertyNames, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetOwnPropertyNames")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetOwnPropertyNames(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson propertyNames)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_propertyNames;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetOwnPropertyNames(
								obj, 
								&(unsafe_propertyNames)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			propertyNames = unsafe_propertyNames;
			// Return
			return unsafe___value;
		}

		// Signature, JsSetProperty, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptPropertyId__JavascriptPOCPassingJson__ChakraBridge__JavaScriptPropertyId__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsSetProperty")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSetProperty(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptPropertyId__JavascriptPOCPassingJson propertyId, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value, 
					bool useStrictRules)
		{
			// Setup
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsSetProperty(
								obj, 
								propertyId, 
								value, 
								(useStrictRules ? 1 : 0)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, JsHasProperty, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptPropertyId__JavascriptPOCPassingJson__ChakraBridge__JavaScriptPropertyId__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsHasProperty")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsHasProperty(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptPropertyId__JavascriptPOCPassingJson propertyId, 
					out bool hasProperty)
		{
			// Setup
			int unsafe_hasProperty;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsHasProperty(
								obj, 
								propertyId, 
								&(unsafe_hasProperty)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			hasProperty = unsafe_hasProperty != 0;
			// Return
			return unsafe___value;
		}

		// Signature, JsDeleteProperty, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptPropertyId__JavascriptPOCPassingJson__ChakraBridge__JavaScriptPropertyId__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsDeleteProperty")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsDeleteProperty(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptPropertyId__JavascriptPOCPassingJson propertyId, 
					bool useStrictRules, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson result)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_result;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsDeleteProperty(
								obj, 
								propertyId, 
								(useStrictRules ? 1 : 0), 
								&(unsafe_result)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			result = unsafe_result;
			// Return
			return unsafe___value;
		}

		// Signature, JsDefineProperty, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptPropertyId__JavascriptPOCPassingJson__ChakraBridge__JavaScriptPropertyId__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsDefineProperty")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsDefineProperty(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptPropertyId__JavascriptPOCPassingJson propertyId, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson propertyDescriptor, 
					out bool result)
		{
			// Setup
			int unsafe_result;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsDefineProperty(
								obj, 
								propertyId, 
								propertyDescriptor, 
								&(unsafe_result)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			result = unsafe_result != 0;
			// Return
			return unsafe___value;
		}

		// Signature, JsHasIndexedProperty, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsHasIndexedProperty")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsHasIndexedProperty(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson index, 
					out bool result)
		{
			// Setup
			int unsafe_result;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsHasIndexedProperty(
								obj, 
								index, 
								&(unsafe_result)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			result = unsafe_result != 0;
			// Return
			return unsafe___value;
		}

		// Signature, JsGetIndexedProperty, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetIndexedProperty")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetIndexedProperty(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson index, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson result)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_result;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetIndexedProperty(
								obj, 
								index, 
								&(unsafe_result)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			result = unsafe_result;
			// Return
			return unsafe___value;
		}

		// Signature, JsSetIndexedProperty, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsSetIndexedProperty")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSetIndexedProperty(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson index, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value)
		{
			// Setup
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsSetIndexedProperty(
								obj, 
								index, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, JsDeleteIndexedProperty, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsDeleteIndexedProperty")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsDeleteIndexedProperty(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson index)
		{
			// Setup
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsDeleteIndexedProperty(
								obj, 
								index
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, JsEquals, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsEquals")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsEquals(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj1, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj2, 
					out bool result)
		{
			// Setup
			int unsafe_result;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsEquals(
								obj1, 
								obj2, 
								&(unsafe_result)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			result = unsafe_result != 0;
			// Return
			return unsafe___value;
		}

		// Signature, JsStrictEquals, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsStrictEquals")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsStrictEquals(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj1, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj2, 
					out bool result)
		{
			// Setup
			int unsafe_result;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsStrictEquals(
								obj1, 
								obj2, 
								&(unsafe_result)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			result = unsafe_result != 0;
			// Return
			return unsafe___value;
		}

		// Signature, JsHasExternalData, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsHasExternalData")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsHasExternalData(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					out bool value)
		{
			// Setup
			int unsafe_value;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsHasExternalData(
								obj, 
								&(unsafe_value)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value = unsafe_value != 0;
			// Return
			return unsafe___value;
		}

		// Signature, JsGetExternalData, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetExternalData")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetExternalData(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					out global::System.IntPtr externalData)
		{
			// Setup
			global::System.IntPtr unsafe_externalData;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetExternalData(
								obj, 
								&(unsafe_externalData)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			externalData = unsafe_externalData;
			// Return
			return unsafe___value;
		}

		// Signature, JsSetExternalData, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsSetExternalData")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSetExternalData(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::System.IntPtr externalData)
		{
			// Setup
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsSetExternalData(
								obj, 
								externalData
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, JsCreateArray, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsCreateArray")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateArray(
					uint length, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson result)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_result;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsCreateArray(
								length, 
								&(unsafe_result)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			result = unsafe_result;
			// Return
			return unsafe___value;
		}

		// Signature, JsCallFunction, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] ushort__unsigned short, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsCallFunction")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCallFunction(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson function, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson[] arguments, 
					ushort argumentCount, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson result)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* unsafe_arguments = default(global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson*);
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_result;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			try
			{
				// Marshalling
				if (arguments == null)
					unsafe_arguments = null;
				else
				{
					if (arguments != null)
						unsafe_arguments = (global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(arguments.Length * sizeof(global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson))));
					for (uint mcgIdx = 0; (mcgIdx < arguments.Length); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson arguments
						unsafe_arguments[mcgIdx] = arguments[mcgIdx];
					}
				}
				// Call to native method
				unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsCallFunction(
									function, 
									unsafe_arguments, 
									argumentCount, 
									&(unsafe_result)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				result = unsafe_result;
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_arguments);
			}
		}

		// Signature, JsConstructObject, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] ushort__unsigned short, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsConstructObject")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsConstructObject(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson function, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson[] arguments, 
					ushort argumentCount, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson result)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* unsafe_arguments = default(global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson*);
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_result;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			try
			{
				// Marshalling
				if (arguments == null)
					unsafe_arguments = null;
				else
				{
					if (arguments != null)
						unsafe_arguments = (global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(arguments.Length * sizeof(global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson))));
					for (uint mcgIdx = 0; (mcgIdx < arguments.Length); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson arguments
						unsafe_arguments[mcgIdx] = arguments[mcgIdx];
					}
				}
				// Call to native method
				unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsConstructObject(
									function, 
									unsafe_arguments, 
									argumentCount, 
									&(unsafe_result)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				result = unsafe_result;
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_arguments);
			}
		}

		// Signature, JsCreateFunction, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.PInvokeDelegateMarshaller] ChakraBridge_JavaScriptNativeFunction__JavascriptPOCPassingJson__ChakraBridge__JavaScriptNativeFunction__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsCreateFunction")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateFunction(
					global::ChakraBridge.JavaScriptNativeFunction__JavascriptPOCPassingJson nativeFunction, 
					global::System.IntPtr externalData, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson function)
		{
			// Setup
			void* unsafe_nativeFunction = default(void*);
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_function;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			try
			{
				// Marshalling
				unsafe_nativeFunction = (void*)global::System.Runtime.InteropServices.McgModuleManager.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("ChakraBridge.JavaScriptNativeFunction,JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken" +
											"=null"), 
									nativeFunction
								);
				// Call to native method
				unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsCreateFunction(
									unsafe_nativeFunction, 
									externalData, 
									&(unsafe_function)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				function = unsafe_function;
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(nativeFunction);
			}
		}

		// Signature, JsCreateError, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsCreateError")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateError(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson message, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson error)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_error;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsCreateError(
								message, 
								&(unsafe_error)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			error = unsafe_error;
			// Return
			return unsafe___value;
		}

		// Signature, JsCreateRangeError, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsCreateRangeError")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateRangeError(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson message, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson error)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_error;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsCreateRangeError(
								message, 
								&(unsafe_error)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			error = unsafe_error;
			// Return
			return unsafe___value;
		}

		// Signature, JsCreateReferenceError, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsCreateReferenceError")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateReferenceError(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson message, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson error)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_error;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsCreateReferenceError(
								message, 
								&(unsafe_error)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			error = unsafe_error;
			// Return
			return unsafe___value;
		}

		// Signature, JsCreateSyntaxError, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsCreateSyntaxError")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateSyntaxError(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson message, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson error)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_error;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsCreateSyntaxError(
								message, 
								&(unsafe_error)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			error = unsafe_error;
			// Return
			return unsafe___value;
		}

		// Signature, JsCreateTypeError, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsCreateTypeError")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateTypeError(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson message, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson error)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_error;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsCreateTypeError(
								message, 
								&(unsafe_error)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			error = unsafe_error;
			// Return
			return unsafe___value;
		}

		// Signature, JsCreateURIError, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsCreateURIError")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateURIError(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson message, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson error)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_error;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsCreateURIError(
								message, 
								&(unsafe_error)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			error = unsafe_error;
			// Return
			return unsafe___value;
		}

		// Signature, JsHasException, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsHasException")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsHasException(out bool hasException)
		{
			// Setup
			int unsafe_hasException;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsHasException(&(unsafe_hasException));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			hasException = unsafe_hasException != 0;
			// Return
			return unsafe___value;
		}

		// Signature, JsGetAndClearException, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetAndClearException")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetAndClearException(out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson exception)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_exception;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetAndClearException(&(unsafe_exception));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			exception = unsafe_exception;
			// Return
			return unsafe___value;
		}

		// Signature, JsSetException, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsSetException")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSetException(global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson exception)
		{
			// Setup
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsSetException(exception);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, JsDisableRuntimeExecution, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptRuntime__JavascriptPOCPassingJson__ChakraBridge__JavaScriptRuntime__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsDisableRuntimeExecution")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsDisableRuntimeExecution(global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson runtime)
		{
			// Setup
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsDisableRuntimeExecution(runtime);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, JsEnableRuntimeExecution, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptRuntime__JavascriptPOCPassingJson__ChakraBridge__JavaScriptRuntime__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsEnableRuntimeExecution")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsEnableRuntimeExecution(global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson runtime)
		{
			// Setup
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsEnableRuntimeExecution(runtime);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, JsIsRuntimeExecutionDisabled, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptRuntime__JavascriptPOCPassingJson__ChakraBridge__JavaScriptRuntime__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsIsRuntimeExecutionDisabled")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsIsRuntimeExecutionDisabled(
					global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson runtime, 
					out bool isDisabled)
		{
			// Setup
			int unsafe_isDisabled;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsIsRuntimeExecutionDisabled(
								runtime, 
								&(unsafe_isDisabled)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			isDisabled = unsafe_isDisabled != 0;
			// Return
			return unsafe___value;
		}

		// Signature, JsSetObjectBeforeCollectCallback, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.PInvokeDelegateMarshaller] ChakraBridge_JavaScriptObjectBeforeCollectCallback__JavascriptPOCPassingJson__ChakraBridge__JavaScriptObjectBeforeCollectCallback__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsSetObjectBeforeCollectCallback")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSetObjectBeforeCollectCallback(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson reference, 
					global::System.IntPtr callbackState, 
					global::ChakraBridge.JavaScriptObjectBeforeCollectCallback__JavascriptPOCPassingJson beforeCollectCallback)
		{
			// Setup
			void* unsafe_beforeCollectCallback = default(void*);
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			try
			{
				// Marshalling
				unsafe_beforeCollectCallback = (void*)global::System.Runtime.InteropServices.McgModuleManager.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("ChakraBridge.JavaScriptObjectBeforeCollectCallback,JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, P" +
											"ublicKeyToken=null"), 
									beforeCollectCallback
								);
				// Call to native method
				unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsSetObjectBeforeCollectCallback(
									reference, 
									callbackState, 
									unsafe_beforeCollectCallback
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(beforeCollectCallback);
			}
		}

		// Signature, JsCreateNamedFunction, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.PInvokeDelegateMarshaller] ChakraBridge_JavaScriptNativeFunction__JavascriptPOCPassingJson__ChakraBridge__JavaScriptNativeFunction__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsCreateNamedFunction")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateNamedFunction(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson name, 
					global::ChakraBridge.JavaScriptNativeFunction__JavascriptPOCPassingJson nativeFunction, 
					global::System.IntPtr callbackState, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson function)
		{
			// Setup
			void* unsafe_nativeFunction = default(void*);
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_function;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			try
			{
				// Marshalling
				unsafe_nativeFunction = (void*)global::System.Runtime.InteropServices.McgModuleManager.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("ChakraBridge.JavaScriptNativeFunction,JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken" +
											"=null"), 
									nativeFunction
								);
				// Call to native method
				unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsCreateNamedFunction(
									name, 
									unsafe_nativeFunction, 
									callbackState, 
									&(unsafe_function)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				function = unsafe_function;
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(nativeFunction);
			}
		}

		// Signature, JsProjectWinRTNamespace, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsProjectWinRTNamespace")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsProjectWinRTNamespace(string namespaceName)
		{
			// Setup
			ushort* unsafe_namespaceName = default(ushort*);
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			fixed (char* pinned_namespaceName = namespaceName)
			{
				unsafe_namespaceName = (ushort*)pinned_namespaceName;
				// Call to native method
				unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsProjectWinRTNamespace(unsafe_namespaceName);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, JsInspectableToObject, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IUnknown, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsInspectableToObject")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsInspectableToObject(
					object inspectable, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IUnknown* unsafe_inspectable = default(global::System.Runtime.InteropServices.__vtable_IUnknown*);
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_value;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			try
			{
				// Marshalling
				unsafe_inspectable = (global::System.Runtime.InteropServices.__vtable_IUnknown*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(inspectable);
				// Call to native method
				unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsInspectableToObject(
									unsafe_inspectable, 
									&(unsafe_value)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value = unsafe_value;
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_inspectable)));
			}
		}

		// Signature, JsSetPromiseContinuationCallback, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.PInvokeDelegateMarshaller] ChakraBridge_JavaScriptPromiseContinuationCallback__JavascriptPOCPassingJson__ChakraBridge__JavaScriptPromiseContinuationCallback__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsSetPromiseContinuationCallback")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSetPromiseContinuationCallback(
					global::ChakraBridge.JavaScriptPromiseContinuationCallback__JavascriptPOCPassingJson promiseContinuationCallback, 
					global::System.IntPtr callbackState)
		{
			// Setup
			void* unsafe_promiseContinuationCallback = default(void*);
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			try
			{
				// Marshalling
				unsafe_promiseContinuationCallback = (void*)global::System.Runtime.InteropServices.McgModuleManager.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("ChakraBridge.JavaScriptPromiseContinuationCallback,JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, P" +
											"ublicKeyToken=null"), 
									promiseContinuationCallback
								);
				// Call to native method
				unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsSetPromiseContinuationCallback(
									unsafe_promiseContinuationCallback, 
									callbackState
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(promiseContinuationCallback);
			}
		}

		// Signature, JsCreateArrayBuffer, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsCreateArrayBuffer")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateArrayBuffer(
					uint byteLength, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson result)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_result;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsCreateArrayBuffer(
								byteLength, 
								&(unsafe_result)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			result = unsafe_result;
			// Return
			return unsafe___value;
		}

		// Signature, JsCreateTypedArray, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptTypedArrayType__JavascriptPOCPassingJson__JavaScriptTypedArrayType__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsCreateTypedArray")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateTypedArray(
					global::ChakraBridge.JavaScriptTypedArrayType__JavascriptPOCPassingJson arrayType, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson arrayBuffer, 
					uint byteOffset, 
					uint elementLength, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson result)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_result;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsCreateTypedArray(
								arrayType, 
								arrayBuffer, 
								byteOffset, 
								elementLength, 
								&(unsafe_result)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			result = unsafe_result;
			// Return
			return unsafe___value;
		}

		// Signature, JsCreateDataView, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsCreateDataView")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateDataView(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson arrayBuffer, 
					uint byteOffset, 
					uint byteOffsetLength, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson result)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_result;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsCreateDataView(
								arrayBuffer, 
								byteOffset, 
								byteOffsetLength, 
								&(unsafe_result)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			result = unsafe_result;
			// Return
			return unsafe___value;
		}

		// Signature, JsGetArrayBufferStorage, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetArrayBufferStorage")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetArrayBufferStorage(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson arrayBuffer, 
					out byte[] buffer, 
					out uint bufferLength)
		{
			// Setup
			byte* unsafe_buffer = default(byte*);
			uint unsafe_bufferLength;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			try
			{
				// Marshalling
				unsafe_buffer = null;
				// Call to native method
				unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetArrayBufferStorage(
									arrayBuffer, 
									&(unsafe_buffer), 
									&(unsafe_bufferLength)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				bufferLength = unsafe_bufferLength;
				if (unsafe_buffer == null)
					buffer = null;
				else
				{
					buffer = new byte[1];
					if (buffer != null)
						for (uint mcgIdx = 0; (mcgIdx < 1); mcgIdx++)
						{
							// [fwd] [out] [managedbyref] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] byte__unsigned char buffer
							buffer[mcgIdx] = unsafe_buffer[mcgIdx];
						}
				}
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_buffer);
			}
		}

		// Signature, JsGetTypedArrayStorage, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptTypedArrayType__JavascriptPOCPassingJson__JavaScriptTypedArrayType__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetTypedArrayStorage")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetTypedArrayStorage(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson typedArray, 
					out byte[] buffer, 
					out uint bufferLength, 
					out global::ChakraBridge.JavaScriptTypedArrayType__JavascriptPOCPassingJson arrayType, 
					out int elementSize)
		{
			// Setup
			byte* unsafe_buffer = default(byte*);
			uint unsafe_bufferLength;
			global::ChakraBridge.JavaScriptTypedArrayType__JavascriptPOCPassingJson unsafe_arrayType;
			int unsafe_elementSize;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			try
			{
				// Marshalling
				unsafe_buffer = null;
				// Call to native method
				unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetTypedArrayStorage(
									typedArray, 
									&(unsafe_buffer), 
									&(unsafe_bufferLength), 
									&(unsafe_arrayType), 
									&(unsafe_elementSize)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				elementSize = unsafe_elementSize;
				arrayType = unsafe_arrayType;
				bufferLength = unsafe_bufferLength;
				if (unsafe_buffer == null)
					buffer = null;
				else
				{
					buffer = new byte[1];
					if (buffer != null)
						for (uint mcgIdx = 0; (mcgIdx < 1); mcgIdx++)
						{
							// [fwd] [out] [managedbyref] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] byte__unsigned char buffer
							buffer[mcgIdx] = unsafe_buffer[mcgIdx];
						}
				}
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_buffer);
			}
		}

		// Signature, JsGetDataViewStorage, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetDataViewStorage")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetDataViewStorage(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson dataView, 
					out byte[] buffer, 
					out uint bufferLength)
		{
			// Setup
			byte* unsafe_buffer = default(byte*);
			uint unsafe_bufferLength;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			try
			{
				// Marshalling
				unsafe_buffer = null;
				// Call to native method
				unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetDataViewStorage(
									dataView, 
									&(unsafe_buffer), 
									&(unsafe_bufferLength)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				bufferLength = unsafe_bufferLength;
				if (unsafe_buffer == null)
					buffer = null;
				else
				{
					buffer = new byte[1];
					if (buffer != null)
						for (uint mcgIdx = 0; (mcgIdx < 1); mcgIdx++)
						{
							// [fwd] [out] [managedbyref] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] byte__unsigned char buffer
							buffer[mcgIdx] = unsafe_buffer[mcgIdx];
						}
				}
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_buffer);
			}
		}

		// Signature, JsGetPropertyIdType, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptPropertyId__JavascriptPOCPassingJson__ChakraBridge__JavaScriptPropertyId__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaSciptPropertyIdType__JavascriptPOCPassingJson__JavaSciptPropertyIdType__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetPropertyIdType")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetPropertyIdType(
					global::ChakraBridge.JavaScriptPropertyId__JavascriptPOCPassingJson propertyId, 
					out global::ChakraBridge.JavaSciptPropertyIdType__JavascriptPOCPassingJson propertyIdType)
		{
			// Setup
			global::ChakraBridge.JavaSciptPropertyIdType__JavascriptPOCPassingJson unsafe_propertyIdType;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetPropertyIdType(
								propertyId, 
								&(unsafe_propertyIdType)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			propertyIdType = unsafe_propertyIdType;
			// Return
			return unsafe___value;
		}

		// Signature, JsCreateSymbol, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsCreateSymbol")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateSymbol(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson description, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson symbol)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_symbol;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsCreateSymbol(
								description, 
								&(unsafe_symbol)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			symbol = unsafe_symbol;
			// Return
			return unsafe___value;
		}

		// Signature, JsGetSymbolFromPropertyId, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptPropertyId__JavascriptPOCPassingJson__ChakraBridge__JavaScriptPropertyId__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetSymbolFromPropertyId")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetSymbolFromPropertyId(
					global::ChakraBridge.JavaScriptPropertyId__JavascriptPOCPassingJson propertyId, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson symbol)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_symbol;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetSymbolFromPropertyId(
								propertyId, 
								&(unsafe_symbol)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			symbol = unsafe_symbol;
			// Return
			return unsafe___value;
		}

		// Signature, JsGetPropertyIdFromSymbol, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptPropertyId__JavascriptPOCPassingJson__ChakraBridge__JavaScriptPropertyId__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetPropertyIdFromSymbol")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetPropertyIdFromSymbol(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson symbol, 
					out global::ChakraBridge.JavaScriptPropertyId__JavascriptPOCPassingJson propertyId)
		{
			// Setup
			global::ChakraBridge.JavaScriptPropertyId__JavascriptPOCPassingJson unsafe_propertyId;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetPropertyIdFromSymbol(
								symbol, 
								&(unsafe_propertyId)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			propertyId = unsafe_propertyId;
			// Return
			return unsafe___value;
		}

		// Signature, JsGetOwnPropertySymbols, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetOwnPropertySymbols")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetOwnPropertySymbols(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					out global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson propertySymbols)
		{
			// Setup
			global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson unsafe_propertySymbols;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetOwnPropertySymbols(
								obj, 
								&(unsafe_propertySymbols)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			propertySymbols = unsafe_propertySymbols;
			// Return
			return unsafe___value;
		}

		// Signature, JsNumberToInt, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsNumberToInt")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsNumberToInt(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value, 
					out int intValue)
		{
			// Setup
			int unsafe_intValue;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsNumberToInt(
								value, 
								&(unsafe_intValue)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			intValue = unsafe_intValue;
			// Return
			return unsafe___value;
		}

		// Signature, JsSetIndexedPropertiesToExternalData, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptTypedArrayType__JavascriptPOCPassingJson__JavaScriptTypedArrayType__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsSetIndexedPropertiesToExternalData")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSetIndexedPropertiesToExternalData(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::System.IntPtr data, 
					global::ChakraBridge.JavaScriptTypedArrayType__JavascriptPOCPassingJson arrayType, 
					uint elementLength)
		{
			// Setup
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsSetIndexedPropertiesToExternalData(
								obj, 
								data, 
								arrayType, 
								elementLength
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, JsGetIndexedPropertiesExternalData, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptTypedArrayType__JavascriptPOCPassingJson__JavaScriptTypedArrayType__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsGetIndexedPropertiesExternalData")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetIndexedPropertiesExternalData(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::System.IntPtr data, 
					out global::ChakraBridge.JavaScriptTypedArrayType__JavascriptPOCPassingJson arrayType, 
					out uint elementLength)
		{
			// Setup
			global::ChakraBridge.JavaScriptTypedArrayType__JavascriptPOCPassingJson unsafe_arrayType;
			uint unsafe_elementLength;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsGetIndexedPropertiesExternalData(
								obj, 
								data, 
								&(unsafe_arrayType), 
								&(unsafe_elementLength)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			elementLength = unsafe_elementLength;
			arrayType = unsafe_arrayType;
			// Return
			return unsafe___value;
		}

		// Signature, JsHasIndexedPropertiesExternalData, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] ChakraBridge_JavaScriptErrorCode__JavascriptPOCPassingJson__JavaScriptErrorCode__JavascriptPOCPassingJson, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] ChakraBridge_JavaScriptValue__JavascriptPOCPassingJson__ChakraBridge__JavaScriptValue__JavascriptPOCPassingJson, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("JavascriptPOCPassingJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ChakraBridge.Native", "JsHasIndexedPropertiesExternalData")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsHasIndexedPropertiesExternalData(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					out bool value)
		{
			// Setup
			int unsafe_value;
			global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.chakra_dll_PInvokes.JsHasIndexedPropertiesExternalData(
								obj, 
								&(unsafe_value)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value = unsafe_value != 0;
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module '[MRT]'
	/// </summary>
	public unsafe static partial class _MRT_
	{
		// Signature, RhWaitForPendingFinalizers, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhWaitForPendingFinalizers")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static void RhWaitForPendingFinalizers(int allowReentrantWait)
		{
			// Marshalling
			// Call to native method
			global::McgInterop._MRT__PInvokes.RhWaitForPendingFinalizers(allowReentrantWait);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, RhCompatibleReentrantWaitAny, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr___ptr__w64 int *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhCompatibleReentrantWaitAny")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static int RhCompatibleReentrantWaitAny(
					int alertable, 
					int timeout, 
					int count, 
					global::System.IntPtr* handles)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop._MRT__PInvokes.RhCompatibleReentrantWaitAny(
								alertable, 
								timeout, 
								count, 
								((global::System.IntPtr*)handles)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, _ecvt_s, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] byte___ptrunsigned char *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int___ptrint *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int___ptrint *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "_ecvt_s")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static void _ecvt_s(
					byte* buffer, 
					int sizeInBytes, 
					double value, 
					int count, 
					int* dec, 
					int* sign)
		{
			// Marshalling
			// Call to native method
			global::McgInterop._MRT__PInvokes._ecvt_s(
								((byte*)buffer), 
								sizeInBytes, 
								value, 
								count, 
								((int*)dec), 
								((int*)sign)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, memmove, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] byte___ptrunsigned char *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] byte___ptrunsigned char *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "memmove")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static void memmove(
					byte* dmem, 
					byte* smem, 
					uint size)
		{
			// Marshalling
			// Call to native method
			global::McgInterop._MRT__PInvokes.memmove(
								((byte*)dmem), 
								((byte*)smem), 
								size
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-winrt-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_winrt_l1_1_0_dll
	{
		// Signature, RoInitialize, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.WinRTInterop.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "mincore+mincore_PInvokes", "RoInitialize")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static int RoInitialize(uint initType)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.api_ms_win_core_winrt_l1_1_0_dll_PInvokes.RoInitialize(initType);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-localization-l1-2-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_localization_l1_2_0_dll
	{
		// Signature, IsValidLocaleName, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] char___ptrwchar_t *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.WinRTInterop.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "mincore+mincore_PInvokes", "IsValidLocaleName")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static int IsValidLocaleName(char* lpLocaleName)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.api_ms_win_core_localization_l1_2_0_dll_PInvokes.IsValidLocaleName(((ushort*)lpLocaleName));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, ResolveLocaleName, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] char___ptrwchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] char___ptrwchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.WinRTInterop.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "mincore+mincore_PInvokes", "ResolveLocaleName")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static int ResolveLocaleName(
					char* lpNameToResolve, 
					char* lpLocaleName, 
					int cchLocaleName)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.api_ms_win_core_localization_l1_2_0_dll_PInvokes.ResolveLocaleName(
								((ushort*)lpNameToResolve), 
								((ushort*)lpLocaleName), 
								cchLocaleName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, GetCPInfoExW, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Interop_mincore_CPINFOEXW__System_Text_Encoding_CodePages___ptrInterop_mincore__CPINFOEXW__System_Text_Encoding_CodePages *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Text.Encoding.CodePages, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+mincore", "GetCPInfoExW")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static int GetCPInfoExW(
					uint CodePage, 
					uint dwFlags, 
					global::Interop.mincore.CPINFOEXW__System_Text_Encoding_CodePages* lpCPInfoEx)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.api_ms_win_core_localization_l1_2_0_dll_PInvokes.GetCPInfoExW(
								CodePage, 
								dwFlags, 
								((global::Interop.mincore.CPINFOEXW__System_Text_Encoding_CodePages*)lpCPInfoEx)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-com-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_com_l1_1_0_dll
	{
		// Signature, CoCreateInstance, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] byte___ptrunsigned char *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] byte___ptrunsigned char *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.StackTraceGenerator, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Internal.StackTraceGenerator.StackTraceGenerator", "CoCreateInstance")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static int CoCreateInstance(
					byte* rclsid, 
					global::System.IntPtr pUnkOuter, 
					int dwClsContext, 
					byte* riid, 
					out global::System.IntPtr ppv)
		{
			// Setup
			global::System.IntPtr unsafe_ppv;
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.api_ms_win_core_com_l1_1_0_dll_PInvokes.CoCreateInstance(
								((byte*)rclsid), 
								pUnkOuter, 
								dwClsContext, 
								((byte*)riid), 
								&(unsafe_ppv)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			ppv = unsafe_ppv;
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'clrcompression.dll'
	/// </summary>
	public unsafe static partial class clrcompression_dll
	{
		// Signature, deflateInit2_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] byte___ptrunsigned char *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] byte___ptrunsigned char *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.IO.Compression, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "Interop", "deflateInit2_")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static int deflateInit2_(
					byte* stream, 
					int level, 
					int method, 
					int windowBits, 
					int memLevel, 
					int strategy, 
					byte* version, 
					int stream_size)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.clrcompression_dll_PInvokes.deflateInit2_(
								((byte*)stream), 
								level, 
								method, 
								windowBits, 
								memLevel, 
								strategy, 
								((byte*)version), 
								stream_size
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, deflateEnd, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] byte___ptrunsigned char *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.IO.Compression, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "Interop", "deflateEnd")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static int deflateEnd(byte* strm)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.clrcompression_dll_PInvokes.deflateEnd(((byte*)strm));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, inflateEnd, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] byte___ptrunsigned char *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.IO.Compression, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "Interop", "inflateEnd")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static int inflateEnd(byte* stream)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.clrcompression_dll_PInvokes.inflateEnd(((byte*)stream));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, deflate, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] byte___ptrunsigned char *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.IO.Compression, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "Interop", "deflate")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static int deflate(
					byte* stream, 
					int flush)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.clrcompression_dll_PInvokes.deflate(
								((byte*)stream), 
								flush
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'OleAut32'
	/// </summary>
	public unsafe static partial class OleAut32
	{
		// Signature, SysFreeString, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.StackTraceGenerator, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Internal.LightweightInterop.MarshalExtensions", "SysFreeString")]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public static void SysFreeString(global::System.IntPtr bstr)
		{
			// Marshalling
			// Call to native method
			global::McgInterop.OleAut32_PInvokes.SysFreeString(bstr);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}
	}

	public unsafe static partial class Chakra_dll_PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateRuntime(
					global::ChakraBridge.JavaScriptRuntimeAttributes__JavascriptPOCPassingJson attributes, 
					void* threadService, 
					global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson* runtime);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCollectGarbage(global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson handle);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsDisposeRuntime(global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson handle);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetRuntimeMemoryUsage(
					global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson runtime, 
					global::System.UIntPtr* memoryUsage);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetRuntimeMemoryLimit(
					global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson runtime, 
					global::System.UIntPtr* memoryLimit);
	}

	public unsafe static partial class chakra_dll_PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSetRuntimeMemoryLimit(
					global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson runtime, 
					global::System.UIntPtr memoryLimit);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSetRuntimeMemoryAllocationCallback(
					global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson runtime, 
					global::System.IntPtr callbackState, 
					void* allocationCallback);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSetRuntimeBeforeCollectCallback(
					global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson runtime, 
					global::System.IntPtr callbackState, 
					void* beforeCollectCallback);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll", EntryPoint="JsAddRef")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsContextAddRef(
					global::ChakraBridge.JavaScriptContext__JavascriptPOCPassingJson reference, 
					uint* count);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsAddRef(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson reference, 
					uint* count);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll", EntryPoint="JsRelease")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsContextRelease(
					global::ChakraBridge.JavaScriptContext__JavascriptPOCPassingJson reference, 
					uint* count);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsRelease(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson reference, 
					uint* count);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateContext(
					global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson runtime, 
					global::ChakraBridge.JavaScriptContext__JavascriptPOCPassingJson* newContext);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetCurrentContext(global::ChakraBridge.JavaScriptContext__JavascriptPOCPassingJson* currentContext);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSetCurrentContext(global::ChakraBridge.JavaScriptContext__JavascriptPOCPassingJson context);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetRuntime(
					global::ChakraBridge.JavaScriptContext__JavascriptPOCPassingJson context, 
					global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson* runtime);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsStartDebugging();

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsIdle(uint* nextIdleTick);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsParseScript(
					ushort* script, 
					global::ChakraBridge.JavaScriptSourceContext__JavascriptPOCPassingJson sourceContext, 
					ushort* sourceUrl, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* result);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsRunScript(
					ushort* script, 
					global::ChakraBridge.JavaScriptSourceContext__JavascriptPOCPassingJson sourceContext, 
					ushort* sourceUrl, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* result);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSerializeScript(
					ushort* script, 
					byte* buffer, 
					ulong* bufferSize);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsParseSerializedScript(
					ushort* script, 
					byte* buffer, 
					global::ChakraBridge.JavaScriptSourceContext__JavascriptPOCPassingJson sourceContext, 
					ushort* sourceUrl, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* result);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsRunSerializedScript(
					ushort* script, 
					byte* buffer, 
					global::ChakraBridge.JavaScriptSourceContext__JavascriptPOCPassingJson sourceContext, 
					ushort* sourceUrl, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* result);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetPropertyIdFromName(
					ushort* name, 
					global::ChakraBridge.JavaScriptPropertyId__JavascriptPOCPassingJson* propertyId);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetPropertyNameFromId(
					global::ChakraBridge.JavaScriptPropertyId__JavascriptPOCPassingJson propertyId, 
					ushort** name);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetUndefinedValue(global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* undefinedValue);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetNullValue(global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* nullValue);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetTrueValue(global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* trueValue);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetFalseValue(global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* falseValue);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsBoolToBoolean(
					int value, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* booleanValue);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsBooleanToBool(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson booleanValue, 
					int* boolValue);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsConvertValueToBoolean(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* booleanValue);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetValueType(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value, 
					global::ChakraBridge.JavaScriptValueType__JavascriptPOCPassingJson* type);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsDoubleToNumber(
					double doubleValue, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* value);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsIntToNumber(
					int intValue, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* value);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsNumberToDouble(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value, 
					double* doubleValue);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsConvertValueToNumber(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* numberValue);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetStringLength(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson sringValue, 
					int* length);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsPointerToString(
					ushort* value, 
					global::System.UIntPtr stringLength, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* stringValue);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsStringToPointer(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value, 
					global::System.IntPtr* stringValue, 
					global::System.UIntPtr* stringLength);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsConvertValueToString(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* stringValue);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsVariantToValue(
					global::System.Runtime.InteropServices.Variant* var, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* value);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsValueToVariant(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::System.Runtime.InteropServices.Variant* var);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetGlobalObject(global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* globalObject);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateObject(global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* obj);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateExternalObject(
					global::System.IntPtr data, 
					void* finalizeCallback, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* obj);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsConvertValueToObject(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* obj);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetPrototype(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* prototypeObject);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSetPrototype(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson prototypeObject);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetExtensionAllowed(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					int* value);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsPreventExtension(global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetProperty(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptPropertyId__JavascriptPOCPassingJson propertyId, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* value);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetOwnPropertyDescriptor(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptPropertyId__JavascriptPOCPassingJson propertyId, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* propertyDescriptor);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetOwnPropertyNames(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* propertyNames);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSetProperty(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptPropertyId__JavascriptPOCPassingJson propertyId, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value, 
					int useStrictRules);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsHasProperty(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptPropertyId__JavascriptPOCPassingJson propertyId, 
					int* hasProperty);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsDeleteProperty(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptPropertyId__JavascriptPOCPassingJson propertyId, 
					int useStrictRules, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* result);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsDefineProperty(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptPropertyId__JavascriptPOCPassingJson propertyId, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson propertyDescriptor, 
					int* result);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsHasIndexedProperty(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson index, 
					int* result);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetIndexedProperty(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson index, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* result);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSetIndexedProperty(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson index, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsDeleteIndexedProperty(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson index);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsEquals(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj1, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj2, 
					int* result);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsStrictEquals(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj1, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj2, 
					int* result);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsHasExternalData(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					int* value);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetExternalData(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::System.IntPtr* externalData);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSetExternalData(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::System.IntPtr externalData);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateArray(
					uint length, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* result);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCallFunction(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson function, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* arguments, 
					ushort argumentCount, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* result);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsConstructObject(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson function, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* arguments, 
					ushort argumentCount, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* result);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateFunction(
					void* nativeFunction, 
					global::System.IntPtr externalData, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* function);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateError(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson message, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* error);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateRangeError(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson message, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* error);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateReferenceError(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson message, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* error);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateSyntaxError(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson message, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* error);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateTypeError(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson message, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* error);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateURIError(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson message, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* error);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsHasException(int* hasException);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetAndClearException(global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* exception);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSetException(global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson exception);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsDisableRuntimeExecution(global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson runtime);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsEnableRuntimeExecution(global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson runtime);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsIsRuntimeExecutionDisabled(
					global::ChakraBridge.JavaScriptRuntime__JavascriptPOCPassingJson runtime, 
					int* isDisabled);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSetObjectBeforeCollectCallback(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson reference, 
					global::System.IntPtr callbackState, 
					void* beforeCollectCallback);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateNamedFunction(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson name, 
					void* nativeFunction, 
					global::System.IntPtr callbackState, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* function);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll", EntryPoint="#400")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsProjectWinRTNamespace(ushort* namespaceName);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsInspectableToObject(
					global::System.Runtime.InteropServices.__vtable_IUnknown* inspectable, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* value);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSetPromiseContinuationCallback(
					void* promiseContinuationCallback, 
					global::System.IntPtr callbackState);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateArrayBuffer(
					uint byteLength, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* result);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateTypedArray(
					global::ChakraBridge.JavaScriptTypedArrayType__JavascriptPOCPassingJson arrayType, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson arrayBuffer, 
					uint byteOffset, 
					uint elementLength, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* result);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateDataView(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson arrayBuffer, 
					uint byteOffset, 
					uint byteOffsetLength, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* result);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetArrayBufferStorage(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson arrayBuffer, 
					byte** buffer, 
					uint* bufferLength);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetTypedArrayStorage(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson typedArray, 
					byte** buffer, 
					uint* bufferLength, 
					global::ChakraBridge.JavaScriptTypedArrayType__JavascriptPOCPassingJson* arrayType, 
					int* elementSize);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetDataViewStorage(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson dataView, 
					byte** buffer, 
					uint* bufferLength);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetPropertyIdType(
					global::ChakraBridge.JavaScriptPropertyId__JavascriptPOCPassingJson propertyId, 
					global::ChakraBridge.JavaSciptPropertyIdType__JavascriptPOCPassingJson* propertyIdType);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsCreateSymbol(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson description, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* symbol);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetSymbolFromPropertyId(
					global::ChakraBridge.JavaScriptPropertyId__JavascriptPOCPassingJson propertyId, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* symbol);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetPropertyIdFromSymbol(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson symbol, 
					global::ChakraBridge.JavaScriptPropertyId__JavascriptPOCPassingJson* propertyId);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetOwnPropertySymbols(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson* propertySymbols);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsNumberToInt(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson value, 
					int* intValue);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsSetIndexedPropertiesToExternalData(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::System.IntPtr data, 
					global::ChakraBridge.JavaScriptTypedArrayType__JavascriptPOCPassingJson arrayType, 
					uint elementLength);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsGetIndexedPropertiesExternalData(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					global::System.IntPtr data, 
					global::ChakraBridge.JavaScriptTypedArrayType__JavascriptPOCPassingJson* arrayType, 
					uint* elementLength);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("chakra.dll")]
		public extern static global::ChakraBridge.JavaScriptErrorCode__JavascriptPOCPassingJson JsHasIndexedPropertiesExternalData(
					global::ChakraBridge.JavaScriptValue__JavascriptPOCPassingJson obj, 
					int* value);
	}

	public unsafe static partial class _MRT__PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("[MRT]")]
		public extern static void RhWaitForPendingFinalizers(int allowReentrantWait);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("[MRT]")]
		public extern static int RhCompatibleReentrantWaitAny(
					int alertable, 
					int timeout, 
					int count, 
					global::System.IntPtr* handles);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("[MRT]")]
		public extern static void _ecvt_s(
					byte* buffer, 
					int sizeInBytes, 
					double value, 
					int count, 
					int* dec, 
					int* sign);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("[MRT]")]
		public extern static void memmove(
					byte* dmem, 
					byte* smem, 
					uint size);
	}

	public unsafe static partial class api_ms_win_core_winrt_l1_1_0_dll_PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-winrt-l1-1-0.dll")]
		public extern static int RoInitialize(uint initType);
	}

	public unsafe static partial class api_ms_win_core_localization_l1_2_0_dll_PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-localization-l1-2-1.dll")]
		public extern static int IsValidLocaleName(ushort* lpLocaleName);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-localization-l1-2-1.dll")]
		public extern static int ResolveLocaleName(
					ushort* lpNameToResolve, 
					ushort* lpLocaleName, 
					int cchLocaleName);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-localization-l1-2-1.dll")]
		public extern static int GetCPInfoExW(
					uint CodePage, 
					uint dwFlags, 
					global::Interop.mincore.CPINFOEXW__System_Text_Encoding_CodePages* lpCPInfoEx);
	}

	public unsafe static partial class api_ms_win_core_com_l1_1_0_dll_PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-com-l1-1-0.dll")]
		public extern static int CoCreateInstance(
					byte* rclsid, 
					global::System.IntPtr pUnkOuter, 
					int dwClsContext, 
					byte* riid, 
					global::System.IntPtr* ppv);
	}

	public unsafe static partial class clrcompression_dll_PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("clrcompression.dll")]
		public extern static int deflateInit2_(
					byte* stream, 
					int level, 
					int method, 
					int windowBits, 
					int memLevel, 
					int strategy, 
					byte* version, 
					int stream_size);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("clrcompression.dll")]
		public extern static int deflateEnd(byte* strm);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("clrcompression.dll")]
		public extern static int inflateEnd(byte* stream);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("clrcompression.dll")]
		public extern static int deflate(
					byte* stream, 
					int flush);
	}

	public unsafe static partial class OleAut32_PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("oleaut32.dll", EntryPoint="#6")]
		public extern static void SysFreeString(global::System.IntPtr bstr);
	}
}

